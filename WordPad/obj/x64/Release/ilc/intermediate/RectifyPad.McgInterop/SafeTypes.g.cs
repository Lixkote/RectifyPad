#define MCG_WINRT_SUPPORTED
using Mcg.System;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.WindowsRuntime;
using global::Windows.Foundation;
using global::Windows.Foundation.Collections;


// -----------------------------------------------------------------------------------------------------------
// 
// WARNING: THIS SOURCE FILE IS FOR 64-BIT BUILDS ONLY!
// 
// MCG GENERATED CODE
// 
// This C# source file is generated by MCG and is added into the application at compile time to support interop features.
// 
// It has three primary components:
// 
// 1. Public type definitions with interop implementation used by this application including WinRT & COM data structures and P/Invokes.
// 
// 2. The '__Interop' class containing marshaling code that acts as a bridge from managed code to native code.
// 
// 3. The 'McgNative' class containing marshaling code and native type definitions that call into native code and are called by native code.
// 
// -----------------------------------------------------------------------------------------------------------
// 
// warning CS0067: The event 'event' is never used
#pragma warning disable 67
// warning CS0169: The field 'field' is never used
#pragma warning disable 169
// warning CS0649: Field 'field' is never assigned to, and will always have its default value 0
#pragma warning disable 414
// warning CS0414: The private field 'field' is assigned but its value is never used
#pragma warning disable 649
// warning CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// warning CS0108 'member1' hides inherited member 'member2'. Use the new keyword if hiding was intended.
#pragma warning disable 108
// warning CS0114 'member1' hides inherited member 'member2'.  To make the current method override that implementation, add the override keyword. Otherwise add the new keyword.
#pragma warning disable 114
// warning CS0659 'type' overrides Object.Equals but does not override GetHashCode.
#pragma warning disable 659
// warning CS0465 Introducing a 'Finalize' method can interfere with destructor invocation. Did you intend to declare a destructor?
#pragma warning disable 465
// warning CS0028 'function declaration' has the wrong signature to be an entry point
#pragma warning disable 28
// warning CS0162 Unreachable code Detected
#pragma warning disable 162
// warning CS0628 new protected member declared in sealed class
#pragma warning disable 628

namespace _
{
	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, CharSet=global::System.Runtime.InteropServices.CharSet.Unicode)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+CPINFOEXW,System.Text.Encoding.CodePages, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f" +
		"5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_CPINFOEXW__System_Text_Encoding_CodePages
	{
		public uint MaxCharSize;
		public global::_.Interop_Kernel32_CPINFOEXW__DefaultChar_e__FixedBuffer__System_Text_Encoding_CodePages DefaultChar;
		public global::_.Interop_Kernel32_CPINFOEXW__LeadByte_e__FixedBuffer__System_Text_Encoding_CodePages LeadByte;
		public char UnicodeDefaultChar;
		public uint CodePage;
		public global::_.Interop_Kernel32_CPINFOEXW__CodePageName_e__FixedBuffer__System_Text_Encoding_CodePages CodePageName;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=2)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+CPINFOEXW+<DefaultChar>e__FixedBuffer,System.Text.Encoding.CodePages, Version=4.1.1.0, Culture=" +
		"neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_CPINFOEXW__DefaultChar_e__FixedBuffer__System_Text_Encoding_CodePages
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public byte FixedElementField;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=12)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+CPINFOEXW+<LeadByte>e__FixedBuffer,System.Text.Encoding.CodePages, Version=4.1.1.0, Culture=neu" +
		"tral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_CPINFOEXW__LeadByte_e__FixedBuffer__System_Text_Encoding_CodePages
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public byte FixedElementField;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=260)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+CPINFOEXW+<CodePageName>e__FixedBuffer,System.Text.Encoding.CodePages, Version=4.1.1.0, Culture" +
		"=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_CPINFOEXW__CodePageName_e__FixedBuffer__System_Text_Encoding_CodePages
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public byte FixedElementField;
	}
}

namespace Internal_WinRT_Interop
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.WinRT.Interop.WinRTCallbacks+DispatcherQueuePriority,System.Private.WinRTInterop.CoreLib, Version=4.0.0" +
		".0, Culture=neutral, PublicKeyToken=b77a5c561934e089")]
	public enum WinRTCallbacks_DispatcherQueuePriority__System_Private_WinRTInterop_CoreLib
	{
		Low = -10,
		Normal = 0,
		High = 10,
	}
}

namespace Internal_WinRT_Interop_WinRTCallbacks
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.WinRT.Interop.WinRTCallbacks+IDispatcherQueueHandler,System.Private.WinRTInterop.CoreLib, Version=4.0.0" +
		".0, Culture=neutral, PublicKeyToken=b77a5c561934e089")]
	public unsafe interface IDispatcherQueueHandler__System_Private_WinRTInterop_CoreLib
	{
		void Invoke();
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.WinRT.Interop.WinRTCallbacks+IDispatcherQueue,System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Cul" +
		"ture=neutral, PublicKeyToken=b77a5c561934e089")]
	public unsafe interface IDispatcherQueue__System_Private_WinRTInterop_CoreLib
	{
		object CreateTimer();

		bool TryEnqueue(global::Internal_WinRT_Interop_WinRTCallbacks.IDispatcherQueueHandler__System_Private_WinRTInterop_CoreLib callback);

		bool TryEnqueue(
					global::Internal_WinRT_Interop.WinRTCallbacks_DispatcherQueuePriority__System_Private_WinRTInterop_CoreLib priority, 
					global::Internal_WinRT_Interop_WinRTCallbacks.IDispatcherQueueHandler__System_Private_WinRTInterop_CoreLib callback);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.WinRT.Interop.WinRTCallbacks+IDispatcherQueueStatics,System.Private.WinRTInterop.CoreLib, Version=4.0.0" +
		".0, Culture=neutral, PublicKeyToken=b77a5c561934e089")]
	public unsafe interface IDispatcherQueueStatics__System_Private_WinRTInterop_CoreLib
	{
		global::Internal_WinRT_Interop_WinRTCallbacks.IDispatcherQueue__System_Private_WinRTInterop_CoreLib GetForCurrentThread();
	}
}

namespace Microsoft.UI.Xaml
{
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct XamlContract
	{
	}
}

namespace Microsoft.UI.Xaml.Automation.Peers
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class AnimatedVisualPlayerAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeer
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AnimatedVisualPlayerAutomationPeer(global::Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__IAnimatedVisualPlayerAutomationPeerFactory_CreateInstance(
								"Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__IAnimatedVisualPlayerAutomationPeerFactory_CreateInstance(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public AnimatedVisualPlayerAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class BreadcrumbBarItemAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeer, global::Windows.UI.Xaml.Automation.Provider.IInvokeProvider
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public BreadcrumbBarItemAutomationPeer(global::Microsoft.UI.Xaml.Controls.BreadcrumbBarItem owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__IBreadcrumbBarItemAutomationPeerFactory_CreateInstance(
								"Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__IBreadcrumbBarItemAutomationPeerFactory_CreateInstance(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.BreadcrumbBarItem owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.BreadcrumbBarItemAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IBreadcrumbBarItemAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public virtual void Invoke()
		{
			global::Windows.UI.Xaml.Automation.Provider.IInvokeProvider__Impl.Stubs.Invoke(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public BreadcrumbBarItemAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ColorPickerSliderAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.SliderAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeer
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ColorPickerSliderAutomationPeer(global::Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__IColorPickerSliderAutomationPeerFactory_CreateInstanceWithOwner(
								"Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__IColorPickerSliderAutomationPeerFactory_CreateInstanceWithOwner(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeerFactory__Impl.Stubs.CreateInstanceWithOwner(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeerFactory__Impl.Stubs.CreateInstanceWithOwner(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public ColorPickerSliderAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ColorSpectrumAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeer
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ColorSpectrumAutomationPeer(global::Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__IColorSpectrumAutomationPeerFactory_CreateInstanceWithOwner(
								"Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__IColorSpectrumAutomationPeerFactory_CreateInstanceWithOwner(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeerFactory__Impl.Stubs.CreateInstanceWithOwner(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeerFactory__Impl.Stubs.CreateInstanceWithOwner(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public ColorSpectrumAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class DropDownButtonAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.ButtonAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeer, global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public DropDownButtonAutomationPeer(global::Microsoft.UI.Xaml.Controls.DropDownButton owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__IDropDownButtonAutomationPeerFactory_CreateInstance(
								"Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__IDropDownButtonAutomationPeerFactory_CreateInstance(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.DropDownButton owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandCollapseState")]
		public virtual global::Windows.UI.Xaml.Automation.ExpandCollapseState get_ExpandCollapseState()
		{
			global::Windows.UI.Xaml.Automation.ExpandCollapseState __retVal = global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.get_ExpandCollapseState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual void Collapse()
		{
			global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.Collapse(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void Expand()
		{
			global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.Expand(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public DropDownButtonAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ExpanderAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeer, global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ExpanderAutomationPeer(global::Microsoft.UI.Xaml.Controls.Expander owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__IExpanderAutomationPeerFactory_CreateInstance(
								"Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__IExpanderAutomationPeerFactory_CreateInstance(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.Expander owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.ExpanderAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IExpanderAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandCollapseState")]
		public virtual global::Windows.UI.Xaml.Automation.ExpandCollapseState get_ExpandCollapseState()
		{
			global::Windows.UI.Xaml.Automation.ExpandCollapseState __retVal = global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.get_ExpandCollapseState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual void Collapse()
		{
			global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.Collapse(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void Expand()
		{
			global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.Expand(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ExpanderAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class InfoBarAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeer
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public InfoBarAutomationPeer(global::Microsoft.UI.Xaml.Controls.InfoBar owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__IInfoBarAutomationPeerFactory_CreateInstance(
								"Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__IInfoBarAutomationPeerFactory_CreateInstance(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.InfoBar owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.InfoBarAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IInfoBarAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public InfoBarAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class MenuBarAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeer
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public MenuBarAutomationPeer(global::Microsoft.UI.Xaml.Controls.MenuBar owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__IMenuBarAutomationPeerFactory_CreateInstance(
								"Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__IMenuBarAutomationPeerFactory_CreateInstance(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.MenuBar owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public MenuBarAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class MenuBarItemAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeer, global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider, global::Windows.UI.Xaml.Automation.Provider.IInvokeProvider
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public MenuBarItemAutomationPeer(global::Microsoft.UI.Xaml.Controls.MenuBarItem owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__IMenuBarItemAutomationPeerFactory_CreateInstance(
								"Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__IMenuBarItemAutomationPeerFactory_CreateInstance(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.MenuBarItem owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandCollapseState")]
		public virtual global::Windows.UI.Xaml.Automation.ExpandCollapseState get_ExpandCollapseState()
		{
			global::Windows.UI.Xaml.Automation.ExpandCollapseState __retVal = global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.get_ExpandCollapseState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual void Collapse()
		{
			global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.Collapse(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void Expand()
		{
			global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.Expand(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void Invoke()
		{
			global::Windows.UI.Xaml.Automation.Provider.IInvokeProvider__Impl.Stubs.Invoke(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public MenuBarItemAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class NavigationViewAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeer
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public NavigationViewAutomationPeer(global::Microsoft.UI.Xaml.Controls.NavigationView owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__INavigationViewAutomationPeerFactory_CreateInstance(
								"Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__INavigationViewAutomationPeerFactory_CreateInstance(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.NavigationView owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.INavigationViewAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public NavigationViewAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class NavigationViewItemAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeer, global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public NavigationViewItemAutomationPeer(global::Microsoft.UI.Xaml.Controls.NavigationViewItem owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__INavigationViewItemAutomationPeerFactory_CreateInstanceWithOwner(
								"Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__INavigationViewItemAutomationPeerFactory_CreateInstanceWithOwner(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.NavigationViewItem owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeerFactory__Impl.Stubs.CreateInstanceWithOwner(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeerFactory__Impl.Stubs.CreateInstanceWithOwner(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandCollapseState")]
		public virtual global::Windows.UI.Xaml.Automation.ExpandCollapseState get_ExpandCollapseState()
		{
			global::Windows.UI.Xaml.Automation.ExpandCollapseState __retVal = global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.get_ExpandCollapseState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual void Collapse()
		{
			global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.Collapse(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void Expand()
		{
			global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.Expand(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public NavigationViewItemAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class NumberBoxAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeer
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public NumberBoxAutomationPeer(global::Microsoft.UI.Xaml.Controls.NumberBox owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__INumberBoxAutomationPeerFactory_CreateInstance(
								"Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__INumberBoxAutomationPeerFactory_CreateInstance(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.NumberBox owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.NumberBoxAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.INumberBoxAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public NumberBoxAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class PersonPictureAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeer
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public PersonPictureAutomationPeer(global::Microsoft.UI.Xaml.Controls.PersonPicture owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__IPersonPictureAutomationPeerFactory_CreateInstanceWithOwner(
								"Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__IPersonPictureAutomationPeerFactory_CreateInstanceWithOwner(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.PersonPicture owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeerFactory__Impl.Stubs.CreateInstanceWithOwner(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeerFactory__Impl.Stubs.CreateInstanceWithOwner(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public PersonPictureAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class PipsPagerAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeer
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public PipsPagerAutomationPeer(global::Microsoft.UI.Xaml.Controls.PipsPager owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__IPipsPagerAutomationPeerFactory_CreateInstance(
								"Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__IPipsPagerAutomationPeerFactory_CreateInstance(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.PipsPager owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.PipsPagerAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IPipsPagerAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public PipsPagerAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ProgressBarAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeer
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ProgressBarAutomationPeer(global::Microsoft.UI.Xaml.Controls.ProgressBar owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__IProgressBarAutomationPeerFactory_CreateInstance(
								"Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__IProgressBarAutomationPeerFactory_CreateInstance(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.ProgressBar owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.ProgressBarAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IProgressBarAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public ProgressBarAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeer))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Provider.IRangeValueProvider))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ProgressRingAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeer, global::Windows.UI.Xaml.Automation.Provider.IRangeValueProvider
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ProgressRingAutomationPeer(global::Microsoft.UI.Xaml.Controls.ProgressRing owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__IProgressRingAutomationPeerFactory_CreateInstance(
								"Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__IProgressRingAutomationPeerFactory_CreateInstance(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.ProgressRing owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.ProgressRingAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IProgressRingAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsReadOnly")]
		public virtual bool get_IsReadOnly()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Provider.IRangeValueProvider__Impl.Stubs.get_IsReadOnly(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LargeChange")]
		public virtual double get_LargeChange()
		{
			double __retVal = global::Windows.UI.Xaml.Automation.Provider.IRangeValueProvider__Impl.Stubs.get_LargeChange(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Maximum")]
		public virtual double get_Maximum()
		{
			double __retVal = global::Windows.UI.Xaml.Automation.Provider.IRangeValueProvider__Impl.Stubs.get_Maximum(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Minimum")]
		public virtual double get_Minimum()
		{
			double __retVal = global::Windows.UI.Xaml.Automation.Provider.IRangeValueProvider__Impl.Stubs.get_Minimum(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SmallChange")]
		public virtual double get_SmallChange()
		{
			double __retVal = global::Windows.UI.Xaml.Automation.Provider.IRangeValueProvider__Impl.Stubs.get_SmallChange(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Value")]
		public virtual double get_Value()
		{
			double __retVal = global::Windows.UI.Xaml.Automation.Provider.IRangeValueProvider__Impl.Stubs.get_Value(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual void SetValue(double value)
		{
			global::Windows.UI.Xaml.Automation.Provider.IRangeValueProvider__Impl.Stubs.SetValue(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ProgressRingAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RadioButtonsAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeer
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public RadioButtonsAutomationPeer(global::Microsoft.UI.Xaml.Controls.RadioButtons owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__IRadioButtonsAutomationPeerFactory_CreateInstance(
								"Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__IRadioButtonsAutomationPeerFactory_CreateInstance(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.RadioButtons owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.RadioButtonsAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public RadioButtonsAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RatingControlAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeer
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public RatingControlAutomationPeer(global::Microsoft.UI.Xaml.Controls.RatingControl owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__IRatingControlAutomationPeerFactory_CreateInstanceWithOwner(
								"Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__IRatingControlAutomationPeerFactory_CreateInstanceWithOwner(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.RatingControl owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeerFactory__Impl.Stubs.CreateInstanceWithOwner(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeerFactory__Impl.Stubs.CreateInstanceWithOwner(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public RatingControlAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RepeaterAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeer
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public RepeaterAutomationPeer(global::Microsoft.UI.Xaml.Controls.ItemsRepeater owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__IRepeaterAutomationPeerFactory_CreateInstance(
								"Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__IRepeaterAutomationPeerFactory_CreateInstance(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.ItemsRepeater owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public RepeaterAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeer))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Provider.IInvokeProvider))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class SplitButtonAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeer, global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider, global::Windows.UI.Xaml.Automation.Provider.IInvokeProvider
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public SplitButtonAutomationPeer(global::Microsoft.UI.Xaml.Controls.SplitButton owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__ISplitButtonAutomationPeerFactory_CreateInstance(
								"Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__ISplitButtonAutomationPeerFactory_CreateInstance(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.SplitButton owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandCollapseState")]
		public virtual global::Windows.UI.Xaml.Automation.ExpandCollapseState get_ExpandCollapseState()
		{
			global::Windows.UI.Xaml.Automation.ExpandCollapseState __retVal = global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.get_ExpandCollapseState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual void Collapse()
		{
			global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.Collapse(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void Expand()
		{
			global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.Expand(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void Invoke()
		{
			global::Windows.UI.Xaml.Automation.Provider.IInvokeProvider__Impl.Stubs.Invoke(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public SplitButtonAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class TabViewAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeer
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public TabViewAutomationPeer(global::Microsoft.UI.Xaml.Controls.TabView owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__ITabViewAutomationPeerFactory_CreateInstance(
								"Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__ITabViewAutomationPeerFactory_CreateInstance(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.TabView owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.TabViewAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.ITabViewAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public TabViewAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class TabViewItemAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeer
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public TabViewItemAutomationPeer(global::Microsoft.UI.Xaml.Controls.TabViewItem owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__ITabViewItemAutomationPeerFactory_CreateInstance(
								"Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__ITabViewItemAutomationPeerFactory_CreateInstance(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.TabViewItem owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.TabViewItemAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.ITabViewItemAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public TabViewItemAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class TeachingTipAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeer
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public TeachingTipAutomationPeer(global::Microsoft.UI.Xaml.Controls.TeachingTip owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__ITeachingTipAutomationPeerFactory_CreateInstance(
								"Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__ITeachingTipAutomationPeerFactory_CreateInstance(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.TeachingTip owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public TeachingTipAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeer))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Provider.IToggleProvider))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ToggleSplitButtonAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeer, global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider, global::Windows.UI.Xaml.Automation.Provider.IToggleProvider
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ToggleSplitButtonAutomationPeer(global::Microsoft.UI.Xaml.Controls.ToggleSplitButton owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__IToggleSplitButtonAutomationPeerFactory_CreateInstance(
								"Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__IToggleSplitButtonAutomationPeerFactory_CreateInstance(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.ToggleSplitButton owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandCollapseState")]
		public virtual global::Windows.UI.Xaml.Automation.ExpandCollapseState get_ExpandCollapseState()
		{
			global::Windows.UI.Xaml.Automation.ExpandCollapseState __retVal = global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.get_ExpandCollapseState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual void Collapse()
		{
			global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.Collapse(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void Expand()
		{
			global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.Expand(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ToggleState")]
		public virtual global::Windows.UI.Xaml.Automation.ToggleState get_ToggleState()
		{
			global::Windows.UI.Xaml.Automation.ToggleState __retVal = global::Windows.UI.Xaml.Automation.Provider.IToggleProvider__Impl.Stubs.get_ToggleState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual void Toggle()
		{
			global::Windows.UI.Xaml.Automation.Provider.IToggleProvider__Impl.Stubs.Toggle(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ToggleSplitButtonAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class TreeViewItemAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.ListViewItemAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeer, global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public TreeViewItemAutomationPeer(global::Microsoft.UI.Xaml.Controls.TreeViewItem owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__ITreeViewItemAutomationPeerFactory_CreateInstanceWithOwner(
								"Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__ITreeViewItemAutomationPeerFactory_CreateInstanceWithOwner(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.TreeViewItem owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeerFactory__Impl.Stubs.CreateInstanceWithOwner(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeerFactory__Impl.Stubs.CreateInstanceWithOwner(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandCollapseState")]
		public virtual global::Windows.UI.Xaml.Automation.ExpandCollapseState get_ExpandCollapseState()
		{
			global::Windows.UI.Xaml.Automation.ExpandCollapseState __retVal = global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.get_ExpandCollapseState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual void Collapse()
		{
			global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.Collapse(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void Expand()
		{
			global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.Expand(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public TreeViewItemAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeer))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class TreeViewItemDataAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.ItemAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeer, global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public TreeViewItemDataAutomationPeer(
					object item, 
					global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer parent) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__ITreeViewItemDataAutomationPeerFactory_CreateInstanceWithOwner(
								"Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer", 
								item, 
								parent
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__ITreeViewItemDataAutomationPeerFactory_CreateInstanceWithOwner(
					string typeName, 
					object item, 
					global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer parent)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.TreeViewItemDataAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeerFactory__Impl.Stubs.CreateInstanceWithOwner(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeerFactory).TypeHandle
													), 
									item, 
									parent, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeerFactory__Impl.Stubs.CreateInstanceWithOwner(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemDataAutomationPeerFactory).TypeHandle
													), 
									item, 
									parent, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandCollapseState")]
		public virtual global::Windows.UI.Xaml.Automation.ExpandCollapseState get_ExpandCollapseState()
		{
			global::Windows.UI.Xaml.Automation.ExpandCollapseState __retVal = global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.get_ExpandCollapseState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual void Collapse()
		{
			global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.Collapse(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void Expand()
		{
			global::Windows.UI.Xaml.Automation.Provider.IExpandCollapseProvider__Impl.Stubs.Expand(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public TreeViewItemDataAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class TreeViewListAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.ListViewAutomationPeer, global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeer
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public TreeViewListAutomationPeer(global::Microsoft.UI.Xaml.Controls.TreeViewList owner) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Automation_Peers__ITreeViewListAutomationPeerFactory_CreateInstanceWithOwner(
								"Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer", 
								owner
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Automation_Peers__ITreeViewListAutomationPeerFactory_CreateInstanceWithOwner(
					string typeName, 
					global::Microsoft.UI.Xaml.Controls.TreeViewList owner)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeerFactory__Impl.Stubs.CreateInstanceWithOwner(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeerFactory__Impl.Stubs.CreateInstanceWithOwner(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeerFactory).TypeHandle
													), 
									owner, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public TreeViewListAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimatedVisualPlayerAutomationPeerFactory
	{
		global::System.IntPtr CreateInstance(
					global::Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimatedVisualPlayerAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBreadcrumbBarItemAutomationPeerFactory
	{
		global::System.IntPtr CreateInstance(
					global::Microsoft.UI.Xaml.Controls.BreadcrumbBarItem owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBreadcrumbBarItemAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColorPickerSliderAutomationPeerFactory
	{
		global::System.IntPtr CreateInstanceWithOwner(
					global::Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColorPickerSliderAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColorSpectrumAutomationPeerFactory
	{
		global::System.IntPtr CreateInstanceWithOwner(
					global::Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColorSpectrumAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDropDownButtonAutomationPeerFactory
	{
		global::System.IntPtr CreateInstance(
					global::Microsoft.UI.Xaml.Controls.DropDownButton owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDropDownButtonAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IExpanderAutomationPeerFactory
	{
		global::System.IntPtr CreateInstance(
					global::Microsoft.UI.Xaml.Controls.Expander owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IExpanderAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInfoBarAutomationPeerFactory
	{
		global::System.IntPtr CreateInstance(
					global::Microsoft.UI.Xaml.Controls.InfoBar owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInfoBarAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMenuBarAutomationPeerFactory
	{
		global::System.IntPtr CreateInstance(
					global::Microsoft.UI.Xaml.Controls.MenuBar owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMenuBarAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMenuBarItemAutomationPeerFactory
	{
		global::System.IntPtr CreateInstance(
					global::Microsoft.UI.Xaml.Controls.MenuBarItem owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMenuBarItemAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewAutomationPeerFactory
	{
		global::System.IntPtr CreateInstance(
					global::Microsoft.UI.Xaml.Controls.NavigationView owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemAutomationPeerFactory
	{
		global::System.IntPtr CreateInstanceWithOwner(
					global::Microsoft.UI.Xaml.Controls.NavigationViewItem owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INumberBoxAutomationPeerFactory
	{
		global::System.IntPtr CreateInstance(
					global::Microsoft.UI.Xaml.Controls.NumberBox owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INumberBoxAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPersonPictureAutomationPeerFactory
	{
		global::System.IntPtr CreateInstanceWithOwner(
					global::Microsoft.UI.Xaml.Controls.PersonPicture owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPersonPictureAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPipsPagerAutomationPeerFactory
	{
		global::System.IntPtr CreateInstance(
					global::Microsoft.UI.Xaml.Controls.PipsPager owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPipsPagerAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IProgressBarAutomationPeerFactory
	{
		global::System.IntPtr CreateInstance(
					global::Microsoft.UI.Xaml.Controls.ProgressBar owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IProgressBarAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IProgressRingAutomationPeerFactory
	{
		global::System.IntPtr CreateInstance(
					global::Microsoft.UI.Xaml.Controls.ProgressRing owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IProgressRingAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRadioButtonsAutomationPeerFactory
	{
		global::System.IntPtr CreateInstance(
					global::Microsoft.UI.Xaml.Controls.RadioButtons owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRadioButtonsAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRatingControlAutomationPeerFactory
	{
		global::System.IntPtr CreateInstanceWithOwner(
					global::Microsoft.UI.Xaml.Controls.RatingControl owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRatingControlAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRepeaterAutomationPeerFactory
	{
		global::System.IntPtr CreateInstance(
					global::Microsoft.UI.Xaml.Controls.ItemsRepeater owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRepeaterAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISplitButtonAutomationPeerFactory
	{
		global::System.IntPtr CreateInstance(
					global::Microsoft.UI.Xaml.Controls.SplitButton owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISplitButtonAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITabViewAutomationPeerFactory
	{
		global::System.IntPtr CreateInstance(
					global::Microsoft.UI.Xaml.Controls.TabView owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITabViewAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITabViewItemAutomationPeerFactory
	{
		global::System.IntPtr CreateInstance(
					global::Microsoft.UI.Xaml.Controls.TabViewItem owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITabViewItemAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITeachingTipAutomationPeerFactory
	{
		global::System.IntPtr CreateInstance(
					global::Microsoft.UI.Xaml.Controls.TeachingTip owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITeachingTipAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IToggleSplitButtonAutomationPeerFactory
	{
		global::System.IntPtr CreateInstance(
					global::Microsoft.UI.Xaml.Controls.ToggleSplitButton owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IToggleSplitButtonAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewItemAutomationPeerFactory
	{
		global::System.IntPtr CreateInstanceWithOwner(
					global::Microsoft.UI.Xaml.Controls.TreeViewItem owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewItemAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewItemDataAutomationPeerFactory
	{
		global::System.IntPtr CreateInstanceWithOwner(
					object item, 
					global::Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer parent, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewListAutomationPeerFactory
	{
		global::System.IntPtr CreateInstanceWithOwner(
					global::Microsoft.UI.Xaml.Controls.TreeViewList owner, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewListAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewItemDataAutomationPeer
	{
	}
}

namespace Microsoft.UI.Xaml.Controls
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IXamlControlsResources))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IXamlControlsResources3))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(131072)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class XamlControlsResources : global::Windows.UI.Xaml.ResourceDictionary, global::Microsoft.UI.Xaml.Controls.IXamlControlsResources, global::Microsoft.UI.Xaml.Controls.IXamlControlsResources3
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public XamlControlsResources() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Microsoft.UI.Xaml.Controls.XamlControlsResources");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ControlsResourcesVersion")]
		public global::Microsoft.UI.Xaml.Controls.ControlsResourcesVersion get_ControlsResourcesVersion()
		{
			global::Microsoft.UI.Xaml.Controls.ControlsResourcesVersion __retVal = global::Microsoft.UI.Xaml.Controls.IXamlControlsResources3__Impl.Stubs.get_ControlsResourcesVersion(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ControlsResourcesVersion")]
		public void put_ControlsResourcesVersion(global::Microsoft.UI.Xaml.Controls.ControlsResourcesVersion value)
		{
			global::Microsoft.UI.Xaml.Controls.IXamlControlsResources3__Impl.Stubs.put_ControlsResourcesVersion(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ControlsResourcesVersionProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ControlsResourcesVersionProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IXamlControlsResourcesStatics3_get_ControlsResourcesVersionProperty("Microsoft.UI.Xaml.Controls.XamlControlsResources");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IXamlControlsResourcesStatics3_get_ControlsResourcesVersionProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IXamlControlsResourcesStatics3__Impl.Stubs.get_ControlsResourcesVersionProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IXamlControlsResourcesStatics3).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static void EnsureRevealLights(global::Windows.UI.Xaml.UIElement element)
		{
			__Factory_Microsoft_UI_Xaml_Controls__IXamlControlsResourcesStatics_EnsureRevealLights(
								"Microsoft.UI.Xaml.Controls.XamlControlsResources", 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Microsoft_UI_Xaml_Controls__IXamlControlsResourcesStatics_EnsureRevealLights(
					string typeName, 
					global::Windows.UI.Xaml.UIElement element)
		{
			global::Microsoft.UI.Xaml.Controls.IXamlControlsResourcesStatics__Impl.Stubs.EnsureRevealLights(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.UI.Xaml.Controls.IXamlControlsResourcesStatics).TypeHandle
												), 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public XamlControlsResources(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedIcon))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class AnimatedIcon : global::Windows.UI.Xaml.Controls.IconElement, global::Microsoft.UI.Xaml.Controls.IAnimatedIcon
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AnimatedIcon() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IAnimatedIconFactory_CreateInstance("Microsoft.UI.Xaml.Controls.AnimatedIcon");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IAnimatedIconFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.AnimatedIcon).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IAnimatedIconFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedIconFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IAnimatedIconFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedIconFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		public virtual global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2 get_Source()
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2 __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedIcon__Impl.Stubs.get_Source(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Source")]
		public virtual void put_Source(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2 value)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedIcon__Impl.Stubs.put_Source(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FallbackIconSource")]
		public virtual global::Microsoft.UI.Xaml.Controls.IconSource get_FallbackIconSource()
		{
			global::Microsoft.UI.Xaml.Controls.IconSource __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedIcon__Impl.Stubs.get_FallbackIconSource(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FallbackIconSource")]
		public virtual void put_FallbackIconSource(global::Microsoft.UI.Xaml.Controls.IconSource value)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedIcon__Impl.Stubs.put_FallbackIconSource(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MirroredWhenRightToLeft")]
		public virtual bool get_MirroredWhenRightToLeft()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedIcon__Impl.Stubs.get_MirroredWhenRightToLeft(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MirroredWhenRightToLeft")]
		public virtual void put_MirroredWhenRightToLeft(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedIcon__Impl.Stubs.put_MirroredWhenRightToLeft(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StateProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_StateProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IAnimatedIconStatics_get_StateProperty("Microsoft.UI.Xaml.Controls.AnimatedIcon");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IAnimatedIconStatics_get_StateProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IAnimatedIconStatics__Impl.Stubs.get_StateProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedIconStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static void SetState(
					global::Windows.UI.Xaml.DependencyObject @object, 
					string value)
		{
			__Factory_Microsoft_UI_Xaml_Controls__IAnimatedIconStatics_SetState(
								"Microsoft.UI.Xaml.Controls.AnimatedIcon", 
								@object, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Microsoft_UI_Xaml_Controls__IAnimatedIconStatics_SetState(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject @object, 
					string value)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedIconStatics__Impl.Stubs.SetState(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedIconStatics).TypeHandle
												), 
								@object, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static string GetState(global::Windows.UI.Xaml.DependencyObject @object)
		{
			string retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IAnimatedIconStatics_GetState(
								"Microsoft.UI.Xaml.Controls.AnimatedIcon", 
								@object
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static string __Factory_Microsoft_UI_Xaml_Controls__IAnimatedIconStatics_GetState(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject @object)
		{
			string __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IAnimatedIconStatics__Impl.Stubs.GetState(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedIconStatics).TypeHandle
												), 
								@object
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IAnimatedIconStatics_get_SourceProperty("Microsoft.UI.Xaml.Controls.AnimatedIcon");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IAnimatedIconStatics_get_SourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IAnimatedIconStatics__Impl.Stubs.get_SourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedIconStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FallbackIconSourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_FallbackIconSourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IAnimatedIconStatics_get_FallbackIconSourceProperty("Microsoft.UI.Xaml.Controls.AnimatedIcon");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IAnimatedIconStatics_get_FallbackIconSourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IAnimatedIconStatics__Impl.Stubs.get_FallbackIconSourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedIconStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MirroredWhenRightToLeftProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MirroredWhenRightToLeftProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IAnimatedIconStatics_get_MirroredWhenRightToLeftProperty("Microsoft.UI.Xaml.Controls.AnimatedIcon");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IAnimatedIconStatics_get_MirroredWhenRightToLeftProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IAnimatedIconStatics__Impl.Stubs.get_MirroredWhenRightToLeftProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedIconStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public AnimatedIcon(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IIconSource))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class IconSource : global::Windows.UI.Xaml.DependencyObject, global::Microsoft.UI.Xaml.Controls.IIconSource
	{
		public virtual global::Windows.UI.Xaml.Controls.IconElement CreateIconElement()
		{
			global::Windows.UI.Xaml.Controls.IconElement __retVal = global::Microsoft.UI.Xaml.Controls.IIconSource__Impl.Stubs.CreateIconElement(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Foreground")]
		public virtual global::Windows.UI.Xaml.Media.Brush get_Foreground()
		{
			global::Windows.UI.Xaml.Media.Brush __retVal = global::Microsoft.UI.Xaml.Controls.IIconSource__Impl.Stubs.get_Foreground(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Foreground")]
		public virtual void put_Foreground(global::Windows.UI.Xaml.Media.Brush value)
		{
			global::Microsoft.UI.Xaml.Controls.IIconSource__Impl.Stubs.put_Foreground(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ForegroundProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ForegroundProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IIconSourceStatics_get_ForegroundProperty("Microsoft.UI.Xaml.Controls.IconSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IIconSourceStatics_get_ForegroundProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IIconSourceStatics__Impl.Stubs.get_ForegroundProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IIconSourceStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public IconSource(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IBackdropMaterial))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class BackdropMaterial : global::Windows.UI.Xaml.DependencyObject, global::Microsoft.UI.Xaml.Controls.IBackdropMaterial
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ApplyToRootOrPageBackgroundProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ApplyToRootOrPageBackgroundProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IBackdropMaterialStatics_get_ApplyToRootOrPageBackgroundProperty("Microsoft.UI.Xaml.Controls.BackdropMaterial");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IBackdropMaterialStatics_get_ApplyToRootOrPageBackgroundProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IBackdropMaterialStatics__Impl.Stubs.get_ApplyToRootOrPageBackgroundProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IBackdropMaterialStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static void SetApplyToRootOrPageBackground(
					global::Windows.UI.Xaml.Controls.Control element, 
					bool value)
		{
			__Factory_Microsoft_UI_Xaml_Controls__IBackdropMaterialStatics_SetApplyToRootOrPageBackground(
								"Microsoft.UI.Xaml.Controls.BackdropMaterial", 
								element, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Microsoft_UI_Xaml_Controls__IBackdropMaterialStatics_SetApplyToRootOrPageBackground(
					string typeName, 
					global::Windows.UI.Xaml.Controls.Control element, 
					bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IBackdropMaterialStatics__Impl.Stubs.SetApplyToRootOrPageBackground(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.UI.Xaml.Controls.IBackdropMaterialStatics).TypeHandle
												), 
								element, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static bool GetApplyToRootOrPageBackground(global::Windows.UI.Xaml.Controls.Control element)
		{
			bool retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IBackdropMaterialStatics_GetApplyToRootOrPageBackground(
								"Microsoft.UI.Xaml.Controls.BackdropMaterial", 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static bool __Factory_Microsoft_UI_Xaml_Controls__IBackdropMaterialStatics_GetApplyToRootOrPageBackground(
					string typeName, 
					global::Windows.UI.Xaml.Controls.Control element)
		{
			bool __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IBackdropMaterialStatics__Impl.Stubs.GetApplyToRootOrPageBackground(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.UI.Xaml.Controls.IBackdropMaterialStatics).TypeHandle
												), 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public BackdropMaterial(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ISplitButton))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class SplitButton : global::Windows.UI.Xaml.Controls.ContentControl, global::Microsoft.UI.Xaml.Controls.ISplitButton
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public SplitButton() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ISplitButtonFactory_CreateInstance("Microsoft.UI.Xaml.Controls.SplitButton");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__ISplitButtonFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.SplitButton).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.ISplitButtonFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ISplitButtonFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.ISplitButtonFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ISplitButtonFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Flyout")]
		public virtual global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase get_Flyout()
		{
			global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase __retVal = global::Microsoft.UI.Xaml.Controls.ISplitButton__Impl.Stubs.get_Flyout(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Flyout")]
		public virtual void put_Flyout(global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase value)
		{
			global::Microsoft.UI.Xaml.Controls.ISplitButton__Impl.Stubs.put_Flyout(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Command")]
		public virtual global::System.Windows.Input.ICommand get_Command()
		{
			global::System.Windows.Input.ICommand __retVal = global::Microsoft.UI.Xaml.Controls.ISplitButton__Impl.Stubs.get_Command(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Command")]
		public virtual void put_Command(global::System.Windows.Input.ICommand value)
		{
			global::Microsoft.UI.Xaml.Controls.ISplitButton__Impl.Stubs.put_Command(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CommandParameter")]
		public virtual object get_CommandParameter()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ISplitButton__Impl.Stubs.get_CommandParameter(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CommandParameter")]
		public virtual void put_CommandParameter(object value)
		{
			global::Microsoft.UI.Xaml.Controls.ISplitButton__Impl.Stubs.put_CommandParameter(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Click")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Click(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SplitButton, global::Microsoft.UI.Xaml.Controls.SplitButtonClickEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ISplitButton__Impl.Stubs.add_Click(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Click")]
		public virtual void remove_Click(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ISplitButton__Impl.Stubs.remove_Click(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FlyoutProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_FlyoutProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ISplitButtonStatics_get_FlyoutProperty("Microsoft.UI.Xaml.Controls.SplitButton");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ISplitButtonStatics_get_FlyoutProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ISplitButtonStatics__Impl.Stubs.get_FlyoutProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ISplitButtonStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CommandProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CommandProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ISplitButtonStatics_get_CommandProperty("Microsoft.UI.Xaml.Controls.SplitButton");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ISplitButtonStatics_get_CommandProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ISplitButtonStatics__Impl.Stubs.get_CommandProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ISplitButtonStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CommandParameterProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CommandParameterProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ISplitButtonStatics_get_CommandParameterProperty("Microsoft.UI.Xaml.Controls.SplitButton");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ISplitButtonStatics_get_CommandParameterProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ISplitButtonStatics__Impl.Stubs.get_CommandParameterProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ISplitButtonStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public SplitButton(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ISplitButtonClickEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SplitButtonClickEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.ISplitButtonClickEventArgs
	{
		public SplitButtonClickEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IMenuBar))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class MenuBar : global::Windows.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.IMenuBar
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public MenuBar() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IMenuBarFactory_CreateInstance("Microsoft.UI.Xaml.Controls.MenuBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IMenuBarFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.MenuBar).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IMenuBarFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IMenuBarFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IMenuBarFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IMenuBarFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Items")]
		public virtual global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.MenuBarItem> get_Items()
		{
			global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.MenuBarItem> __retVal = global::Microsoft.UI.Xaml.Controls.IMenuBar__Impl.Stubs.get_Items(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ItemsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IMenuBarStatics_get_ItemsProperty("Microsoft.UI.Xaml.Controls.MenuBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IMenuBarStatics_get_ItemsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IMenuBarStatics__Impl.Stubs.get_ItemsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IMenuBarStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public MenuBar(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IMenuBarItem))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class MenuBarItem : global::Windows.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.IMenuBarItem
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public MenuBarItem() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IMenuBarItemFactory_CreateInstance("Microsoft.UI.Xaml.Controls.MenuBarItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IMenuBarItemFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.MenuBarItem).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IMenuBarItemFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IMenuBarItemFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IMenuBarItemFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IMenuBarItemFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Title")]
		public virtual string get_Title()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.IMenuBarItem__Impl.Stubs.get_Title(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Title")]
		public virtual void put_Title(string value)
		{
			global::Microsoft.UI.Xaml.Controls.IMenuBarItem__Impl.Stubs.put_Title(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Items")]
		public virtual global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.MenuFlyoutItemBase> get_Items()
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.MenuFlyoutItemBase> __retVal = global::Microsoft.UI.Xaml.Controls.IMenuBarItem__Impl.Stubs.get_Items(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TitleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TitleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IMenuBarItemStatics_get_TitleProperty("Microsoft.UI.Xaml.Controls.MenuBarItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IMenuBarItemStatics_get_TitleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IMenuBarItemStatics__Impl.Stubs.get_TitleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IMenuBarItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ItemsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IMenuBarItemStatics_get_ItemsProperty("Microsoft.UI.Xaml.Controls.MenuBarItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IMenuBarItemStatics_get_ItemsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IMenuBarItemStatics__Impl.Stubs.get_ItemsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IMenuBarItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public MenuBarItem(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(131072)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class AnimatedVisualPlayer : global::Windows.UI.Xaml.FrameworkElement, global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer, global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AnimatedVisualPlayer() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IAnimatedVisualPlayerFactory_CreateInstance("Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IAnimatedVisualPlayerFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Diagnostics")]
		public virtual object get_Diagnostics()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer__Impl.Stubs.get_Diagnostics(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Duration")]
		public virtual global::System.TimeSpan get_Duration()
		{
			global::System.TimeSpan __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer__Impl.Stubs.get_Duration(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		public virtual global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource get_Source()
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer__Impl.Stubs.get_Source(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Source")]
		public virtual void put_Source(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource value)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer__Impl.Stubs.put_Source(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FallbackContent")]
		public virtual global::Windows.UI.Xaml.DataTemplate get_FallbackContent()
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer__Impl.Stubs.get_FallbackContent(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FallbackContent")]
		public virtual void put_FallbackContent(global::Windows.UI.Xaml.DataTemplate value)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer__Impl.Stubs.put_FallbackContent(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AutoPlay")]
		public virtual bool get_AutoPlay()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer__Impl.Stubs.get_AutoPlay(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AutoPlay")]
		public virtual void put_AutoPlay(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer__Impl.Stubs.put_AutoPlay(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAnimatedVisualLoaded")]
		public virtual bool get_IsAnimatedVisualLoaded()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer__Impl.Stubs.get_IsAnimatedVisualLoaded(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPlaying")]
		public virtual bool get_IsPlaying()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer__Impl.Stubs.get_IsPlaying(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlaybackRate")]
		public virtual double get_PlaybackRate()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer__Impl.Stubs.get_PlaybackRate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PlaybackRate")]
		public virtual void put_PlaybackRate(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer__Impl.Stubs.put_PlaybackRate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ProgressObject")]
		public virtual global::Windows.UI.Composition.CompositionObject get_ProgressObject()
		{
			global::Windows.UI.Composition.CompositionObject __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer__Impl.Stubs.get_ProgressObject(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Stretch")]
		public virtual global::Windows.UI.Xaml.Media.Stretch get_Stretch()
		{
			global::Windows.UI.Xaml.Media.Stretch __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer__Impl.Stubs.get_Stretch(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Stretch")]
		public virtual void put_Stretch(global::Windows.UI.Xaml.Media.Stretch value)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer__Impl.Stubs.put_Stretch(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void Pause()
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer__Impl.Stubs.Pause(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual global::Windows.Foundation.IAsyncAction PlayAsync(
					double fromProgress, 
					double toProgress, 
					bool looped)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer__Impl.Stubs.PlayAsync(
								this, 
								fromProgress, 
								toProgress, 
								looped
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual void Resume()
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer__Impl.Stubs.Resume(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void SetProgress(double progress)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer__Impl.Stubs.SetProgress(
								this, 
								progress
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void Stop()
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer__Impl.Stubs.Stop(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AnimationOptimization")]
		public virtual global::Microsoft.UI.Xaml.Controls.PlayerAnimationOptimization get_AnimationOptimization()
		{
			global::Microsoft.UI.Xaml.Controls.PlayerAnimationOptimization __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer2__Impl.Stubs.get_AnimationOptimization(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AnimationOptimization")]
		public virtual void put_AnimationOptimization(global::Microsoft.UI.Xaml.Controls.PlayerAnimationOptimization value)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayer2__Impl.Stubs.put_AnimationOptimization(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AnimationOptimizationProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_AnimationOptimizationProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IAnimatedVisualPlayerStatics2_get_AnimationOptimizationProperty("Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IAnimatedVisualPlayerStatics2_get_AnimationOptimizationProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics2__Impl.Stubs.get_AnimationOptimizationProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AutoPlayProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_AutoPlayProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IAnimatedVisualPlayerStatics_get_AutoPlayProperty("Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IAnimatedVisualPlayerStatics_get_AutoPlayProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics__Impl.Stubs.get_AutoPlayProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DiagnosticsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_DiagnosticsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IAnimatedVisualPlayerStatics_get_DiagnosticsProperty("Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IAnimatedVisualPlayerStatics_get_DiagnosticsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics__Impl.Stubs.get_DiagnosticsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DurationProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_DurationProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IAnimatedVisualPlayerStatics_get_DurationProperty("Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IAnimatedVisualPlayerStatics_get_DurationProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics__Impl.Stubs.get_DurationProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FallbackContentProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_FallbackContentProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IAnimatedVisualPlayerStatics_get_FallbackContentProperty("Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IAnimatedVisualPlayerStatics_get_FallbackContentProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics__Impl.Stubs.get_FallbackContentProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAnimatedVisualLoadedProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsAnimatedVisualLoadedProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IAnimatedVisualPlayerStatics_get_IsAnimatedVisualLoadedProperty("Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IAnimatedVisualPlayerStatics_get_IsAnimatedVisualLoadedProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics__Impl.Stubs.get_IsAnimatedVisualLoadedProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPlayingProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsPlayingProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IAnimatedVisualPlayerStatics_get_IsPlayingProperty("Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IAnimatedVisualPlayerStatics_get_IsPlayingProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics__Impl.Stubs.get_IsPlayingProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlaybackRateProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PlaybackRateProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IAnimatedVisualPlayerStatics_get_PlaybackRateProperty("Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IAnimatedVisualPlayerStatics_get_PlaybackRateProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics__Impl.Stubs.get_PlaybackRateProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IAnimatedVisualPlayerStatics_get_SourceProperty("Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IAnimatedVisualPlayerStatics_get_SourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics__Impl.Stubs.get_SourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StretchProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_StretchProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IAnimatedVisualPlayerStatics_get_StretchProperty("Microsoft.UI.Xaml.Controls.AnimatedVisualPlayer");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IAnimatedVisualPlayerStatics_get_StretchProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics__Impl.Stubs.get_StretchProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualPlayerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public AnimatedVisualPlayer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IBreadcrumbBarItem))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class BreadcrumbBarItem : global::Windows.UI.Xaml.Controls.ContentControl, global::Microsoft.UI.Xaml.Controls.IBreadcrumbBarItem
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public BreadcrumbBarItem() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IBreadcrumbBarItemFactory_CreateInstance("Microsoft.UI.Xaml.Controls.BreadcrumbBarItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IBreadcrumbBarItemFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.BreadcrumbBarItem).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IBreadcrumbBarItemFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IBreadcrumbBarItemFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IBreadcrumbBarItemFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IBreadcrumbBarItemFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public BreadcrumbBarItem(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IColorChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ColorChangedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IColorChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OldColor")]
		public global::Windows.UI.Color get_OldColor()
		{
			global::Windows.UI.Color __retVal = global::Microsoft.UI.Xaml.Controls.IColorChangedEventArgs__Impl.Stubs.get_OldColor(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NewColor")]
		public global::Windows.UI.Color get_NewColor()
		{
			global::Windows.UI.Color __retVal = global::Microsoft.UI.Xaml.Controls.IColorChangedEventArgs__Impl.Stubs.get_NewColor(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public ColorChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IDropDownButton))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class DropDownButton : global::Windows.UI.Xaml.Controls.Button, global::Microsoft.UI.Xaml.Controls.IDropDownButton
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public DropDownButton() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IDropDownButtonFactory_CreateInstance("Microsoft.UI.Xaml.Controls.DropDownButton");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IDropDownButtonFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.DropDownButton).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IDropDownButtonFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IDropDownButtonFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IDropDownButtonFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IDropDownButtonFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public DropDownButton(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IExpander))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Expander : global::Windows.UI.Xaml.Controls.ContentControl, global::Microsoft.UI.Xaml.Controls.IExpander
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Expander() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IExpanderFactory_CreateInstance("Microsoft.UI.Xaml.Controls.Expander");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IExpanderFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.Expander).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IExpanderFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IExpanderFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IExpanderFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IExpanderFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Header")]
		public virtual object get_Header()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.IExpander__Impl.Stubs.get_Header(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Header")]
		public virtual void put_Header(object value)
		{
			global::Microsoft.UI.Xaml.Controls.IExpander__Impl.Stubs.put_Header(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplate")]
		public virtual global::Windows.UI.Xaml.DataTemplate get_HeaderTemplate()
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Microsoft.UI.Xaml.Controls.IExpander__Impl.Stubs.get_HeaderTemplate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderTemplate")]
		public virtual void put_HeaderTemplate(global::Windows.UI.Xaml.DataTemplate value)
		{
			global::Microsoft.UI.Xaml.Controls.IExpander__Impl.Stubs.put_HeaderTemplate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplateSelector")]
		public virtual global::Windows.UI.Xaml.Controls.DataTemplateSelector get_HeaderTemplateSelector()
		{
			global::Windows.UI.Xaml.Controls.DataTemplateSelector __retVal = global::Microsoft.UI.Xaml.Controls.IExpander__Impl.Stubs.get_HeaderTemplateSelector(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderTemplateSelector")]
		public virtual void put_HeaderTemplateSelector(global::Windows.UI.Xaml.Controls.DataTemplateSelector value)
		{
			global::Microsoft.UI.Xaml.Controls.IExpander__Impl.Stubs.put_HeaderTemplateSelector(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsExpanded")]
		public virtual bool get_IsExpanded()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IExpander__Impl.Stubs.get_IsExpanded(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsExpanded")]
		public virtual void put_IsExpanded(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IExpander__Impl.Stubs.put_IsExpanded(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandDirection")]
		public virtual global::Microsoft.UI.Xaml.Controls.ExpandDirection get_ExpandDirection()
		{
			global::Microsoft.UI.Xaml.Controls.ExpandDirection __retVal = global::Microsoft.UI.Xaml.Controls.IExpander__Impl.Stubs.get_ExpandDirection(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ExpandDirection")]
		public virtual void put_ExpandDirection(global::Microsoft.UI.Xaml.Controls.ExpandDirection value)
		{
			global::Microsoft.UI.Xaml.Controls.IExpander__Impl.Stubs.put_ExpandDirection(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Expanding")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Expanding(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Expander, global::Microsoft.UI.Xaml.Controls.ExpanderExpandingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.IExpander__Impl.Stubs.add_Expanding(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Expanding")]
		public virtual void remove_Expanding(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.IExpander__Impl.Stubs.remove_Expanding(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Collapsed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Collapsed(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Expander, global::Microsoft.UI.Xaml.Controls.ExpanderCollapsedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.IExpander__Impl.Stubs.add_Collapsed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Collapsed")]
		public virtual void remove_Collapsed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.IExpander__Impl.Stubs.remove_Collapsed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettings")]
		public virtual global::Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings get_TemplateSettings()
		{
			global::Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings __retVal = global::Microsoft.UI.Xaml.Controls.IExpander__Impl.Stubs.get_TemplateSettings(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HeaderProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IExpanderStatics_get_HeaderProperty("Microsoft.UI.Xaml.Controls.Expander");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IExpanderStatics_get_HeaderProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IExpanderStatics__Impl.Stubs.get_HeaderProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IExpanderStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplateProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HeaderTemplateProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IExpanderStatics_get_HeaderTemplateProperty("Microsoft.UI.Xaml.Controls.Expander");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IExpanderStatics_get_HeaderTemplateProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IExpanderStatics__Impl.Stubs.get_HeaderTemplateProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IExpanderStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplateSelectorProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HeaderTemplateSelectorProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IExpanderStatics_get_HeaderTemplateSelectorProperty("Microsoft.UI.Xaml.Controls.Expander");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IExpanderStatics_get_HeaderTemplateSelectorProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IExpanderStatics__Impl.Stubs.get_HeaderTemplateSelectorProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IExpanderStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsExpandedProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsExpandedProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IExpanderStatics_get_IsExpandedProperty("Microsoft.UI.Xaml.Controls.Expander");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IExpanderStatics_get_IsExpandedProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IExpanderStatics__Impl.Stubs.get_IsExpandedProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IExpanderStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandDirectionProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ExpandDirectionProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IExpanderStatics_get_ExpandDirectionProperty("Microsoft.UI.Xaml.Controls.Expander");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IExpanderStatics_get_ExpandDirectionProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IExpanderStatics__Impl.Stubs.get_ExpandDirectionProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IExpanderStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public Expander(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IExpanderExpandingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ExpanderExpandingEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IExpanderExpandingEventArgs
	{
		public ExpanderExpandingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IExpanderCollapsedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ExpanderCollapsedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IExpanderCollapsedEventArgs
	{
		public ExpanderCollapsedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IExpanderTemplateSettings))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ExpanderTemplateSettings : global::Windows.UI.Xaml.DependencyObject, global::Microsoft.UI.Xaml.Controls.IExpanderTemplateSettings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentHeight")]
		public double get_ContentHeight()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IExpanderTemplateSettings__Impl.Stubs.get_ContentHeight(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NegativeContentHeight")]
		public double get_NegativeContentHeight()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IExpanderTemplateSettings__Impl.Stubs.get_NegativeContentHeight(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public ExpanderTemplateSettings(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IInfoBar))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class InfoBar : global::Windows.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.IInfoBar
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public InfoBar() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBarFactory_CreateInstance("Microsoft.UI.Xaml.Controls.InfoBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IInfoBarFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.InfoBar).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IInfoBarFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IInfoBarFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IInfoBarFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IInfoBarFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsOpen")]
		public virtual bool get_IsOpen()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.get_IsOpen(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsOpen")]
		public virtual void put_IsOpen(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.put_IsOpen(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Title")]
		public virtual string get_Title()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.get_Title(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Title")]
		public virtual void put_Title(string value)
		{
			global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.put_Title(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Message")]
		public virtual string get_Message()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.get_Message(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Message")]
		public virtual void put_Message(string value)
		{
			global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.put_Message(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Severity")]
		public virtual global::Microsoft.UI.Xaml.Controls.InfoBarSeverity get_Severity()
		{
			global::Microsoft.UI.Xaml.Controls.InfoBarSeverity __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.get_Severity(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Severity")]
		public virtual void put_Severity(global::Microsoft.UI.Xaml.Controls.InfoBarSeverity value)
		{
			global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.put_Severity(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconSource")]
		public virtual global::Microsoft.UI.Xaml.Controls.IconSource get_IconSource()
		{
			global::Microsoft.UI.Xaml.Controls.IconSource __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.get_IconSource(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IconSource")]
		public virtual void put_IconSource(global::Microsoft.UI.Xaml.Controls.IconSource value)
		{
			global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.put_IconSource(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsIconVisible")]
		public virtual bool get_IsIconVisible()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.get_IsIconVisible(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsIconVisible")]
		public virtual void put_IsIconVisible(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.put_IsIconVisible(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsClosable")]
		public virtual bool get_IsClosable()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.get_IsClosable(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsClosable")]
		public virtual void put_IsClosable(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.put_IsClosable(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonStyle")]
		public virtual global::Windows.UI.Xaml.Style get_CloseButtonStyle()
		{
			global::Windows.UI.Xaml.Style __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.get_CloseButtonStyle(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CloseButtonStyle")]
		public virtual void put_CloseButtonStyle(global::Windows.UI.Xaml.Style value)
		{
			global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.put_CloseButtonStyle(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonCommand")]
		public virtual global::System.Windows.Input.ICommand get_CloseButtonCommand()
		{
			global::System.Windows.Input.ICommand __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.get_CloseButtonCommand(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CloseButtonCommand")]
		public virtual void put_CloseButtonCommand(global::System.Windows.Input.ICommand value)
		{
			global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.put_CloseButtonCommand(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonCommandParameter")]
		public virtual object get_CloseButtonCommandParameter()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.get_CloseButtonCommandParameter(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CloseButtonCommandParameter")]
		public virtual void put_CloseButtonCommandParameter(object value)
		{
			global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.put_CloseButtonCommandParameter(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActionButton")]
		public virtual global::Windows.UI.Xaml.Controls.Primitives.ButtonBase get_ActionButton()
		{
			global::Windows.UI.Xaml.Controls.Primitives.ButtonBase __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.get_ActionButton(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ActionButton")]
		public virtual void put_ActionButton(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase value)
		{
			global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.put_ActionButton(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		public virtual object get_Content()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.get_Content(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		public virtual void put_Content(object value)
		{
			global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.put_Content(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentTemplate")]
		public virtual global::Windows.UI.Xaml.DataTemplate get_ContentTemplate()
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.get_ContentTemplate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContentTemplate")]
		public virtual void put_ContentTemplate(global::Windows.UI.Xaml.DataTemplate value)
		{
			global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.put_ContentTemplate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettings")]
		public virtual global::Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings get_TemplateSettings()
		{
			global::Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.get_TemplateSettings(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CloseButtonClick")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CloseButtonClick(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.add_CloseButtonClick(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CloseButtonClick")]
		public virtual void remove_CloseButtonClick(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.remove_CloseButtonClick(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closing")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closing(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, global::Microsoft.UI.Xaml.Controls.InfoBarClosingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.add_Closing(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closing")]
		public virtual void remove_Closing(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.remove_Closing(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closed(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, global::Microsoft.UI.Xaml.Controls.InfoBarClosedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.add_Closed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closed")]
		public virtual void remove_Closed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.IInfoBar__Impl.Stubs.remove_Closed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsOpenProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsOpenProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_IsOpenProperty("Microsoft.UI.Xaml.Controls.InfoBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_IsOpenProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IInfoBarStatics__Impl.Stubs.get_IsOpenProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IInfoBarStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TitleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TitleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_TitleProperty("Microsoft.UI.Xaml.Controls.InfoBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_TitleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IInfoBarStatics__Impl.Stubs.get_TitleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IInfoBarStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MessageProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MessageProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_MessageProperty("Microsoft.UI.Xaml.Controls.InfoBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_MessageProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IInfoBarStatics__Impl.Stubs.get_MessageProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IInfoBarStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SeverityProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SeverityProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_SeverityProperty("Microsoft.UI.Xaml.Controls.InfoBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_SeverityProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IInfoBarStatics__Impl.Stubs.get_SeverityProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IInfoBarStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconSourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IconSourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_IconSourceProperty("Microsoft.UI.Xaml.Controls.InfoBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_IconSourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IInfoBarStatics__Impl.Stubs.get_IconSourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IInfoBarStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsIconVisibleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsIconVisibleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_IsIconVisibleProperty("Microsoft.UI.Xaml.Controls.InfoBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_IsIconVisibleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IInfoBarStatics__Impl.Stubs.get_IsIconVisibleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IInfoBarStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsClosableProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsClosableProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_IsClosableProperty("Microsoft.UI.Xaml.Controls.InfoBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_IsClosableProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IInfoBarStatics__Impl.Stubs.get_IsClosableProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IInfoBarStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonStyleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CloseButtonStyleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_CloseButtonStyleProperty("Microsoft.UI.Xaml.Controls.InfoBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_CloseButtonStyleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IInfoBarStatics__Impl.Stubs.get_CloseButtonStyleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IInfoBarStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonCommandProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CloseButtonCommandProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_CloseButtonCommandProperty("Microsoft.UI.Xaml.Controls.InfoBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_CloseButtonCommandProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IInfoBarStatics__Impl.Stubs.get_CloseButtonCommandProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IInfoBarStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonCommandParameterProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CloseButtonCommandParameterProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_CloseButtonCommandParameterProperty("Microsoft.UI.Xaml.Controls.InfoBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_CloseButtonCommandParameterProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IInfoBarStatics__Impl.Stubs.get_CloseButtonCommandParameterProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IInfoBarStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActionButtonProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ActionButtonProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_ActionButtonProperty("Microsoft.UI.Xaml.Controls.InfoBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_ActionButtonProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IInfoBarStatics__Impl.Stubs.get_ActionButtonProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IInfoBarStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ContentProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_ContentProperty("Microsoft.UI.Xaml.Controls.InfoBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_ContentProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IInfoBarStatics__Impl.Stubs.get_ContentProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IInfoBarStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentTemplateProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ContentTemplateProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_ContentTemplateProperty("Microsoft.UI.Xaml.Controls.InfoBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_ContentTemplateProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IInfoBarStatics__Impl.Stubs.get_ContentTemplateProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IInfoBarStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettingsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TemplateSettingsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_TemplateSettingsProperty("Microsoft.UI.Xaml.Controls.InfoBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IInfoBarStatics_get_TemplateSettingsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IInfoBarStatics__Impl.Stubs.get_TemplateSettingsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IInfoBarStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public InfoBar(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IInfoBarTemplateSettings))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class InfoBarTemplateSettings : global::Windows.UI.Xaml.DependencyObject, global::Microsoft.UI.Xaml.Controls.IInfoBarTemplateSettings
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public InfoBarTemplateSettings() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBarTemplateSettingsFactory_CreateInstance("Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IInfoBarTemplateSettingsFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IInfoBarTemplateSettingsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IInfoBarTemplateSettingsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IInfoBarTemplateSettingsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IInfoBarTemplateSettingsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconElement")]
		public virtual global::Windows.UI.Xaml.Controls.IconElement get_IconElement()
		{
			global::Windows.UI.Xaml.Controls.IconElement __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBarTemplateSettings__Impl.Stubs.get_IconElement(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IconElement")]
		public virtual void put_IconElement(global::Windows.UI.Xaml.Controls.IconElement value)
		{
			global::Microsoft.UI.Xaml.Controls.IInfoBarTemplateSettings__Impl.Stubs.put_IconElement(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconElementProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IconElementProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBarTemplateSettingsStatics_get_IconElementProperty("Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IInfoBarTemplateSettingsStatics_get_IconElementProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IInfoBarTemplateSettingsStatics__Impl.Stubs.get_IconElementProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IInfoBarTemplateSettingsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public InfoBarTemplateSettings(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IInfoBarClosingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class InfoBarClosingEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IInfoBarClosingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Reason")]
		public virtual global::Microsoft.UI.Xaml.Controls.InfoBarCloseReason get_Reason()
		{
			global::Microsoft.UI.Xaml.Controls.InfoBarCloseReason __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBarClosingEventArgs__Impl.Stubs.get_Reason(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cancel")]
		public virtual bool get_Cancel()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBarClosingEventArgs__Impl.Stubs.get_Cancel(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Cancel")]
		public virtual void put_Cancel(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IInfoBarClosingEventArgs__Impl.Stubs.put_Cancel(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public InfoBarClosingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IInfoBarClosedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class InfoBarClosedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IInfoBarClosedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Reason")]
		public virtual global::Microsoft.UI.Xaml.Controls.InfoBarCloseReason get_Reason()
		{
			global::Microsoft.UI.Xaml.Controls.InfoBarCloseReason __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBarClosedEventArgs__Impl.Stubs.get_Reason(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public InfoBarClosedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INavigationView))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INavigationView2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class NavigationView : global::Windows.UI.Xaml.Controls.ContentControl, global::Microsoft.UI.Xaml.Controls.INavigationView, global::Microsoft.UI.Xaml.Controls.INavigationView2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public NavigationView() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewFactory_CreateInstance("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__INavigationViewFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.NavigationView).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.INavigationViewFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.INavigationViewFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPaneOpen")]
		public virtual bool get_IsPaneOpen()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_IsPaneOpen(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsPaneOpen")]
		public virtual void put_IsPaneOpen(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.put_IsPaneOpen(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CompactModeThresholdWidth")]
		public virtual double get_CompactModeThresholdWidth()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_CompactModeThresholdWidth(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CompactModeThresholdWidth")]
		public virtual void put_CompactModeThresholdWidth(double value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.put_CompactModeThresholdWidth(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandedModeThresholdWidth")]
		public virtual double get_ExpandedModeThresholdWidth()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_ExpandedModeThresholdWidth(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ExpandedModeThresholdWidth")]
		public virtual void put_ExpandedModeThresholdWidth(double value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.put_ExpandedModeThresholdWidth(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FooterMenuItems")]
		public virtual global::System.Collections.Generic.IList<object> get_FooterMenuItems()
		{
			global::System.Collections.Generic.IList<object> __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_FooterMenuItems(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FooterMenuItemsSource")]
		public virtual object get_FooterMenuItemsSource()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_FooterMenuItemsSource(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FooterMenuItemsSource")]
		public virtual void put_FooterMenuItemsSource(object value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.put_FooterMenuItemsSource(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneFooter")]
		public virtual global::Windows.UI.Xaml.UIElement get_PaneFooter()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_PaneFooter(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PaneFooter")]
		public virtual void put_PaneFooter(global::Windows.UI.Xaml.UIElement value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.put_PaneFooter(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Header")]
		public virtual object get_Header()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_Header(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Header")]
		public virtual void put_Header(object value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.put_Header(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplate")]
		public virtual global::Windows.UI.Xaml.DataTemplate get_HeaderTemplate()
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_HeaderTemplate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderTemplate")]
		public virtual void put_HeaderTemplate(global::Windows.UI.Xaml.DataTemplate value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.put_HeaderTemplate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayMode")]
		public virtual global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode get_DisplayMode()
		{
			global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_DisplayMode(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSettingsVisible")]
		public virtual bool get_IsSettingsVisible()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_IsSettingsVisible(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsSettingsVisible")]
		public virtual void put_IsSettingsVisible(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.put_IsSettingsVisible(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPaneToggleButtonVisible")]
		public virtual bool get_IsPaneToggleButtonVisible()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_IsPaneToggleButtonVisible(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsPaneToggleButtonVisible")]
		public virtual void put_IsPaneToggleButtonVisible(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.put_IsPaneToggleButtonVisible(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AlwaysShowHeader")]
		public virtual bool get_AlwaysShowHeader()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_AlwaysShowHeader(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AlwaysShowHeader")]
		public virtual void put_AlwaysShowHeader(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.put_AlwaysShowHeader(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CompactPaneLength")]
		public virtual double get_CompactPaneLength()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_CompactPaneLength(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CompactPaneLength")]
		public virtual void put_CompactPaneLength(double value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.put_CompactPaneLength(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OpenPaneLength")]
		public virtual double get_OpenPaneLength()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_OpenPaneLength(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "OpenPaneLength")]
		public virtual void put_OpenPaneLength(double value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.put_OpenPaneLength(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneToggleButtonStyle")]
		public virtual global::Windows.UI.Xaml.Style get_PaneToggleButtonStyle()
		{
			global::Windows.UI.Xaml.Style __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_PaneToggleButtonStyle(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PaneToggleButtonStyle")]
		public virtual void put_PaneToggleButtonStyle(global::Windows.UI.Xaml.Style value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.put_PaneToggleButtonStyle(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedItem")]
		public virtual object get_SelectedItem()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_SelectedItem(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectedItem")]
		public virtual void put_SelectedItem(object value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.put_SelectedItem(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItems")]
		public virtual global::System.Collections.Generic.IList<object> get_MenuItems()
		{
			global::System.Collections.Generic.IList<object> __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_MenuItems(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemsSource")]
		public virtual object get_MenuItemsSource()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_MenuItemsSource(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MenuItemsSource")]
		public virtual void put_MenuItemsSource(object value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.put_MenuItemsSource(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SettingsItem")]
		public virtual object get_SettingsItem()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_SettingsItem(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AutoSuggestBox")]
		public virtual global::Windows.UI.Xaml.Controls.AutoSuggestBox get_AutoSuggestBox()
		{
			global::Windows.UI.Xaml.Controls.AutoSuggestBox __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_AutoSuggestBox(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AutoSuggestBox")]
		public virtual void put_AutoSuggestBox(global::Windows.UI.Xaml.Controls.AutoSuggestBox value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.put_AutoSuggestBox(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemTemplate")]
		public virtual global::Windows.UI.Xaml.DataTemplate get_MenuItemTemplate()
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_MenuItemTemplate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MenuItemTemplate")]
		public virtual void put_MenuItemTemplate(global::Windows.UI.Xaml.DataTemplate value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.put_MenuItemTemplate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemTemplateSelector")]
		public virtual global::Windows.UI.Xaml.Controls.DataTemplateSelector get_MenuItemTemplateSelector()
		{
			global::Windows.UI.Xaml.Controls.DataTemplateSelector __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_MenuItemTemplateSelector(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MenuItemTemplateSelector")]
		public virtual void put_MenuItemTemplateSelector(global::Windows.UI.Xaml.Controls.DataTemplateSelector value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.put_MenuItemTemplateSelector(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemContainerStyle")]
		public virtual global::Windows.UI.Xaml.Style get_MenuItemContainerStyle()
		{
			global::Windows.UI.Xaml.Style __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_MenuItemContainerStyle(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MenuItemContainerStyle")]
		public virtual void put_MenuItemContainerStyle(global::Windows.UI.Xaml.Style value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.put_MenuItemContainerStyle(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemContainerStyleSelector")]
		public virtual global::Windows.UI.Xaml.Controls.StyleSelector get_MenuItemContainerStyleSelector()
		{
			global::Windows.UI.Xaml.Controls.StyleSelector __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_MenuItemContainerStyleSelector(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MenuItemContainerStyleSelector")]
		public virtual void put_MenuItemContainerStyleSelector(global::Windows.UI.Xaml.Controls.StyleSelector value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.put_MenuItemContainerStyleSelector(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual object MenuItemFromContainer(global::Windows.UI.Xaml.DependencyObject container)
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.MenuItemFromContainer(
								this, 
								container
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual global::Windows.UI.Xaml.DependencyObject ContainerFromMenuItem(object item)
		{
			global::Windows.UI.Xaml.DependencyObject __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.ContainerFromMenuItem(
								this, 
								item
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SelectionChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SelectionChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.add_SelectionChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SelectionChanged")]
		public virtual void remove_SelectionChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.remove_SelectionChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ItemInvoked")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ItemInvoked(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.add_ItemInvoked(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ItemInvoked")]
		public virtual void remove_ItemInvoked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.remove_ItemInvoked(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DisplayModeChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DisplayModeChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.add_DisplayModeChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DisplayModeChanged")]
		public virtual void remove_DisplayModeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.remove_DisplayModeChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsTitleBarAutoPaddingEnabled")]
		public virtual bool get_IsTitleBarAutoPaddingEnabled()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.get_IsTitleBarAutoPaddingEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsTitleBarAutoPaddingEnabled")]
		public virtual void put_IsTitleBarAutoPaddingEnabled(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView__Impl.Stubs.put_IsTitleBarAutoPaddingEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsBackButtonVisible")]
		public virtual global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible get_IsBackButtonVisible()
		{
			global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.get_IsBackButtonVisible(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsBackButtonVisible")]
		public virtual void put_IsBackButtonVisible(global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.put_IsBackButtonVisible(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsBackEnabled")]
		public virtual bool get_IsBackEnabled()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.get_IsBackEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsBackEnabled")]
		public virtual void put_IsBackEnabled(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.put_IsBackEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneTitle")]
		public virtual string get_PaneTitle()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.get_PaneTitle(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PaneTitle")]
		public virtual void put_PaneTitle(string value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.put_PaneTitle(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "BackRequested")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_BackRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewBackRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.add_BackRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "BackRequested")]
		public virtual void remove_BackRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.remove_BackRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PaneClosed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PaneClosed(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.add_PaneClosed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PaneClosed")]
		public virtual void remove_PaneClosed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.remove_PaneClosed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PaneClosing")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PaneClosing(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.add_PaneClosing(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PaneClosing")]
		public virtual void remove_PaneClosing(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.remove_PaneClosing(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PaneOpened")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PaneOpened(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.add_PaneOpened(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PaneOpened")]
		public virtual void remove_PaneOpened(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.remove_PaneOpened(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PaneOpening")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PaneOpening(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.add_PaneOpening(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PaneOpening")]
		public virtual void remove_PaneOpening(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.remove_PaneOpening(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneDisplayMode")]
		public virtual global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode get_PaneDisplayMode()
		{
			global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.get_PaneDisplayMode(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PaneDisplayMode")]
		public virtual void put_PaneDisplayMode(global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.put_PaneDisplayMode(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneHeader")]
		public virtual global::Windows.UI.Xaml.UIElement get_PaneHeader()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.get_PaneHeader(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PaneHeader")]
		public virtual void put_PaneHeader(global::Windows.UI.Xaml.UIElement value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.put_PaneHeader(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneCustomContent")]
		public virtual global::Windows.UI.Xaml.UIElement get_PaneCustomContent()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.get_PaneCustomContent(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PaneCustomContent")]
		public virtual void put_PaneCustomContent(global::Windows.UI.Xaml.UIElement value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.put_PaneCustomContent(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentOverlay")]
		public virtual global::Windows.UI.Xaml.UIElement get_ContentOverlay()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.get_ContentOverlay(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContentOverlay")]
		public virtual void put_ContentOverlay(global::Windows.UI.Xaml.UIElement value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.put_ContentOverlay(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPaneVisible")]
		public virtual bool get_IsPaneVisible()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.get_IsPaneVisible(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsPaneVisible")]
		public virtual void put_IsPaneVisible(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.put_IsPaneVisible(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionFollowsFocus")]
		public virtual global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus get_SelectionFollowsFocus()
		{
			global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.get_SelectionFollowsFocus(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectionFollowsFocus")]
		public virtual void put_SelectionFollowsFocus(global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.put_SelectionFollowsFocus(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettings")]
		public virtual global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings get_TemplateSettings()
		{
			global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.get_TemplateSettings(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShoulderNavigationEnabled")]
		public virtual global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled get_ShoulderNavigationEnabled()
		{
			global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.get_ShoulderNavigationEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ShoulderNavigationEnabled")]
		public virtual void put_ShoulderNavigationEnabled(global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.put_ShoulderNavigationEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OverflowLabelMode")]
		public virtual global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode get_OverflowLabelMode()
		{
			global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.get_OverflowLabelMode(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "OverflowLabelMode")]
		public virtual void put_OverflowLabelMode(global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.put_OverflowLabelMode(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Expanding")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Expanding(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemExpandingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.add_Expanding(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Expanding")]
		public virtual void remove_Expanding(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.remove_Expanding(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Collapsed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Collapsed(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemCollapsedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.add_Collapsed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Collapsed")]
		public virtual void remove_Collapsed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.remove_Collapsed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void Expand(global::Microsoft.UI.Xaml.Controls.NavigationViewItem item)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.Expand(
								this, 
								item
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void Collapse(global::Microsoft.UI.Xaml.Controls.NavigationViewItem item)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationView2__Impl.Stubs.Collapse(
								this, 
								item
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsBackButtonVisibleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsBackButtonVisibleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_IsBackButtonVisibleProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_IsBackButtonVisibleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2__Impl.Stubs.get_IsBackButtonVisibleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsBackEnabledProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsBackEnabledProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_IsBackEnabledProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_IsBackEnabledProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2__Impl.Stubs.get_IsBackEnabledProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneTitleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PaneTitleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_PaneTitleProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_PaneTitleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2__Impl.Stubs.get_PaneTitleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneDisplayModeProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PaneDisplayModeProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_PaneDisplayModeProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_PaneDisplayModeProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2__Impl.Stubs.get_PaneDisplayModeProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneHeaderProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PaneHeaderProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_PaneHeaderProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_PaneHeaderProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2__Impl.Stubs.get_PaneHeaderProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneCustomContentProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PaneCustomContentProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_PaneCustomContentProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_PaneCustomContentProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2__Impl.Stubs.get_PaneCustomContentProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentOverlayProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ContentOverlayProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_ContentOverlayProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_ContentOverlayProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2__Impl.Stubs.get_ContentOverlayProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPaneVisibleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsPaneVisibleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_IsPaneVisibleProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_IsPaneVisibleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2__Impl.Stubs.get_IsPaneVisibleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionFollowsFocusProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SelectionFollowsFocusProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_SelectionFollowsFocusProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_SelectionFollowsFocusProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2__Impl.Stubs.get_SelectionFollowsFocusProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettingsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TemplateSettingsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_TemplateSettingsProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_TemplateSettingsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2__Impl.Stubs.get_TemplateSettingsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShoulderNavigationEnabledProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ShoulderNavigationEnabledProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_ShoulderNavigationEnabledProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_ShoulderNavigationEnabledProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2__Impl.Stubs.get_ShoulderNavigationEnabledProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OverflowLabelModeProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_OverflowLabelModeProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_OverflowLabelModeProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics2_get_OverflowLabelModeProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2__Impl.Stubs.get_OverflowLabelModeProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPaneOpenProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsPaneOpenProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_IsPaneOpenProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_IsPaneOpenProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_IsPaneOpenProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CompactModeThresholdWidthProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CompactModeThresholdWidthProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_CompactModeThresholdWidthProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_CompactModeThresholdWidthProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_CompactModeThresholdWidthProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandedModeThresholdWidthProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ExpandedModeThresholdWidthProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_ExpandedModeThresholdWidthProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_ExpandedModeThresholdWidthProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_ExpandedModeThresholdWidthProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FooterMenuItemsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_FooterMenuItemsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_FooterMenuItemsProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_FooterMenuItemsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_FooterMenuItemsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FooterMenuItemsSourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_FooterMenuItemsSourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_FooterMenuItemsSourceProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_FooterMenuItemsSourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_FooterMenuItemsSourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneFooterProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PaneFooterProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_PaneFooterProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_PaneFooterProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_PaneFooterProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HeaderProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_HeaderProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_HeaderProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_HeaderProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplateProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HeaderTemplateProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_HeaderTemplateProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_HeaderTemplateProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_HeaderTemplateProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayModeProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_DisplayModeProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_DisplayModeProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_DisplayModeProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_DisplayModeProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSettingsVisibleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsSettingsVisibleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_IsSettingsVisibleProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_IsSettingsVisibleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_IsSettingsVisibleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPaneToggleButtonVisibleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsPaneToggleButtonVisibleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_IsPaneToggleButtonVisibleProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_IsPaneToggleButtonVisibleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_IsPaneToggleButtonVisibleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AlwaysShowHeaderProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_AlwaysShowHeaderProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_AlwaysShowHeaderProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_AlwaysShowHeaderProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_AlwaysShowHeaderProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CompactPaneLengthProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CompactPaneLengthProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_CompactPaneLengthProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_CompactPaneLengthProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_CompactPaneLengthProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OpenPaneLengthProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_OpenPaneLengthProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_OpenPaneLengthProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_OpenPaneLengthProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_OpenPaneLengthProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneToggleButtonStyleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PaneToggleButtonStyleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_PaneToggleButtonStyleProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_PaneToggleButtonStyleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_PaneToggleButtonStyleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MenuItemsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_MenuItemsProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_MenuItemsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_MenuItemsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemsSourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MenuItemsSourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_MenuItemsSourceProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_MenuItemsSourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_MenuItemsSourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedItemProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SelectedItemProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_SelectedItemProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_SelectedItemProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_SelectedItemProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SettingsItemProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SettingsItemProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_SettingsItemProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_SettingsItemProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_SettingsItemProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AutoSuggestBoxProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_AutoSuggestBoxProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_AutoSuggestBoxProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_AutoSuggestBoxProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_AutoSuggestBoxProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemTemplateProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MenuItemTemplateProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_MenuItemTemplateProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_MenuItemTemplateProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_MenuItemTemplateProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemTemplateSelectorProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MenuItemTemplateSelectorProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_MenuItemTemplateSelectorProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_MenuItemTemplateSelectorProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_MenuItemTemplateSelectorProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemContainerStyleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MenuItemContainerStyleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_MenuItemContainerStyleProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_MenuItemContainerStyleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_MenuItemContainerStyleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemContainerStyleSelectorProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MenuItemContainerStyleSelectorProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_MenuItemContainerStyleSelectorProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_MenuItemContainerStyleSelectorProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_MenuItemContainerStyleSelectorProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsTitleBarAutoPaddingEnabledProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsTitleBarAutoPaddingEnabledProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_IsTitleBarAutoPaddingEnabledProperty("Microsoft.UI.Xaml.Controls.NavigationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewStatics_get_IsTitleBarAutoPaddingEnabledProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewStatics__Impl.Stubs.get_IsTitleBarAutoPaddingEnabledProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public NavigationView(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewSelectionChangedEventArgs))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewSelectionChangedEventArgs2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NavigationViewSelectionChangedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.INavigationViewSelectionChangedEventArgs, global::Microsoft.UI.Xaml.Controls.INavigationViewSelectionChangedEventArgs2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedItem")]
		public object get_SelectedItem()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewSelectionChangedEventArgs__Impl.Stubs.get_SelectedItem(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSettingsSelected")]
		public bool get_IsSettingsSelected()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewSelectionChangedEventArgs__Impl.Stubs.get_IsSettingsSelected(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedItemContainer")]
		public global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase get_SelectedItemContainer()
		{
			global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewSelectionChangedEventArgs2__Impl.Stubs.get_SelectedItemContainer(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RecommendedNavigationTransitionInfo")]
		public global::Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo get_RecommendedNavigationTransitionInfo()
		{
			global::Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewSelectionChangedEventArgs2__Impl.Stubs.get_RecommendedNavigationTransitionInfo(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public NavigationViewSelectionChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemBase))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemBase2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class NavigationViewItemBase : global::Windows.UI.Xaml.Controls.ContentControl, global::Microsoft.UI.Xaml.Controls.INavigationViewItemBase, global::Microsoft.UI.Xaml.Controls.INavigationViewItemBase2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSelected")]
		public virtual bool get_IsSelected()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItemBase2__Impl.Stubs.get_IsSelected(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsSelected")]
		public virtual void put_IsSelected(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationViewItemBase2__Impl.Stubs.put_IsSelected(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSelectedProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsSelectedProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemBaseStatics_get_IsSelectedProperty("Microsoft.UI.Xaml.Controls.NavigationViewItemBase");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemBaseStatics_get_IsSelectedProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItemBaseStatics__Impl.Stubs.get_IsSelectedProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemBaseStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public NavigationViewItemBase(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemInvokedEventArgs))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemInvokedEventArgs2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NavigationViewItemInvokedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.INavigationViewItemInvokedEventArgs, global::Microsoft.UI.Xaml.Controls.INavigationViewItemInvokedEventArgs2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public NavigationViewItemInvokedEventArgs()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InvokedItem")]
		public object get_InvokedItem()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItemInvokedEventArgs__Impl.Stubs.get_InvokedItem(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSettingsInvoked")]
		public bool get_IsSettingsInvoked()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItemInvokedEventArgs__Impl.Stubs.get_IsSettingsInvoked(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InvokedItemContainer")]
		public global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase get_InvokedItemContainer()
		{
			global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItemInvokedEventArgs2__Impl.Stubs.get_InvokedItemContainer(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RecommendedNavigationTransitionInfo")]
		public global::Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo get_RecommendedNavigationTransitionInfo()
		{
			global::Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItemInvokedEventArgs2__Impl.Stubs.get_RecommendedNavigationTransitionInfo(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public NavigationViewItemInvokedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewDisplayModeChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NavigationViewDisplayModeChangedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.INavigationViewDisplayModeChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayMode")]
		public global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode get_DisplayMode()
		{
			global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewDisplayModeChangedEventArgs__Impl.Stubs.get_DisplayMode(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public NavigationViewDisplayModeChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewBackRequestedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NavigationViewBackRequestedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.INavigationViewBackRequestedEventArgs
	{
		public NavigationViewBackRequestedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewPaneClosingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NavigationViewPaneClosingEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.INavigationViewPaneClosingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cancel")]
		public bool get_Cancel()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewPaneClosingEventArgs__Impl.Stubs.get_Cancel(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Cancel")]
		public void put_Cancel(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationViewPaneClosingEventArgs__Impl.Stubs.put_Cancel(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public NavigationViewPaneClosingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettings))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettings2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(131072)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class NavigationViewTemplateSettings : global::Windows.UI.Xaml.DependencyObject, global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettings, global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettings2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public NavigationViewTemplateSettings() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewTemplateSettingsFactory_CreateInstance("Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__INavigationViewTemplateSettingsFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TopPadding")]
		public virtual double get_TopPadding()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettings__Impl.Stubs.get_TopPadding(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OverflowButtonVisibility")]
		public virtual global::Windows.UI.Xaml.Visibility get_OverflowButtonVisibility()
		{
			global::Windows.UI.Xaml.Visibility __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettings__Impl.Stubs.get_OverflowButtonVisibility(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneToggleButtonVisibility")]
		public virtual global::Windows.UI.Xaml.Visibility get_PaneToggleButtonVisibility()
		{
			global::Windows.UI.Xaml.Visibility __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettings__Impl.Stubs.get_PaneToggleButtonVisibility(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BackButtonVisibility")]
		public virtual global::Windows.UI.Xaml.Visibility get_BackButtonVisibility()
		{
			global::Windows.UI.Xaml.Visibility __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettings__Impl.Stubs.get_BackButtonVisibility(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TopPaneVisibility")]
		public virtual global::Windows.UI.Xaml.Visibility get_TopPaneVisibility()
		{
			global::Windows.UI.Xaml.Visibility __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettings__Impl.Stubs.get_TopPaneVisibility(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LeftPaneVisibility")]
		public virtual global::Windows.UI.Xaml.Visibility get_LeftPaneVisibility()
		{
			global::Windows.UI.Xaml.Visibility __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettings__Impl.Stubs.get_LeftPaneVisibility(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SingleSelectionFollowsFocus")]
		public virtual bool get_SingleSelectionFollowsFocus()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettings__Impl.Stubs.get_SingleSelectionFollowsFocus(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneToggleButtonWidth")]
		public virtual double get_PaneToggleButtonWidth()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettings__Impl.Stubs.get_PaneToggleButtonWidth(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SmallerPaneToggleButtonWidth")]
		public virtual double get_SmallerPaneToggleButtonWidth()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettings__Impl.Stubs.get_SmallerPaneToggleButtonWidth(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OpenPaneLength")]
		public virtual double get_OpenPaneLength()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettings2__Impl.Stubs.get_OpenPaneLength(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OpenPaneLengthProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_OpenPaneLengthProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewTemplateSettingsStatics2_get_OpenPaneLengthProperty("Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewTemplateSettingsStatics2_get_OpenPaneLengthProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics2__Impl.Stubs.get_OpenPaneLengthProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TopPaddingProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TopPaddingProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewTemplateSettingsStatics_get_TopPaddingProperty("Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewTemplateSettingsStatics_get_TopPaddingProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics__Impl.Stubs.get_TopPaddingProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OverflowButtonVisibilityProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_OverflowButtonVisibilityProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewTemplateSettingsStatics_get_OverflowButtonVisibilityProperty("Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewTemplateSettingsStatics_get_OverflowButtonVisibilityProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics__Impl.Stubs.get_OverflowButtonVisibilityProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneToggleButtonVisibilityProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PaneToggleButtonVisibilityProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewTemplateSettingsStatics_get_PaneToggleButtonVisibilityProperty("Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewTemplateSettingsStatics_get_PaneToggleButtonVisibilityProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics__Impl.Stubs.get_PaneToggleButtonVisibilityProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BackButtonVisibilityProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_BackButtonVisibilityProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewTemplateSettingsStatics_get_BackButtonVisibilityProperty("Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewTemplateSettingsStatics_get_BackButtonVisibilityProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics__Impl.Stubs.get_BackButtonVisibilityProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TopPaneVisibilityProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TopPaneVisibilityProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewTemplateSettingsStatics_get_TopPaneVisibilityProperty("Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewTemplateSettingsStatics_get_TopPaneVisibilityProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics__Impl.Stubs.get_TopPaneVisibilityProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LeftPaneVisibilityProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_LeftPaneVisibilityProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewTemplateSettingsStatics_get_LeftPaneVisibilityProperty("Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewTemplateSettingsStatics_get_LeftPaneVisibilityProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics__Impl.Stubs.get_LeftPaneVisibilityProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SingleSelectionFollowsFocusProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SingleSelectionFollowsFocusProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewTemplateSettingsStatics_get_SingleSelectionFollowsFocusProperty("Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewTemplateSettingsStatics_get_SingleSelectionFollowsFocusProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics__Impl.Stubs.get_SingleSelectionFollowsFocusProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneToggleButtonWidthProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PaneToggleButtonWidthProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewTemplateSettingsStatics_get_PaneToggleButtonWidthProperty("Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewTemplateSettingsStatics_get_PaneToggleButtonWidthProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics__Impl.Stubs.get_PaneToggleButtonWidthProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SmallerPaneToggleButtonWidthProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SmallerPaneToggleButtonWidthProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewTemplateSettingsStatics_get_SmallerPaneToggleButtonWidthProperty("Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewTemplateSettingsStatics_get_SmallerPaneToggleButtonWidthProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics__Impl.Stubs.get_SmallerPaneToggleButtonWidthProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewTemplateSettingsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public NavigationViewTemplateSettings(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemExpandingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NavigationViewItemExpandingEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.INavigationViewItemExpandingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandingItemContainer")]
		public global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase get_ExpandingItemContainer()
		{
			global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItemExpandingEventArgs__Impl.Stubs.get_ExpandingItemContainer(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandingItem")]
		public object get_ExpandingItem()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItemExpandingEventArgs__Impl.Stubs.get_ExpandingItem(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public NavigationViewItemExpandingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemCollapsedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NavigationViewItemCollapsedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.INavigationViewItemCollapsedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CollapsedItemContainer")]
		public global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase get_CollapsedItemContainer()
		{
			global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItemCollapsedEventArgs__Impl.Stubs.get_CollapsedItemContainer(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CollapsedItem")]
		public object get_CollapsedItem()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItemCollapsedEventArgs__Impl.Stubs.get_CollapsedItem(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public NavigationViewItemCollapsedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItem))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItem2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItem3))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(131072)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class NavigationViewItem : global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase, global::Microsoft.UI.Xaml.Controls.INavigationViewItem, global::Microsoft.UI.Xaml.Controls.INavigationViewItem2, global::Microsoft.UI.Xaml.Controls.INavigationViewItem3
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public NavigationViewItem() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemFactory_CreateInstance("Microsoft.UI.Xaml.Controls.NavigationViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItem).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.INavigationViewItemFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.INavigationViewItemFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Icon")]
		public virtual global::Windows.UI.Xaml.Controls.IconElement get_Icon()
		{
			global::Windows.UI.Xaml.Controls.IconElement __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItem__Impl.Stubs.get_Icon(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Icon")]
		public virtual void put_Icon(global::Windows.UI.Xaml.Controls.IconElement value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationViewItem__Impl.Stubs.put_Icon(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CompactPaneLength")]
		public virtual double get_CompactPaneLength()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItem__Impl.Stubs.get_CompactPaneLength(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectsOnInvoked")]
		public virtual bool get_SelectsOnInvoked()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItem2__Impl.Stubs.get_SelectsOnInvoked(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectsOnInvoked")]
		public virtual void put_SelectsOnInvoked(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationViewItem2__Impl.Stubs.put_SelectsOnInvoked(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsExpanded")]
		public virtual bool get_IsExpanded()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItem2__Impl.Stubs.get_IsExpanded(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsExpanded")]
		public virtual void put_IsExpanded(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationViewItem2__Impl.Stubs.put_IsExpanded(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasUnrealizedChildren")]
		public virtual bool get_HasUnrealizedChildren()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItem2__Impl.Stubs.get_HasUnrealizedChildren(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HasUnrealizedChildren")]
		public virtual void put_HasUnrealizedChildren(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationViewItem2__Impl.Stubs.put_HasUnrealizedChildren(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsChildSelected")]
		public virtual bool get_IsChildSelected()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItem2__Impl.Stubs.get_IsChildSelected(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsChildSelected")]
		public virtual void put_IsChildSelected(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationViewItem2__Impl.Stubs.put_IsChildSelected(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItems")]
		public virtual global::System.Collections.Generic.IList<object> get_MenuItems()
		{
			global::System.Collections.Generic.IList<object> __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItem2__Impl.Stubs.get_MenuItems(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemsSource")]
		public virtual object get_MenuItemsSource()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItem2__Impl.Stubs.get_MenuItemsSource(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MenuItemsSource")]
		public virtual void put_MenuItemsSource(object value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationViewItem2__Impl.Stubs.put_MenuItemsSource(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InfoBadge")]
		public virtual global::Microsoft.UI.Xaml.Controls.InfoBadge get_InfoBadge()
		{
			global::Microsoft.UI.Xaml.Controls.InfoBadge __retVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItem3__Impl.Stubs.get_InfoBadge(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "InfoBadge")]
		public virtual void put_InfoBadge(global::Microsoft.UI.Xaml.Controls.InfoBadge value)
		{
			global::Microsoft.UI.Xaml.Controls.INavigationViewItem3__Impl.Stubs.put_InfoBadge(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InfoBadgeProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_InfoBadgeProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemStatics3_get_InfoBadgeProperty("Microsoft.UI.Xaml.Controls.NavigationViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemStatics3_get_InfoBadgeProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItemStatics3__Impl.Stubs.get_InfoBadgeProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemStatics3).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectsOnInvokedProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SelectsOnInvokedProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemStatics2_get_SelectsOnInvokedProperty("Microsoft.UI.Xaml.Controls.NavigationViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemStatics2_get_SelectsOnInvokedProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItemStatics2__Impl.Stubs.get_SelectsOnInvokedProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsExpandedProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsExpandedProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemStatics2_get_IsExpandedProperty("Microsoft.UI.Xaml.Controls.NavigationViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemStatics2_get_IsExpandedProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItemStatics2__Impl.Stubs.get_IsExpandedProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasUnrealizedChildrenProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HasUnrealizedChildrenProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemStatics2_get_HasUnrealizedChildrenProperty("Microsoft.UI.Xaml.Controls.NavigationViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemStatics2_get_HasUnrealizedChildrenProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItemStatics2__Impl.Stubs.get_HasUnrealizedChildrenProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsChildSelectedProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsChildSelectedProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemStatics2_get_IsChildSelectedProperty("Microsoft.UI.Xaml.Controls.NavigationViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemStatics2_get_IsChildSelectedProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItemStatics2__Impl.Stubs.get_IsChildSelectedProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MenuItemsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemStatics2_get_MenuItemsProperty("Microsoft.UI.Xaml.Controls.NavigationViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemStatics2_get_MenuItemsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItemStatics2__Impl.Stubs.get_MenuItemsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemsSourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MenuItemsSourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemStatics2_get_MenuItemsSourceProperty("Microsoft.UI.Xaml.Controls.NavigationViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemStatics2_get_MenuItemsSourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItemStatics2__Impl.Stubs.get_MenuItemsSourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IconProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemStatics_get_IconProperty("Microsoft.UI.Xaml.Controls.NavigationViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemStatics_get_IconProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItemStatics__Impl.Stubs.get_IconProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CompactPaneLengthProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CompactPaneLengthProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemStatics_get_CompactPaneLengthProperty("Microsoft.UI.Xaml.Controls.NavigationViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemStatics_get_CompactPaneLengthProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INavigationViewItemStatics__Impl.Stubs.get_CompactPaneLengthProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public NavigationViewItem(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IInfoBadge))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class InfoBadge : global::Windows.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.IInfoBadge
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public InfoBadge() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBadgeFactory_CreateInstance("Microsoft.UI.Xaml.Controls.InfoBadge");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IInfoBadgeFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.InfoBadge).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IInfoBadgeFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IInfoBadgeFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IInfoBadgeFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IInfoBadgeFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Value")]
		public virtual int get_Value()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBadge__Impl.Stubs.get_Value(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Value")]
		public virtual void put_Value(int value)
		{
			global::Microsoft.UI.Xaml.Controls.IInfoBadge__Impl.Stubs.put_Value(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconSource")]
		public virtual global::Microsoft.UI.Xaml.Controls.IconSource get_IconSource()
		{
			global::Microsoft.UI.Xaml.Controls.IconSource __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBadge__Impl.Stubs.get_IconSource(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IconSource")]
		public virtual void put_IconSource(global::Microsoft.UI.Xaml.Controls.IconSource value)
		{
			global::Microsoft.UI.Xaml.Controls.IInfoBadge__Impl.Stubs.put_IconSource(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettings")]
		public virtual global::Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings get_TemplateSettings()
		{
			global::Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBadge__Impl.Stubs.get_TemplateSettings(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValueProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ValueProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBadgeStatics_get_ValueProperty("Microsoft.UI.Xaml.Controls.InfoBadge");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IInfoBadgeStatics_get_ValueProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IInfoBadgeStatics__Impl.Stubs.get_ValueProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IInfoBadgeStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconSourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IconSourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBadgeStatics_get_IconSourceProperty("Microsoft.UI.Xaml.Controls.InfoBadge");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IInfoBadgeStatics_get_IconSourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IInfoBadgeStatics__Impl.Stubs.get_IconSourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IInfoBadgeStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettingsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TemplateSettingsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBadgeStatics_get_TemplateSettingsProperty("Microsoft.UI.Xaml.Controls.InfoBadge");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IInfoBadgeStatics_get_TemplateSettingsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IInfoBadgeStatics__Impl.Stubs.get_TemplateSettingsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IInfoBadgeStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public InfoBadge(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettings))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class InfoBadgeTemplateSettings : global::Windows.UI.Xaml.DependencyObject, global::Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettings
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public InfoBadgeTemplateSettings() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBadgeTemplateSettingsFactory_CreateInstance("Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IInfoBadgeTemplateSettingsFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettingsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettingsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettingsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettingsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InfoBadgeCornerRadius")]
		public virtual global::Windows.UI.Xaml.CornerRadius get_InfoBadgeCornerRadius()
		{
			global::Windows.UI.Xaml.CornerRadius __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettings__Impl.Stubs.get_InfoBadgeCornerRadius(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "InfoBadgeCornerRadius")]
		public virtual void put_InfoBadgeCornerRadius(global::Windows.UI.Xaml.CornerRadius value)
		{
			global::Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettings__Impl.Stubs.put_InfoBadgeCornerRadius(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconElement")]
		public virtual global::Windows.UI.Xaml.Controls.IconElement get_IconElement()
		{
			global::Windows.UI.Xaml.Controls.IconElement __retVal = global::Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettings__Impl.Stubs.get_IconElement(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IconElement")]
		public virtual void put_IconElement(global::Windows.UI.Xaml.Controls.IconElement value)
		{
			global::Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettings__Impl.Stubs.put_IconElement(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InfoBadgeCornerRadiusProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_InfoBadgeCornerRadiusProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBadgeTemplateSettingsStatics_get_InfoBadgeCornerRadiusProperty("Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IInfoBadgeTemplateSettingsStatics_get_InfoBadgeCornerRadiusProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettingsStatics__Impl.Stubs.get_InfoBadgeCornerRadiusProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettingsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconElementProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IconElementProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IInfoBadgeTemplateSettingsStatics_get_IconElementProperty("Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IInfoBadgeTemplateSettingsStatics_get_IconElementProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettingsStatics__Impl.Stubs.get_IconElementProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IInfoBadgeTemplateSettingsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public InfoBadgeTemplateSettings(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INumberBox))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class NumberBox : global::Windows.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.INumberBox
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public NumberBox() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INumberBoxFactory_CreateInstance("Microsoft.UI.Xaml.Controls.NumberBox");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__INumberBoxFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.NumberBox).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.INumberBoxFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.INumberBoxFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.INumberBoxFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.INumberBoxFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Minimum")]
		public virtual double get_Minimum()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.get_Minimum(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Minimum")]
		public virtual void put_Minimum(double value)
		{
			global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.put_Minimum(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Maximum")]
		public virtual double get_Maximum()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.get_Maximum(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Maximum")]
		public virtual void put_Maximum(double value)
		{
			global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.put_Maximum(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Value")]
		public virtual double get_Value()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.get_Value(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Value")]
		public virtual void put_Value(double value)
		{
			global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.put_Value(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SmallChange")]
		public virtual double get_SmallChange()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.get_SmallChange(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SmallChange")]
		public virtual void put_SmallChange(double value)
		{
			global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.put_SmallChange(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LargeChange")]
		public virtual double get_LargeChange()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.get_LargeChange(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "LargeChange")]
		public virtual void put_LargeChange(double value)
		{
			global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.put_LargeChange(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Text")]
		public virtual string get_Text()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.get_Text(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Text")]
		public virtual void put_Text(string value)
		{
			global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.put_Text(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Header")]
		public virtual object get_Header()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.get_Header(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Header")]
		public virtual void put_Header(object value)
		{
			global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.put_Header(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplate")]
		public virtual global::Windows.UI.Xaml.DataTemplate get_HeaderTemplate()
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.get_HeaderTemplate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderTemplate")]
		public virtual void put_HeaderTemplate(global::Windows.UI.Xaml.DataTemplate value)
		{
			global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.put_HeaderTemplate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlaceholderText")]
		public virtual string get_PlaceholderText()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.get_PlaceholderText(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PlaceholderText")]
		public virtual void put_PlaceholderText(string value)
		{
			global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.put_PlaceholderText(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionFlyout")]
		public virtual global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase get_SelectionFlyout()
		{
			global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase __retVal = global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.get_SelectionFlyout(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectionFlyout")]
		public virtual void put_SelectionFlyout(global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase value)
		{
			global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.put_SelectionFlyout(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionHighlightColor")]
		public virtual global::Windows.UI.Xaml.Media.SolidColorBrush get_SelectionHighlightColor()
		{
			global::Windows.UI.Xaml.Media.SolidColorBrush __retVal = global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.get_SelectionHighlightColor(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectionHighlightColor")]
		public virtual void put_SelectionHighlightColor(global::Windows.UI.Xaml.Media.SolidColorBrush value)
		{
			global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.put_SelectionHighlightColor(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TextReadingOrder")]
		public virtual global::Windows.UI.Xaml.TextReadingOrder get_TextReadingOrder()
		{
			global::Windows.UI.Xaml.TextReadingOrder __retVal = global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.get_TextReadingOrder(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TextReadingOrder")]
		public virtual void put_TextReadingOrder(global::Windows.UI.Xaml.TextReadingOrder value)
		{
			global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.put_TextReadingOrder(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreventKeyboardDisplayOnProgrammaticFocus")]
		public virtual bool get_PreventKeyboardDisplayOnProgrammaticFocus()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.get_PreventKeyboardDisplayOnProgrammaticFocus(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PreventKeyboardDisplayOnProgrammaticFocus")]
		public virtual void put_PreventKeyboardDisplayOnProgrammaticFocus(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.put_PreventKeyboardDisplayOnProgrammaticFocus(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Description")]
		public virtual object get_Description()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.get_Description(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Description")]
		public virtual void put_Description(object value)
		{
			global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.put_Description(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValidationMode")]
		public virtual global::Microsoft.UI.Xaml.Controls.NumberBoxValidationMode get_ValidationMode()
		{
			global::Microsoft.UI.Xaml.Controls.NumberBoxValidationMode __retVal = global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.get_ValidationMode(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ValidationMode")]
		public virtual void put_ValidationMode(global::Microsoft.UI.Xaml.Controls.NumberBoxValidationMode value)
		{
			global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.put_ValidationMode(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SpinButtonPlacementMode")]
		public virtual global::Microsoft.UI.Xaml.Controls.NumberBoxSpinButtonPlacementMode get_SpinButtonPlacementMode()
		{
			global::Microsoft.UI.Xaml.Controls.NumberBoxSpinButtonPlacementMode __retVal = global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.get_SpinButtonPlacementMode(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SpinButtonPlacementMode")]
		public virtual void put_SpinButtonPlacementMode(global::Microsoft.UI.Xaml.Controls.NumberBoxSpinButtonPlacementMode value)
		{
			global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.put_SpinButtonPlacementMode(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsWrapEnabled")]
		public virtual bool get_IsWrapEnabled()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.get_IsWrapEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsWrapEnabled")]
		public virtual void put_IsWrapEnabled(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.put_IsWrapEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AcceptsExpression")]
		public virtual bool get_AcceptsExpression()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.get_AcceptsExpression(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AcceptsExpression")]
		public virtual void put_AcceptsExpression(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.put_AcceptsExpression(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NumberFormatter")]
		public virtual global::Windows.Globalization.NumberFormatting.INumberFormatter2 get_NumberFormatter()
		{
			global::Windows.Globalization.NumberFormatting.INumberFormatter2 __retVal = global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.get_NumberFormatter(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "NumberFormatter")]
		public virtual void put_NumberFormatter(global::Windows.Globalization.NumberFormatting.INumberFormatter2 value)
		{
			global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.put_NumberFormatter(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ValueChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ValueChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NumberBox, global::Microsoft.UI.Xaml.Controls.NumberBoxValueChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.add_ValueChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ValueChanged")]
		public virtual void remove_ValueChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.INumberBox__Impl.Stubs.remove_ValueChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinimumProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MinimumProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_MinimumProperty("Microsoft.UI.Xaml.Controls.NumberBox");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_MinimumProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INumberBoxStatics__Impl.Stubs.get_MinimumProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INumberBoxStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaximumProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MaximumProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_MaximumProperty("Microsoft.UI.Xaml.Controls.NumberBox");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_MaximumProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INumberBoxStatics__Impl.Stubs.get_MaximumProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INumberBoxStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValueProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ValueProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_ValueProperty("Microsoft.UI.Xaml.Controls.NumberBox");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_ValueProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INumberBoxStatics__Impl.Stubs.get_ValueProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INumberBoxStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SmallChangeProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SmallChangeProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_SmallChangeProperty("Microsoft.UI.Xaml.Controls.NumberBox");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_SmallChangeProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INumberBoxStatics__Impl.Stubs.get_SmallChangeProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INumberBoxStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LargeChangeProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_LargeChangeProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_LargeChangeProperty("Microsoft.UI.Xaml.Controls.NumberBox");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_LargeChangeProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INumberBoxStatics__Impl.Stubs.get_LargeChangeProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INumberBoxStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TextProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TextProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_TextProperty("Microsoft.UI.Xaml.Controls.NumberBox");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_TextProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INumberBoxStatics__Impl.Stubs.get_TextProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INumberBoxStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HeaderProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_HeaderProperty("Microsoft.UI.Xaml.Controls.NumberBox");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_HeaderProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INumberBoxStatics__Impl.Stubs.get_HeaderProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INumberBoxStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplateProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HeaderTemplateProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_HeaderTemplateProperty("Microsoft.UI.Xaml.Controls.NumberBox");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_HeaderTemplateProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INumberBoxStatics__Impl.Stubs.get_HeaderTemplateProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INumberBoxStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlaceholderTextProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PlaceholderTextProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_PlaceholderTextProperty("Microsoft.UI.Xaml.Controls.NumberBox");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_PlaceholderTextProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INumberBoxStatics__Impl.Stubs.get_PlaceholderTextProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INumberBoxStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionFlyoutProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SelectionFlyoutProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_SelectionFlyoutProperty("Microsoft.UI.Xaml.Controls.NumberBox");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_SelectionFlyoutProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INumberBoxStatics__Impl.Stubs.get_SelectionFlyoutProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INumberBoxStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionHighlightColorProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SelectionHighlightColorProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_SelectionHighlightColorProperty("Microsoft.UI.Xaml.Controls.NumberBox");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_SelectionHighlightColorProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INumberBoxStatics__Impl.Stubs.get_SelectionHighlightColorProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INumberBoxStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TextReadingOrderProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TextReadingOrderProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_TextReadingOrderProperty("Microsoft.UI.Xaml.Controls.NumberBox");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_TextReadingOrderProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INumberBoxStatics__Impl.Stubs.get_TextReadingOrderProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INumberBoxStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreventKeyboardDisplayOnProgrammaticFocusProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PreventKeyboardDisplayOnProgrammaticFocusProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_PreventKeyboardDisplayOnProgrammaticFocusProperty("Microsoft.UI.Xaml.Controls.NumberBox");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_PreventKeyboardDisplayOnProgrammaticFocusProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INumberBoxStatics__Impl.Stubs.get_PreventKeyboardDisplayOnProgrammaticFocusProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INumberBoxStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DescriptionProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_DescriptionProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_DescriptionProperty("Microsoft.UI.Xaml.Controls.NumberBox");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_DescriptionProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INumberBoxStatics__Impl.Stubs.get_DescriptionProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INumberBoxStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValidationModeProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ValidationModeProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_ValidationModeProperty("Microsoft.UI.Xaml.Controls.NumberBox");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_ValidationModeProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INumberBoxStatics__Impl.Stubs.get_ValidationModeProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INumberBoxStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SpinButtonPlacementModeProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SpinButtonPlacementModeProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_SpinButtonPlacementModeProperty("Microsoft.UI.Xaml.Controls.NumberBox");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_SpinButtonPlacementModeProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INumberBoxStatics__Impl.Stubs.get_SpinButtonPlacementModeProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INumberBoxStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsWrapEnabledProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsWrapEnabledProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_IsWrapEnabledProperty("Microsoft.UI.Xaml.Controls.NumberBox");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_IsWrapEnabledProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INumberBoxStatics__Impl.Stubs.get_IsWrapEnabledProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INumberBoxStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AcceptsExpressionProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_AcceptsExpressionProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_AcceptsExpressionProperty("Microsoft.UI.Xaml.Controls.NumberBox");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_AcceptsExpressionProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INumberBoxStatics__Impl.Stubs.get_AcceptsExpressionProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INumberBoxStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NumberFormatterProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_NumberFormatterProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_NumberFormatterProperty("Microsoft.UI.Xaml.Controls.NumberBox");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__INumberBoxStatics_get_NumberFormatterProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.INumberBoxStatics__Impl.Stubs.get_NumberFormatterProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.INumberBoxStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public NumberBox(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INumberBoxValueChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NumberBoxValueChangedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.INumberBoxValueChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OldValue")]
		public double get_OldValue()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.INumberBoxValueChangedEventArgs__Impl.Stubs.get_OldValue(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NewValue")]
		public double get_NewValue()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.INumberBoxValueChangedEventArgs__Impl.Stubs.get_NewValue(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public NumberBoxValueChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IPersonPicture))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class PersonPicture : global::Windows.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.IPersonPicture
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public PersonPicture() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPersonPictureFactory_CreateInstance("Microsoft.UI.Xaml.Controls.PersonPicture");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IPersonPictureFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.PersonPicture).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IPersonPictureFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IPersonPictureFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IPersonPictureFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IPersonPictureFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BadgeNumber")]
		public virtual int get_BadgeNumber()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IPersonPicture__Impl.Stubs.get_BadgeNumber(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BadgeNumber")]
		public virtual void put_BadgeNumber(int value)
		{
			global::Microsoft.UI.Xaml.Controls.IPersonPicture__Impl.Stubs.put_BadgeNumber(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BadgeGlyph")]
		public virtual string get_BadgeGlyph()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.IPersonPicture__Impl.Stubs.get_BadgeGlyph(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BadgeGlyph")]
		public virtual void put_BadgeGlyph(string value)
		{
			global::Microsoft.UI.Xaml.Controls.IPersonPicture__Impl.Stubs.put_BadgeGlyph(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BadgeImageSource")]
		public virtual global::Windows.UI.Xaml.Media.ImageSource get_BadgeImageSource()
		{
			global::Windows.UI.Xaml.Media.ImageSource __retVal = global::Microsoft.UI.Xaml.Controls.IPersonPicture__Impl.Stubs.get_BadgeImageSource(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BadgeImageSource")]
		public virtual void put_BadgeImageSource(global::Windows.UI.Xaml.Media.ImageSource value)
		{
			global::Microsoft.UI.Xaml.Controls.IPersonPicture__Impl.Stubs.put_BadgeImageSource(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BadgeText")]
		public virtual string get_BadgeText()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.IPersonPicture__Impl.Stubs.get_BadgeText(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BadgeText")]
		public virtual void put_BadgeText(string value)
		{
			global::Microsoft.UI.Xaml.Controls.IPersonPicture__Impl.Stubs.put_BadgeText(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsGroup")]
		public virtual bool get_IsGroup()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IPersonPicture__Impl.Stubs.get_IsGroup(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsGroup")]
		public virtual void put_IsGroup(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IPersonPicture__Impl.Stubs.put_IsGroup(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Contact")]
		public virtual global::Windows.ApplicationModel.Contacts.Contact get_Contact()
		{
			global::Windows.ApplicationModel.Contacts.Contact __retVal = global::Microsoft.UI.Xaml.Controls.IPersonPicture__Impl.Stubs.get_Contact(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Contact")]
		public virtual void put_Contact(global::Windows.ApplicationModel.Contacts.Contact value)
		{
			global::Microsoft.UI.Xaml.Controls.IPersonPicture__Impl.Stubs.put_Contact(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		public virtual string get_DisplayName()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.IPersonPicture__Impl.Stubs.get_DisplayName(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DisplayName")]
		public virtual void put_DisplayName(string value)
		{
			global::Microsoft.UI.Xaml.Controls.IPersonPicture__Impl.Stubs.put_DisplayName(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Initials")]
		public virtual string get_Initials()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.IPersonPicture__Impl.Stubs.get_Initials(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Initials")]
		public virtual void put_Initials(string value)
		{
			global::Microsoft.UI.Xaml.Controls.IPersonPicture__Impl.Stubs.put_Initials(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreferSmallImage")]
		public virtual bool get_PreferSmallImage()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IPersonPicture__Impl.Stubs.get_PreferSmallImage(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PreferSmallImage")]
		public virtual void put_PreferSmallImage(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IPersonPicture__Impl.Stubs.put_PreferSmallImage(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ProfilePicture")]
		public virtual global::Windows.UI.Xaml.Media.ImageSource get_ProfilePicture()
		{
			global::Windows.UI.Xaml.Media.ImageSource __retVal = global::Microsoft.UI.Xaml.Controls.IPersonPicture__Impl.Stubs.get_ProfilePicture(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ProfilePicture")]
		public virtual void put_ProfilePicture(global::Windows.UI.Xaml.Media.ImageSource value)
		{
			global::Microsoft.UI.Xaml.Controls.IPersonPicture__Impl.Stubs.put_ProfilePicture(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettings")]
		public virtual global::Microsoft.UI.Xaml.Controls.PersonPictureTemplateSettings get_TemplateSettings()
		{
			global::Microsoft.UI.Xaml.Controls.PersonPictureTemplateSettings __retVal = global::Microsoft.UI.Xaml.Controls.IPersonPicture__Impl.Stubs.get_TemplateSettings(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BadgeNumberProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_BadgeNumberProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPersonPictureStatics_get_BadgeNumberProperty("Microsoft.UI.Xaml.Controls.PersonPicture");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IPersonPictureStatics_get_BadgeNumberProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IPersonPictureStatics__Impl.Stubs.get_BadgeNumberProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IPersonPictureStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BadgeGlyphProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_BadgeGlyphProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPersonPictureStatics_get_BadgeGlyphProperty("Microsoft.UI.Xaml.Controls.PersonPicture");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IPersonPictureStatics_get_BadgeGlyphProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IPersonPictureStatics__Impl.Stubs.get_BadgeGlyphProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IPersonPictureStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BadgeImageSourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_BadgeImageSourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPersonPictureStatics_get_BadgeImageSourceProperty("Microsoft.UI.Xaml.Controls.PersonPicture");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IPersonPictureStatics_get_BadgeImageSourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IPersonPictureStatics__Impl.Stubs.get_BadgeImageSourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IPersonPictureStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BadgeTextProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_BadgeTextProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPersonPictureStatics_get_BadgeTextProperty("Microsoft.UI.Xaml.Controls.PersonPicture");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IPersonPictureStatics_get_BadgeTextProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IPersonPictureStatics__Impl.Stubs.get_BadgeTextProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IPersonPictureStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsGroupProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsGroupProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPersonPictureStatics_get_IsGroupProperty("Microsoft.UI.Xaml.Controls.PersonPicture");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IPersonPictureStatics_get_IsGroupProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IPersonPictureStatics__Impl.Stubs.get_IsGroupProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IPersonPictureStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContactProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ContactProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPersonPictureStatics_get_ContactProperty("Microsoft.UI.Xaml.Controls.PersonPicture");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IPersonPictureStatics_get_ContactProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IPersonPictureStatics__Impl.Stubs.get_ContactProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IPersonPictureStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayNameProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_DisplayNameProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPersonPictureStatics_get_DisplayNameProperty("Microsoft.UI.Xaml.Controls.PersonPicture");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IPersonPictureStatics_get_DisplayNameProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IPersonPictureStatics__Impl.Stubs.get_DisplayNameProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IPersonPictureStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InitialsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_InitialsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPersonPictureStatics_get_InitialsProperty("Microsoft.UI.Xaml.Controls.PersonPicture");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IPersonPictureStatics_get_InitialsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IPersonPictureStatics__Impl.Stubs.get_InitialsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IPersonPictureStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreferSmallImageProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PreferSmallImageProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPersonPictureStatics_get_PreferSmallImageProperty("Microsoft.UI.Xaml.Controls.PersonPicture");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IPersonPictureStatics_get_PreferSmallImageProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IPersonPictureStatics__Impl.Stubs.get_PreferSmallImageProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IPersonPictureStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ProfilePictureProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ProfilePictureProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPersonPictureStatics_get_ProfilePictureProperty("Microsoft.UI.Xaml.Controls.PersonPicture");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IPersonPictureStatics_get_ProfilePictureProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IPersonPictureStatics__Impl.Stubs.get_ProfilePictureProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IPersonPictureStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public PersonPicture(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IPersonPictureTemplateSettings))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class PersonPictureTemplateSettings : global::Windows.UI.Xaml.DependencyObject, global::Microsoft.UI.Xaml.Controls.IPersonPictureTemplateSettings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActualInitials")]
		public string get_ActualInitials()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.IPersonPictureTemplateSettings__Impl.Stubs.get_ActualInitials(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActualImageBrush")]
		public global::Windows.UI.Xaml.Media.ImageBrush get_ActualImageBrush()
		{
			global::Windows.UI.Xaml.Media.ImageBrush __retVal = global::Microsoft.UI.Xaml.Controls.IPersonPictureTemplateSettings__Impl.Stubs.get_ActualImageBrush(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public PersonPictureTemplateSettings(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IPipsPager))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class PipsPager : global::Windows.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.IPipsPager
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public PipsPager() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPipsPagerFactory_CreateInstance("Microsoft.UI.Xaml.Controls.PipsPager");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IPipsPagerFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.PipsPager).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IPipsPagerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IPipsPagerFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IPipsPagerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IPipsPagerFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NumberOfPages")]
		public virtual int get_NumberOfPages()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IPipsPager__Impl.Stubs.get_NumberOfPages(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "NumberOfPages")]
		public virtual void put_NumberOfPages(int value)
		{
			global::Microsoft.UI.Xaml.Controls.IPipsPager__Impl.Stubs.put_NumberOfPages(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedPageIndex")]
		public virtual int get_SelectedPageIndex()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IPipsPager__Impl.Stubs.get_SelectedPageIndex(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectedPageIndex")]
		public virtual void put_SelectedPageIndex(int value)
		{
			global::Microsoft.UI.Xaml.Controls.IPipsPager__Impl.Stubs.put_SelectedPageIndex(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxVisiblePips")]
		public virtual int get_MaxVisiblePips()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IPipsPager__Impl.Stubs.get_MaxVisiblePips(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxVisiblePips")]
		public virtual void put_MaxVisiblePips(int value)
		{
			global::Microsoft.UI.Xaml.Controls.IPipsPager__Impl.Stubs.put_MaxVisiblePips(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Orientation")]
		public virtual global::Windows.UI.Xaml.Controls.Orientation get_Orientation()
		{
			global::Windows.UI.Xaml.Controls.Orientation __retVal = global::Microsoft.UI.Xaml.Controls.IPipsPager__Impl.Stubs.get_Orientation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Orientation")]
		public virtual void put_Orientation(global::Windows.UI.Xaml.Controls.Orientation value)
		{
			global::Microsoft.UI.Xaml.Controls.IPipsPager__Impl.Stubs.put_Orientation(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousButtonVisibility")]
		public virtual global::Microsoft.UI.Xaml.Controls.PipsPagerButtonVisibility get_PreviousButtonVisibility()
		{
			global::Microsoft.UI.Xaml.Controls.PipsPagerButtonVisibility __retVal = global::Microsoft.UI.Xaml.Controls.IPipsPager__Impl.Stubs.get_PreviousButtonVisibility(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PreviousButtonVisibility")]
		public virtual void put_PreviousButtonVisibility(global::Microsoft.UI.Xaml.Controls.PipsPagerButtonVisibility value)
		{
			global::Microsoft.UI.Xaml.Controls.IPipsPager__Impl.Stubs.put_PreviousButtonVisibility(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NextButtonVisibility")]
		public virtual global::Microsoft.UI.Xaml.Controls.PipsPagerButtonVisibility get_NextButtonVisibility()
		{
			global::Microsoft.UI.Xaml.Controls.PipsPagerButtonVisibility __retVal = global::Microsoft.UI.Xaml.Controls.IPipsPager__Impl.Stubs.get_NextButtonVisibility(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "NextButtonVisibility")]
		public virtual void put_NextButtonVisibility(global::Microsoft.UI.Xaml.Controls.PipsPagerButtonVisibility value)
		{
			global::Microsoft.UI.Xaml.Controls.IPipsPager__Impl.Stubs.put_NextButtonVisibility(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousButtonStyle")]
		public virtual global::Windows.UI.Xaml.Style get_PreviousButtonStyle()
		{
			global::Windows.UI.Xaml.Style __retVal = global::Microsoft.UI.Xaml.Controls.IPipsPager__Impl.Stubs.get_PreviousButtonStyle(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PreviousButtonStyle")]
		public virtual void put_PreviousButtonStyle(global::Windows.UI.Xaml.Style value)
		{
			global::Microsoft.UI.Xaml.Controls.IPipsPager__Impl.Stubs.put_PreviousButtonStyle(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NextButtonStyle")]
		public virtual global::Windows.UI.Xaml.Style get_NextButtonStyle()
		{
			global::Windows.UI.Xaml.Style __retVal = global::Microsoft.UI.Xaml.Controls.IPipsPager__Impl.Stubs.get_NextButtonStyle(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "NextButtonStyle")]
		public virtual void put_NextButtonStyle(global::Windows.UI.Xaml.Style value)
		{
			global::Microsoft.UI.Xaml.Controls.IPipsPager__Impl.Stubs.put_NextButtonStyle(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedPipStyle")]
		public virtual global::Windows.UI.Xaml.Style get_SelectedPipStyle()
		{
			global::Windows.UI.Xaml.Style __retVal = global::Microsoft.UI.Xaml.Controls.IPipsPager__Impl.Stubs.get_SelectedPipStyle(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectedPipStyle")]
		public virtual void put_SelectedPipStyle(global::Windows.UI.Xaml.Style value)
		{
			global::Microsoft.UI.Xaml.Controls.IPipsPager__Impl.Stubs.put_SelectedPipStyle(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NormalPipStyle")]
		public virtual global::Windows.UI.Xaml.Style get_NormalPipStyle()
		{
			global::Windows.UI.Xaml.Style __retVal = global::Microsoft.UI.Xaml.Controls.IPipsPager__Impl.Stubs.get_NormalPipStyle(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "NormalPipStyle")]
		public virtual void put_NormalPipStyle(global::Windows.UI.Xaml.Style value)
		{
			global::Microsoft.UI.Xaml.Controls.IPipsPager__Impl.Stubs.put_NormalPipStyle(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SelectedIndexChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SelectedIndexChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PipsPager, global::Microsoft.UI.Xaml.Controls.PipsPagerSelectedIndexChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.IPipsPager__Impl.Stubs.add_SelectedIndexChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SelectedIndexChanged")]
		public virtual void remove_SelectedIndexChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.IPipsPager__Impl.Stubs.remove_SelectedIndexChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettings")]
		public virtual global::Microsoft.UI.Xaml.Controls.PipsPagerTemplateSettings get_TemplateSettings()
		{
			global::Microsoft.UI.Xaml.Controls.PipsPagerTemplateSettings __retVal = global::Microsoft.UI.Xaml.Controls.IPipsPager__Impl.Stubs.get_TemplateSettings(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NumberOfPagesProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_NumberOfPagesProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPipsPagerStatics_get_NumberOfPagesProperty("Microsoft.UI.Xaml.Controls.PipsPager");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IPipsPagerStatics_get_NumberOfPagesProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IPipsPagerStatics__Impl.Stubs.get_NumberOfPagesProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IPipsPagerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedPageIndexProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SelectedPageIndexProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPipsPagerStatics_get_SelectedPageIndexProperty("Microsoft.UI.Xaml.Controls.PipsPager");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IPipsPagerStatics_get_SelectedPageIndexProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IPipsPagerStatics__Impl.Stubs.get_SelectedPageIndexProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IPipsPagerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxVisiblePipsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MaxVisiblePipsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPipsPagerStatics_get_MaxVisiblePipsProperty("Microsoft.UI.Xaml.Controls.PipsPager");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IPipsPagerStatics_get_MaxVisiblePipsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IPipsPagerStatics__Impl.Stubs.get_MaxVisiblePipsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IPipsPagerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OrientationProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_OrientationProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPipsPagerStatics_get_OrientationProperty("Microsoft.UI.Xaml.Controls.PipsPager");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IPipsPagerStatics_get_OrientationProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IPipsPagerStatics__Impl.Stubs.get_OrientationProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IPipsPagerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousButtonVisibilityProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PreviousButtonVisibilityProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPipsPagerStatics_get_PreviousButtonVisibilityProperty("Microsoft.UI.Xaml.Controls.PipsPager");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IPipsPagerStatics_get_PreviousButtonVisibilityProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IPipsPagerStatics__Impl.Stubs.get_PreviousButtonVisibilityProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IPipsPagerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NextButtonVisibilityProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_NextButtonVisibilityProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPipsPagerStatics_get_NextButtonVisibilityProperty("Microsoft.UI.Xaml.Controls.PipsPager");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IPipsPagerStatics_get_NextButtonVisibilityProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IPipsPagerStatics__Impl.Stubs.get_NextButtonVisibilityProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IPipsPagerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousButtonStyleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PreviousButtonStyleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPipsPagerStatics_get_PreviousButtonStyleProperty("Microsoft.UI.Xaml.Controls.PipsPager");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IPipsPagerStatics_get_PreviousButtonStyleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IPipsPagerStatics__Impl.Stubs.get_PreviousButtonStyleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IPipsPagerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NextButtonStyleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_NextButtonStyleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPipsPagerStatics_get_NextButtonStyleProperty("Microsoft.UI.Xaml.Controls.PipsPager");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IPipsPagerStatics_get_NextButtonStyleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IPipsPagerStatics__Impl.Stubs.get_NextButtonStyleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IPipsPagerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedPipStyleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SelectedPipStyleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPipsPagerStatics_get_SelectedPipStyleProperty("Microsoft.UI.Xaml.Controls.PipsPager");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IPipsPagerStatics_get_SelectedPipStyleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IPipsPagerStatics__Impl.Stubs.get_SelectedPipStyleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IPipsPagerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NormalPipStyleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_NormalPipStyleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPipsPagerStatics_get_NormalPipStyleProperty("Microsoft.UI.Xaml.Controls.PipsPager");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IPipsPagerStatics_get_NormalPipStyleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IPipsPagerStatics__Impl.Stubs.get_NormalPipStyleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IPipsPagerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public PipsPager(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IPipsPagerSelectedIndexChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class PipsPagerSelectedIndexChangedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IPipsPagerSelectedIndexChangedEventArgs
	{
		public PipsPagerSelectedIndexChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IPipsPagerTemplateSettings))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class PipsPagerTemplateSettings : global::Windows.UI.Xaml.DependencyObject, global::Microsoft.UI.Xaml.Controls.IPipsPagerTemplateSettings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PipsPagerItems")]
		public global::System.Collections.Generic.IList<int> get_PipsPagerItems()
		{
			global::System.Collections.Generic.IList<int> __retVal = global::Microsoft.UI.Xaml.Controls.IPipsPagerTemplateSettings__Impl.Stubs.get_PipsPagerItems(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public PipsPagerTemplateSettings(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IProgressBar))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ProgressBar : global::Windows.UI.Xaml.Controls.Primitives.RangeBase, global::Microsoft.UI.Xaml.Controls.IProgressBar
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ProgressBar() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IProgressBarFactory_CreateInstance("Microsoft.UI.Xaml.Controls.ProgressBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IProgressBarFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.ProgressBar).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IProgressBarFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IProgressBarFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IProgressBarFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IProgressBarFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsIndeterminate")]
		public virtual bool get_IsIndeterminate()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IProgressBar__Impl.Stubs.get_IsIndeterminate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsIndeterminate")]
		public virtual void put_IsIndeterminate(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IProgressBar__Impl.Stubs.put_IsIndeterminate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShowError")]
		public virtual bool get_ShowError()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IProgressBar__Impl.Stubs.get_ShowError(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ShowError")]
		public virtual void put_ShowError(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IProgressBar__Impl.Stubs.put_ShowError(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShowPaused")]
		public virtual bool get_ShowPaused()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IProgressBar__Impl.Stubs.get_ShowPaused(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ShowPaused")]
		public virtual void put_ShowPaused(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IProgressBar__Impl.Stubs.put_ShowPaused(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettings")]
		public virtual global::Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings get_TemplateSettings()
		{
			global::Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings __retVal = global::Microsoft.UI.Xaml.Controls.IProgressBar__Impl.Stubs.get_TemplateSettings(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsIndeterminateProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsIndeterminateProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IProgressBarStatics_get_IsIndeterminateProperty("Microsoft.UI.Xaml.Controls.ProgressBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IProgressBarStatics_get_IsIndeterminateProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IProgressBarStatics__Impl.Stubs.get_IsIndeterminateProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IProgressBarStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShowErrorProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ShowErrorProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IProgressBarStatics_get_ShowErrorProperty("Microsoft.UI.Xaml.Controls.ProgressBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IProgressBarStatics_get_ShowErrorProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IProgressBarStatics__Impl.Stubs.get_ShowErrorProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IProgressBarStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShowPausedProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ShowPausedProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IProgressBarStatics_get_ShowPausedProperty("Microsoft.UI.Xaml.Controls.ProgressBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IProgressBarStatics_get_ShowPausedProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IProgressBarStatics__Impl.Stubs.get_ShowPausedProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IProgressBarStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public ProgressBar(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IProgressBarTemplateSettings))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ProgressBarTemplateSettings : global::Windows.UI.Xaml.DependencyObject, global::Microsoft.UI.Xaml.Controls.IProgressBarTemplateSettings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContainerAnimationStartPosition")]
		public double get_ContainerAnimationStartPosition()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IProgressBarTemplateSettings__Impl.Stubs.get_ContainerAnimationStartPosition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContainerAnimationEndPosition")]
		public double get_ContainerAnimationEndPosition()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IProgressBarTemplateSettings__Impl.Stubs.get_ContainerAnimationEndPosition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Container2AnimationStartPosition")]
		public double get_Container2AnimationStartPosition()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IProgressBarTemplateSettings__Impl.Stubs.get_Container2AnimationStartPosition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Container2AnimationEndPosition")]
		public double get_Container2AnimationEndPosition()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IProgressBarTemplateSettings__Impl.Stubs.get_Container2AnimationEndPosition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContainerAnimationMidPosition")]
		public double get_ContainerAnimationMidPosition()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IProgressBarTemplateSettings__Impl.Stubs.get_ContainerAnimationMidPosition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IndicatorLengthDelta")]
		public double get_IndicatorLengthDelta()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IProgressBarTemplateSettings__Impl.Stubs.get_IndicatorLengthDelta(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ClipRect")]
		public global::Windows.UI.Xaml.Media.RectangleGeometry get_ClipRect()
		{
			global::Windows.UI.Xaml.Media.RectangleGeometry __retVal = global::Microsoft.UI.Xaml.Controls.IProgressBarTemplateSettings__Impl.Stubs.get_ClipRect(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "EllipseAnimationEndPosition")]
		public double get_EllipseAnimationEndPosition()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IProgressBarTemplateSettings__Impl.Stubs.get_EllipseAnimationEndPosition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "EllipseAnimationWellPosition")]
		public double get_EllipseAnimationWellPosition()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IProgressBarTemplateSettings__Impl.Stubs.get_EllipseAnimationWellPosition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "EllipseDiameter")]
		public double get_EllipseDiameter()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IProgressBarTemplateSettings__Impl.Stubs.get_EllipseDiameter(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "EllipseOffset")]
		public double get_EllipseOffset()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IProgressBarTemplateSettings__Impl.Stubs.get_EllipseOffset(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public ProgressBarTemplateSettings(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IProgressRing))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ProgressRing : global::Windows.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.IProgressRing
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ProgressRing() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IProgressRingFactory_CreateInstance("Microsoft.UI.Xaml.Controls.ProgressRing");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IProgressRingFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.ProgressRing).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IProgressRingFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IProgressRingFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IProgressRingFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IProgressRingFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsActive")]
		public virtual bool get_IsActive()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IProgressRing__Impl.Stubs.get_IsActive(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsActive")]
		public virtual void put_IsActive(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IProgressRing__Impl.Stubs.put_IsActive(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsIndeterminate")]
		public virtual bool get_IsIndeterminate()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IProgressRing__Impl.Stubs.get_IsIndeterminate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsIndeterminate")]
		public virtual void put_IsIndeterminate(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IProgressRing__Impl.Stubs.put_IsIndeterminate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettings")]
		public virtual global::Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings get_TemplateSettings()
		{
			global::Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings __retVal = global::Microsoft.UI.Xaml.Controls.IProgressRing__Impl.Stubs.get_TemplateSettings(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Value")]
		public virtual double get_Value()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IProgressRing__Impl.Stubs.get_Value(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Value")]
		public virtual void put_Value(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IProgressRing__Impl.Stubs.put_Value(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Minimum")]
		public virtual double get_Minimum()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IProgressRing__Impl.Stubs.get_Minimum(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Minimum")]
		public virtual void put_Minimum(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IProgressRing__Impl.Stubs.put_Minimum(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Maximum")]
		public virtual double get_Maximum()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IProgressRing__Impl.Stubs.get_Maximum(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Maximum")]
		public virtual void put_Maximum(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IProgressRing__Impl.Stubs.put_Maximum(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsActiveProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsActiveProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IProgressRingStatics_get_IsActiveProperty("Microsoft.UI.Xaml.Controls.ProgressRing");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IProgressRingStatics_get_IsActiveProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IProgressRingStatics__Impl.Stubs.get_IsActiveProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IProgressRingStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsIndeterminateProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsIndeterminateProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IProgressRingStatics_get_IsIndeterminateProperty("Microsoft.UI.Xaml.Controls.ProgressRing");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IProgressRingStatics_get_IsIndeterminateProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IProgressRingStatics__Impl.Stubs.get_IsIndeterminateProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IProgressRingStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValueProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ValueProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IProgressRingStatics_get_ValueProperty("Microsoft.UI.Xaml.Controls.ProgressRing");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IProgressRingStatics_get_ValueProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IProgressRingStatics__Impl.Stubs.get_ValueProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IProgressRingStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinimumProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MinimumProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IProgressRingStatics_get_MinimumProperty("Microsoft.UI.Xaml.Controls.ProgressRing");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IProgressRingStatics_get_MinimumProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IProgressRingStatics__Impl.Stubs.get_MinimumProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IProgressRingStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaximumProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MaximumProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IProgressRingStatics_get_MaximumProperty("Microsoft.UI.Xaml.Controls.ProgressRing");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IProgressRingStatics_get_MaximumProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IProgressRingStatics__Impl.Stubs.get_MaximumProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IProgressRingStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public ProgressRing(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IProgressRingTemplateSettings))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ProgressRingTemplateSettings : global::Windows.UI.Xaml.DependencyObject, global::Microsoft.UI.Xaml.Controls.IProgressRingTemplateSettings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "EllipseDiameter")]
		public double get_EllipseDiameter()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IProgressRingTemplateSettings__Impl.Stubs.get_EllipseDiameter(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "EllipseOffset")]
		public global::Windows.UI.Xaml.Thickness get_EllipseOffset()
		{
			global::Windows.UI.Xaml.Thickness __retVal = global::Microsoft.UI.Xaml.Controls.IProgressRingTemplateSettings__Impl.Stubs.get_EllipseOffset(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxSideLength")]
		public double get_MaxSideLength()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IProgressRingTemplateSettings__Impl.Stubs.get_MaxSideLength(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public ProgressRingTemplateSettings(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IRadioButtons))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RadioButtons : global::Windows.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.IRadioButtons
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public RadioButtons() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRadioButtonsFactory_CreateInstance("Microsoft.UI.Xaml.Controls.RadioButtons");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IRadioButtonsFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.RadioButtons).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IRadioButtonsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IRadioButtonsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IRadioButtonsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IRadioButtonsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSource")]
		public virtual object get_ItemsSource()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.IRadioButtons__Impl.Stubs.get_ItemsSource(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemsSource")]
		public virtual void put_ItemsSource(object value)
		{
			global::Microsoft.UI.Xaml.Controls.IRadioButtons__Impl.Stubs.put_ItemsSource(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Items")]
		public virtual global::System.Collections.Generic.IList<object> get_Items()
		{
			global::System.Collections.Generic.IList<object> __retVal = global::Microsoft.UI.Xaml.Controls.IRadioButtons__Impl.Stubs.get_Items(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemTemplate")]
		public virtual object get_ItemTemplate()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.IRadioButtons__Impl.Stubs.get_ItemTemplate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemTemplate")]
		public virtual void put_ItemTemplate(object value)
		{
			global::Microsoft.UI.Xaml.Controls.IRadioButtons__Impl.Stubs.put_ItemTemplate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual global::Windows.UI.Xaml.UIElement ContainerFromIndex(int index)
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.IRadioButtons__Impl.Stubs.ContainerFromIndex(
								this, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedIndex")]
		public virtual int get_SelectedIndex()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IRadioButtons__Impl.Stubs.get_SelectedIndex(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectedIndex")]
		public virtual void put_SelectedIndex(int value)
		{
			global::Microsoft.UI.Xaml.Controls.IRadioButtons__Impl.Stubs.put_SelectedIndex(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedItem")]
		public virtual object get_SelectedItem()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.IRadioButtons__Impl.Stubs.get_SelectedItem(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectedItem")]
		public virtual void put_SelectedItem(object value)
		{
			global::Microsoft.UI.Xaml.Controls.IRadioButtons__Impl.Stubs.put_SelectedItem(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SelectionChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SelectionChanged(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.IRadioButtons__Impl.Stubs.add_SelectionChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SelectionChanged")]
		public virtual void remove_SelectionChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.IRadioButtons__Impl.Stubs.remove_SelectionChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxColumns")]
		public virtual int get_MaxColumns()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IRadioButtons__Impl.Stubs.get_MaxColumns(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxColumns")]
		public virtual void put_MaxColumns(int value)
		{
			global::Microsoft.UI.Xaml.Controls.IRadioButtons__Impl.Stubs.put_MaxColumns(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Header")]
		public virtual object get_Header()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.IRadioButtons__Impl.Stubs.get_Header(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Header")]
		public virtual void put_Header(object value)
		{
			global::Microsoft.UI.Xaml.Controls.IRadioButtons__Impl.Stubs.put_Header(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplate")]
		public virtual global::Windows.UI.Xaml.DataTemplate get_HeaderTemplate()
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Microsoft.UI.Xaml.Controls.IRadioButtons__Impl.Stubs.get_HeaderTemplate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderTemplate")]
		public virtual void put_HeaderTemplate(global::Windows.UI.Xaml.DataTemplate value)
		{
			global::Microsoft.UI.Xaml.Controls.IRadioButtons__Impl.Stubs.put_HeaderTemplate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ItemsSourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRadioButtonsStatics_get_ItemsSourceProperty("Microsoft.UI.Xaml.Controls.RadioButtons");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRadioButtonsStatics_get_ItemsSourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRadioButtonsStatics__Impl.Stubs.get_ItemsSourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRadioButtonsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ItemsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRadioButtonsStatics_get_ItemsProperty("Microsoft.UI.Xaml.Controls.RadioButtons");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRadioButtonsStatics_get_ItemsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRadioButtonsStatics__Impl.Stubs.get_ItemsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRadioButtonsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemTemplateProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ItemTemplateProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRadioButtonsStatics_get_ItemTemplateProperty("Microsoft.UI.Xaml.Controls.RadioButtons");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRadioButtonsStatics_get_ItemTemplateProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRadioButtonsStatics__Impl.Stubs.get_ItemTemplateProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRadioButtonsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedIndexProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SelectedIndexProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRadioButtonsStatics_get_SelectedIndexProperty("Microsoft.UI.Xaml.Controls.RadioButtons");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRadioButtonsStatics_get_SelectedIndexProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRadioButtonsStatics__Impl.Stubs.get_SelectedIndexProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRadioButtonsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedItemProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SelectedItemProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRadioButtonsStatics_get_SelectedItemProperty("Microsoft.UI.Xaml.Controls.RadioButtons");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRadioButtonsStatics_get_SelectedItemProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRadioButtonsStatics__Impl.Stubs.get_SelectedItemProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRadioButtonsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxColumnsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MaxColumnsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRadioButtonsStatics_get_MaxColumnsProperty("Microsoft.UI.Xaml.Controls.RadioButtons");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRadioButtonsStatics_get_MaxColumnsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRadioButtonsStatics__Impl.Stubs.get_MaxColumnsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRadioButtonsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HeaderProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRadioButtonsStatics_get_HeaderProperty("Microsoft.UI.Xaml.Controls.RadioButtons");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRadioButtonsStatics_get_HeaderProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRadioButtonsStatics__Impl.Stubs.get_HeaderProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRadioButtonsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplateProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HeaderTemplateProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRadioButtonsStatics_get_HeaderTemplateProperty("Microsoft.UI.Xaml.Controls.RadioButtons");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRadioButtonsStatics_get_HeaderTemplateProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRadioButtonsStatics__Impl.Stubs.get_HeaderTemplateProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRadioButtonsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public RadioButtons(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IRatingControl))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RatingControl : global::Windows.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.IRatingControl
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public RatingControl() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingControlFactory_CreateInstance("Microsoft.UI.Xaml.Controls.RatingControl");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IRatingControlFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.RatingControl).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IRatingControlFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IRatingControlFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IRatingControlFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IRatingControlFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Caption")]
		public virtual string get_Caption()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.IRatingControl__Impl.Stubs.get_Caption(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Caption")]
		public virtual void put_Caption(string value)
		{
			global::Microsoft.UI.Xaml.Controls.IRatingControl__Impl.Stubs.put_Caption(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InitialSetValue")]
		public virtual int get_InitialSetValue()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IRatingControl__Impl.Stubs.get_InitialSetValue(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "InitialSetValue")]
		public virtual void put_InitialSetValue(int value)
		{
			global::Microsoft.UI.Xaml.Controls.IRatingControl__Impl.Stubs.put_InitialSetValue(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsClearEnabled")]
		public virtual bool get_IsClearEnabled()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IRatingControl__Impl.Stubs.get_IsClearEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsClearEnabled")]
		public virtual void put_IsClearEnabled(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IRatingControl__Impl.Stubs.put_IsClearEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsReadOnly")]
		public virtual bool get_IsReadOnly()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IRatingControl__Impl.Stubs.get_IsReadOnly(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsReadOnly")]
		public virtual void put_IsReadOnly(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IRatingControl__Impl.Stubs.put_IsReadOnly(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxRating")]
		public virtual int get_MaxRating()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IRatingControl__Impl.Stubs.get_MaxRating(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxRating")]
		public virtual void put_MaxRating(int value)
		{
			global::Microsoft.UI.Xaml.Controls.IRatingControl__Impl.Stubs.put_MaxRating(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlaceholderValue")]
		public virtual double get_PlaceholderValue()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IRatingControl__Impl.Stubs.get_PlaceholderValue(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PlaceholderValue")]
		public virtual void put_PlaceholderValue(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IRatingControl__Impl.Stubs.put_PlaceholderValue(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemInfo")]
		public virtual global::Microsoft.UI.Xaml.Controls.RatingItemInfo get_ItemInfo()
		{
			global::Microsoft.UI.Xaml.Controls.RatingItemInfo __retVal = global::Microsoft.UI.Xaml.Controls.IRatingControl__Impl.Stubs.get_ItemInfo(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemInfo")]
		public virtual void put_ItemInfo(global::Microsoft.UI.Xaml.Controls.RatingItemInfo value)
		{
			global::Microsoft.UI.Xaml.Controls.IRatingControl__Impl.Stubs.put_ItemInfo(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Value")]
		public virtual double get_Value()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IRatingControl__Impl.Stubs.get_Value(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Value")]
		public virtual void put_Value(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IRatingControl__Impl.Stubs.put_Value(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ValueChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ValueChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RatingControl, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.IRatingControl__Impl.Stubs.add_ValueChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ValueChanged")]
		public virtual void remove_ValueChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.IRatingControl__Impl.Stubs.remove_ValueChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CaptionProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CaptionProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingControlStatics_get_CaptionProperty("Microsoft.UI.Xaml.Controls.RatingControl");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRatingControlStatics_get_CaptionProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRatingControlStatics__Impl.Stubs.get_CaptionProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRatingControlStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InitialSetValueProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_InitialSetValueProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingControlStatics_get_InitialSetValueProperty("Microsoft.UI.Xaml.Controls.RatingControl");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRatingControlStatics_get_InitialSetValueProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRatingControlStatics__Impl.Stubs.get_InitialSetValueProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRatingControlStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsClearEnabledProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsClearEnabledProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingControlStatics_get_IsClearEnabledProperty("Microsoft.UI.Xaml.Controls.RatingControl");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRatingControlStatics_get_IsClearEnabledProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRatingControlStatics__Impl.Stubs.get_IsClearEnabledProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRatingControlStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsReadOnlyProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsReadOnlyProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingControlStatics_get_IsReadOnlyProperty("Microsoft.UI.Xaml.Controls.RatingControl");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRatingControlStatics_get_IsReadOnlyProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRatingControlStatics__Impl.Stubs.get_IsReadOnlyProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRatingControlStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxRatingProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MaxRatingProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingControlStatics_get_MaxRatingProperty("Microsoft.UI.Xaml.Controls.RatingControl");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRatingControlStatics_get_MaxRatingProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRatingControlStatics__Impl.Stubs.get_MaxRatingProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRatingControlStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlaceholderValueProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PlaceholderValueProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingControlStatics_get_PlaceholderValueProperty("Microsoft.UI.Xaml.Controls.RatingControl");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRatingControlStatics_get_PlaceholderValueProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRatingControlStatics__Impl.Stubs.get_PlaceholderValueProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRatingControlStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemInfoProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ItemInfoProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingControlStatics_get_ItemInfoProperty("Microsoft.UI.Xaml.Controls.RatingControl");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRatingControlStatics_get_ItemInfoProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRatingControlStatics__Impl.Stubs.get_ItemInfoProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRatingControlStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValueProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ValueProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingControlStatics_get_ValueProperty("Microsoft.UI.Xaml.Controls.RatingControl");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRatingControlStatics_get_ValueProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRatingControlStatics__Impl.Stubs.get_ValueProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRatingControlStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public RatingControl(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IRatingItemInfo))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RatingItemInfo : global::Windows.UI.Xaml.DependencyObject, global::Microsoft.UI.Xaml.Controls.IRatingItemInfo
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public RatingItemInfo() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingItemInfoFactory_CreateInstance("Microsoft.UI.Xaml.Controls.RatingItemInfo");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IRatingItemInfoFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.RatingItemInfo).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IRatingItemInfoFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IRatingItemInfoFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IRatingItemInfoFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IRatingItemInfoFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public RatingItemInfo(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IItemsRepeater))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ItemsRepeater : global::Windows.UI.Xaml.FrameworkElement, global::Microsoft.UI.Xaml.Controls.IItemsRepeater
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ItemsRepeater() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IItemsRepeaterFactory_CreateInstance("Microsoft.UI.Xaml.Controls.ItemsRepeater");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IItemsRepeaterFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.ItemsRepeater).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IItemsRepeaterFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IItemsRepeaterFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IItemsRepeaterFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IItemsRepeaterFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSource")]
		public virtual object get_ItemsSource()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeater__Impl.Stubs.get_ItemsSource(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemsSource")]
		public virtual void put_ItemsSource(object value)
		{
			global::Microsoft.UI.Xaml.Controls.IItemsRepeater__Impl.Stubs.put_ItemsSource(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSourceView")]
		public virtual global::Microsoft.UI.Xaml.Controls.ItemsSourceView get_ItemsSourceView()
		{
			global::Microsoft.UI.Xaml.Controls.ItemsSourceView __retVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeater__Impl.Stubs.get_ItemsSourceView(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemTemplate")]
		public virtual object get_ItemTemplate()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeater__Impl.Stubs.get_ItemTemplate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemTemplate")]
		public virtual void put_ItemTemplate(object value)
		{
			global::Microsoft.UI.Xaml.Controls.IItemsRepeater__Impl.Stubs.put_ItemTemplate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Layout")]
		public virtual global::Microsoft.UI.Xaml.Controls.Layout get_Layout()
		{
			global::Microsoft.UI.Xaml.Controls.Layout __retVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeater__Impl.Stubs.get_Layout(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Layout")]
		public virtual void put_Layout(global::Microsoft.UI.Xaml.Controls.Layout value)
		{
			global::Microsoft.UI.Xaml.Controls.IItemsRepeater__Impl.Stubs.put_Layout(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalCacheLength")]
		public virtual double get_HorizontalCacheLength()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeater__Impl.Stubs.get_HorizontalCacheLength(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalCacheLength")]
		public virtual void put_HorizontalCacheLength(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IItemsRepeater__Impl.Stubs.put_HorizontalCacheLength(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalCacheLength")]
		public virtual double get_VerticalCacheLength()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeater__Impl.Stubs.get_VerticalCacheLength(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalCacheLength")]
		public virtual void put_VerticalCacheLength(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IItemsRepeater__Impl.Stubs.put_VerticalCacheLength(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Background")]
		public virtual global::Windows.UI.Xaml.Media.Brush get_Background()
		{
			global::Windows.UI.Xaml.Media.Brush __retVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeater__Impl.Stubs.get_Background(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Background")]
		public virtual void put_Background(global::Windows.UI.Xaml.Media.Brush value)
		{
			global::Microsoft.UI.Xaml.Controls.IItemsRepeater__Impl.Stubs.put_Background(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual int GetElementIndex(global::Windows.UI.Xaml.UIElement element)
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeater__Impl.Stubs.GetElementIndex(
								this, 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual global::Windows.UI.Xaml.UIElement TryGetElement(int index)
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeater__Impl.Stubs.TryGetElement(
								this, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual global::Windows.UI.Xaml.UIElement GetOrCreateElement(int index)
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeater__Impl.Stubs.GetOrCreateElement(
								this, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ElementPrepared")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ElementPrepared(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementPreparedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeater__Impl.Stubs.add_ElementPrepared(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ElementPrepared")]
		public virtual void remove_ElementPrepared(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.IItemsRepeater__Impl.Stubs.remove_ElementPrepared(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ElementClearing")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ElementClearing(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementClearingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeater__Impl.Stubs.add_ElementClearing(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ElementClearing")]
		public virtual void remove_ElementClearing(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.IItemsRepeater__Impl.Stubs.remove_ElementClearing(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ElementIndexChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ElementIndexChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementIndexChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeater__Impl.Stubs.add_ElementIndexChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ElementIndexChanged")]
		public virtual void remove_ElementIndexChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.IItemsRepeater__Impl.Stubs.remove_ElementIndexChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ItemsSourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IItemsRepeaterStatics_get_ItemsSourceProperty("Microsoft.UI.Xaml.Controls.ItemsRepeater");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IItemsRepeaterStatics_get_ItemsSourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeaterStatics__Impl.Stubs.get_ItemsSourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IItemsRepeaterStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemTemplateProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ItemTemplateProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IItemsRepeaterStatics_get_ItemTemplateProperty("Microsoft.UI.Xaml.Controls.ItemsRepeater");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IItemsRepeaterStatics_get_ItemTemplateProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeaterStatics__Impl.Stubs.get_ItemTemplateProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IItemsRepeaterStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LayoutProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_LayoutProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IItemsRepeaterStatics_get_LayoutProperty("Microsoft.UI.Xaml.Controls.ItemsRepeater");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IItemsRepeaterStatics_get_LayoutProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeaterStatics__Impl.Stubs.get_LayoutProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IItemsRepeaterStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalCacheLengthProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HorizontalCacheLengthProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IItemsRepeaterStatics_get_HorizontalCacheLengthProperty("Microsoft.UI.Xaml.Controls.ItemsRepeater");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IItemsRepeaterStatics_get_HorizontalCacheLengthProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeaterStatics__Impl.Stubs.get_HorizontalCacheLengthProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IItemsRepeaterStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalCacheLengthProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_VerticalCacheLengthProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IItemsRepeaterStatics_get_VerticalCacheLengthProperty("Microsoft.UI.Xaml.Controls.ItemsRepeater");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IItemsRepeaterStatics_get_VerticalCacheLengthProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeaterStatics__Impl.Stubs.get_VerticalCacheLengthProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IItemsRepeaterStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BackgroundProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_BackgroundProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IItemsRepeaterStatics_get_BackgroundProperty("Microsoft.UI.Xaml.Controls.ItemsRepeater");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IItemsRepeaterStatics_get_BackgroundProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeaterStatics__Impl.Stubs.get_BackgroundProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IItemsRepeaterStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public ItemsRepeater(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IItemsSourceView))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Specialized.INotifyCollectionChanged))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ItemsSourceView : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IItemsSourceView, global::System.Collections.Specialized.INotifyCollectionChanged
	{
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __add_CollectionChanged(global::System.Collections.Specialized.NotifyCollectionChangedEventHandler eventHandler)
		{
			return global::System.Collections.Specialized.INotifyCollectionChanged__Impl.RCWAdapter.add_CollectionChanged(
								this, 
								eventHandler
							);
		}

		void __remove_CollectionChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::System.Collections.Specialized.INotifyCollectionChanged__Impl.RCWAdapter.remove_CollectionChanged(
								this, 
								token
							);
		}

		public virtual event global::System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged
		{
			add
			{
				global::System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.AddEventHandler<global::System.Collections.Specialized.NotifyCollectionChangedEventHandler>(
									new global::System.Func<global::System.Collections.Specialized.NotifyCollectionChangedEventHandler, global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>(this.__add_CollectionChanged), 
									new global::System.Action<global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>(this.__remove_CollectionChanged), 
									value
								);
			}
			remove
			{
				global::System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveEventHandler<global::System.Collections.Specialized.NotifyCollectionChangedEventHandler>(
									new global::System.Action<global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>(this.__remove_CollectionChanged), 
									value
								);
			}
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ItemsSourceView(object source)
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IItemsSourceViewFactory_CreateInstance(
								"Microsoft.UI.Xaml.Controls.ItemsSourceView", 
								source
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IItemsSourceViewFactory_CreateInstance(
					string typeName, 
					object source)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.ItemsSourceView).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IItemsSourceViewFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IItemsSourceViewFactory).TypeHandle
													), 
									source, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IItemsSourceViewFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IItemsSourceViewFactory).TypeHandle
													), 
									source, 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Count")]
		public virtual int get_Count()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IItemsSourceView__Impl.Stubs.get_Count(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual object GetAt(int index)
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.IItemsSourceView__Impl.Stubs.GetAt(
								this, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasKeyIndexMapping")]
		public virtual bool get_HasKeyIndexMapping()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IItemsSourceView__Impl.Stubs.get_HasKeyIndexMapping(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual string KeyFromIndex(int index)
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.IItemsSourceView__Impl.Stubs.KeyFromIndex(
								this, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual int IndexFromKey(string key)
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IItemsSourceView__Impl.Stubs.IndexFromKey(
								this, 
								key
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual int IndexOf(object item)
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IItemsSourceView__Impl.Stubs.IndexOf(
								this, 
								item
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public ItemsSourceView(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ILayout))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ILayoutProtected))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Layout : global::Windows.UI.Xaml.DependencyObject, global::Microsoft.UI.Xaml.Controls.ILayout, global::Microsoft.UI.Xaml.Controls.ILayoutProtected
	{
		public virtual void InitializeForContext(global::Microsoft.UI.Xaml.Controls.LayoutContext context)
		{
			global::Microsoft.UI.Xaml.Controls.ILayout__Impl.Stubs.InitializeForContext(
								this, 
								context
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void UninitializeForContext(global::Microsoft.UI.Xaml.Controls.LayoutContext context)
		{
			global::Microsoft.UI.Xaml.Controls.ILayout__Impl.Stubs.UninitializeForContext(
								this, 
								context
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual global::Windows.Foundation.Size Measure(
					global::Microsoft.UI.Xaml.Controls.LayoutContext context, 
					global::Windows.Foundation.Size availableSize)
		{
			global::Windows.Foundation.Size __retVal = global::Microsoft.UI.Xaml.Controls.ILayout__Impl.Stubs.Measure(
								this, 
								context, 
								availableSize
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual global::Windows.Foundation.Size Arrange(
					global::Microsoft.UI.Xaml.Controls.LayoutContext context, 
					global::Windows.Foundation.Size finalSize)
		{
			global::Windows.Foundation.Size __retVal = global::Microsoft.UI.Xaml.Controls.ILayout__Impl.Stubs.Arrange(
								this, 
								context, 
								finalSize
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "MeasureInvalidated")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_MeasureInvalidated(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Layout, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ILayout__Impl.Stubs.add_MeasureInvalidated(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "MeasureInvalidated")]
		public virtual void remove_MeasureInvalidated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ILayout__Impl.Stubs.remove_MeasureInvalidated(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ArrangeInvalidated")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ArrangeInvalidated(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Layout, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ILayout__Impl.Stubs.add_ArrangeInvalidated(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ArrangeInvalidated")]
		public virtual void remove_ArrangeInvalidated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ILayout__Impl.Stubs.remove_ArrangeInvalidated(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Microsoft.UI.Xaml.Controls.ILayoutProtected.InvalidateMeasure()
		{
			this.InvalidateMeasure();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void InvalidateMeasure()
		{
			global::Microsoft.UI.Xaml.Controls.ILayoutProtected__Impl.Stubs.InvalidateMeasure(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Microsoft.UI.Xaml.Controls.ILayoutProtected.InvalidateArrange()
		{
			this.InvalidateArrange();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void InvalidateArrange()
		{
			global::Microsoft.UI.Xaml.Controls.ILayoutProtected__Impl.Stubs.InvalidateArrange(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Layout(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ILayoutContext))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ILayoutContextOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class LayoutContext : global::Windows.UI.Xaml.DependencyObject, global::Microsoft.UI.Xaml.Controls.ILayoutContext, global::Microsoft.UI.Xaml.Controls.ILayoutContextOverrides
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LayoutState")]
		public virtual object get_LayoutState()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ILayoutContext__Impl.Stubs.get_LayoutState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "LayoutState")]
		public virtual void put_LayoutState(object value)
		{
			global::Microsoft.UI.Xaml.Controls.ILayoutContext__Impl.Stubs.put_LayoutState(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		object global::Microsoft.UI.Xaml.Controls.ILayoutContextOverrides.get_LayoutStateCore()
		{
			object __retVal_1 = this.get_LayoutStateCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LayoutStateCore")]
		protected virtual object get_LayoutStateCore()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ILayoutContextOverrides__Impl.Stubs.get_LayoutStateCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Microsoft.UI.Xaml.Controls.ILayoutContextOverrides.put_LayoutStateCore(object value)
		{
			this.put_LayoutStateCore(value);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "LayoutStateCore")]
		protected virtual void put_LayoutStateCore(object value)
		{
			global::Microsoft.UI.Xaml.Controls.ILayoutContextOverrides__Impl.Stubs.put_LayoutStateCore(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public LayoutContext(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IItemsRepeaterElementPreparedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ItemsRepeaterElementPreparedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IItemsRepeaterElementPreparedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Element")]
		public global::Windows.UI.Xaml.UIElement get_Element()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeaterElementPreparedEventArgs__Impl.Stubs.get_Element(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Index")]
		public int get_Index()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeaterElementPreparedEventArgs__Impl.Stubs.get_Index(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public ItemsRepeaterElementPreparedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IItemsRepeaterElementClearingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ItemsRepeaterElementClearingEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IItemsRepeaterElementClearingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Element")]
		public global::Windows.UI.Xaml.UIElement get_Element()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeaterElementClearingEventArgs__Impl.Stubs.get_Element(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public ItemsRepeaterElementClearingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IItemsRepeaterElementIndexChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ItemsRepeaterElementIndexChangedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IItemsRepeaterElementIndexChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Element")]
		public global::Windows.UI.Xaml.UIElement get_Element()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeaterElementIndexChangedEventArgs__Impl.Stubs.get_Element(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OldIndex")]
		public int get_OldIndex()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeaterElementIndexChangedEventArgs__Impl.Stubs.get_OldIndex(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NewIndex")]
		public int get_NewIndex()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeaterElementIndexChangedEventArgs__Impl.Stubs.get_NewIndex(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public ItemsRepeaterElementIndexChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITabView))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class TabView : global::Windows.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.ITabView
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public TabView() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewFactory_CreateInstance("Microsoft.UI.Xaml.Controls.TabView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__ITabViewFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.TabView).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.ITabViewFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITabViewFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.ITabViewFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITabViewFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabWidthMode")]
		public virtual global::Microsoft.UI.Xaml.Controls.TabViewWidthMode get_TabWidthMode()
		{
			global::Microsoft.UI.Xaml.Controls.TabViewWidthMode __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.get_TabWidthMode(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TabWidthMode")]
		public virtual void put_TabWidthMode(global::Microsoft.UI.Xaml.Controls.TabViewWidthMode value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.put_TabWidthMode(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonOverlayMode")]
		public virtual global::Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode get_CloseButtonOverlayMode()
		{
			global::Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.get_CloseButtonOverlayMode(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CloseButtonOverlayMode")]
		public virtual void put_CloseButtonOverlayMode(global::Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.put_CloseButtonOverlayMode(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabStripHeader")]
		public virtual object get_TabStripHeader()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.get_TabStripHeader(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TabStripHeader")]
		public virtual void put_TabStripHeader(object value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.put_TabStripHeader(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabStripHeaderTemplate")]
		public virtual global::Windows.UI.Xaml.DataTemplate get_TabStripHeaderTemplate()
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.get_TabStripHeaderTemplate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TabStripHeaderTemplate")]
		public virtual void put_TabStripHeaderTemplate(global::Windows.UI.Xaml.DataTemplate value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.put_TabStripHeaderTemplate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabStripFooter")]
		public virtual object get_TabStripFooter()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.get_TabStripFooter(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TabStripFooter")]
		public virtual void put_TabStripFooter(object value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.put_TabStripFooter(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabStripFooterTemplate")]
		public virtual global::Windows.UI.Xaml.DataTemplate get_TabStripFooterTemplate()
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.get_TabStripFooterTemplate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TabStripFooterTemplate")]
		public virtual void put_TabStripFooterTemplate(global::Windows.UI.Xaml.DataTemplate value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.put_TabStripFooterTemplate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAddTabButtonVisible")]
		public virtual bool get_IsAddTabButtonVisible()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.get_IsAddTabButtonVisible(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsAddTabButtonVisible")]
		public virtual void put_IsAddTabButtonVisible(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.put_IsAddTabButtonVisible(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AddTabButtonCommand")]
		public virtual global::System.Windows.Input.ICommand get_AddTabButtonCommand()
		{
			global::System.Windows.Input.ICommand __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.get_AddTabButtonCommand(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AddTabButtonCommand")]
		public virtual void put_AddTabButtonCommand(global::System.Windows.Input.ICommand value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.put_AddTabButtonCommand(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AddTabButtonCommandParameter")]
		public virtual object get_AddTabButtonCommandParameter()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.get_AddTabButtonCommandParameter(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AddTabButtonCommandParameter")]
		public virtual void put_AddTabButtonCommandParameter(object value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.put_AddTabButtonCommandParameter(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TabCloseRequested")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TabCloseRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.add_TabCloseRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TabCloseRequested")]
		public virtual void remove_TabCloseRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.remove_TabCloseRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TabDroppedOutside")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TabDroppedOutside(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDroppedOutsideEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.add_TabDroppedOutside(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TabDroppedOutside")]
		public virtual void remove_TabDroppedOutside(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.remove_TabDroppedOutside(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AddTabButtonClick")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AddTabButtonClick(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.add_AddTabButtonClick(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AddTabButtonClick")]
		public virtual void remove_AddTabButtonClick(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.remove_AddTabButtonClick(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TabItemsChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TabItemsChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Windows.Foundation.Collections.IVectorChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.add_TabItemsChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TabItemsChanged")]
		public virtual void remove_TabItemsChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.remove_TabItemsChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabItemsSource")]
		public virtual object get_TabItemsSource()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.get_TabItemsSource(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TabItemsSource")]
		public virtual void put_TabItemsSource(object value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.put_TabItemsSource(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabItems")]
		public virtual global::System.Collections.Generic.IList<object> get_TabItems()
		{
			global::System.Collections.Generic.IList<object> __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.get_TabItems(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabItemTemplate")]
		public virtual global::Windows.UI.Xaml.DataTemplate get_TabItemTemplate()
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.get_TabItemTemplate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TabItemTemplate")]
		public virtual void put_TabItemTemplate(global::Windows.UI.Xaml.DataTemplate value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.put_TabItemTemplate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabItemTemplateSelector")]
		public virtual global::Windows.UI.Xaml.Controls.DataTemplateSelector get_TabItemTemplateSelector()
		{
			global::Windows.UI.Xaml.Controls.DataTemplateSelector __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.get_TabItemTemplateSelector(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TabItemTemplateSelector")]
		public virtual void put_TabItemTemplateSelector(global::Windows.UI.Xaml.Controls.DataTemplateSelector value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.put_TabItemTemplateSelector(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanDragTabs")]
		public virtual bool get_CanDragTabs()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.get_CanDragTabs(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CanDragTabs")]
		public virtual void put_CanDragTabs(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.put_CanDragTabs(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanReorderTabs")]
		public virtual bool get_CanReorderTabs()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.get_CanReorderTabs(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CanReorderTabs")]
		public virtual void put_CanReorderTabs(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.put_CanReorderTabs(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AllowDropTabs")]
		public virtual bool get_AllowDropTabs()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.get_AllowDropTabs(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AllowDropTabs")]
		public virtual void put_AllowDropTabs(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.put_AllowDropTabs(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedIndex")]
		public virtual int get_SelectedIndex()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.get_SelectedIndex(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectedIndex")]
		public virtual void put_SelectedIndex(int value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.put_SelectedIndex(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedItem")]
		public virtual object get_SelectedItem()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.get_SelectedItem(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectedItem")]
		public virtual void put_SelectedItem(object value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.put_SelectedItem(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual global::Windows.UI.Xaml.DependencyObject ContainerFromItem(object item)
		{
			global::Windows.UI.Xaml.DependencyObject __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.ContainerFromItem(
								this, 
								item
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual global::Windows.UI.Xaml.DependencyObject ContainerFromIndex(int index)
		{
			global::Windows.UI.Xaml.DependencyObject __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.ContainerFromIndex(
								this, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SelectionChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SelectionChanged(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.add_SelectionChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SelectionChanged")]
		public virtual void remove_SelectionChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.remove_SelectionChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TabDragStarting")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TabDragStarting(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDragStartingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.add_TabDragStarting(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TabDragStarting")]
		public virtual void remove_TabDragStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.remove_TabDragStarting(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TabDragCompleted")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TabDragCompleted(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDragCompletedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.add_TabDragCompleted(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TabDragCompleted")]
		public virtual void remove_TabDragCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.remove_TabDragCompleted(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TabStripDragOver")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TabStripDragOver(global::Windows.UI.Xaml.DragEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.add_TabStripDragOver(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TabStripDragOver")]
		public virtual void remove_TabStripDragOver(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.remove_TabStripDragOver(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TabStripDrop")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TabStripDrop(global::Windows.UI.Xaml.DragEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.add_TabStripDrop(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TabStripDrop")]
		public virtual void remove_TabStripDrop(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ITabView__Impl.Stubs.remove_TabStripDrop(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabWidthModeProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TabWidthModeProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_TabWidthModeProperty("Microsoft.UI.Xaml.Controls.TabView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_TabWidthModeProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewStatics__Impl.Stubs.get_TabWidthModeProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabStripHeaderProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TabStripHeaderProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_TabStripHeaderProperty("Microsoft.UI.Xaml.Controls.TabView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_TabStripHeaderProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewStatics__Impl.Stubs.get_TabStripHeaderProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabStripHeaderTemplateProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TabStripHeaderTemplateProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_TabStripHeaderTemplateProperty("Microsoft.UI.Xaml.Controls.TabView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_TabStripHeaderTemplateProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewStatics__Impl.Stubs.get_TabStripHeaderTemplateProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabStripFooterProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TabStripFooterProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_TabStripFooterProperty("Microsoft.UI.Xaml.Controls.TabView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_TabStripFooterProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewStatics__Impl.Stubs.get_TabStripFooterProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabStripFooterTemplateProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TabStripFooterTemplateProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_TabStripFooterTemplateProperty("Microsoft.UI.Xaml.Controls.TabView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_TabStripFooterTemplateProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewStatics__Impl.Stubs.get_TabStripFooterTemplateProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAddTabButtonVisibleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsAddTabButtonVisibleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_IsAddTabButtonVisibleProperty("Microsoft.UI.Xaml.Controls.TabView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_IsAddTabButtonVisibleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewStatics__Impl.Stubs.get_IsAddTabButtonVisibleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AddTabButtonCommandProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_AddTabButtonCommandProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_AddTabButtonCommandProperty("Microsoft.UI.Xaml.Controls.TabView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_AddTabButtonCommandProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewStatics__Impl.Stubs.get_AddTabButtonCommandProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AddTabButtonCommandParameterProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_AddTabButtonCommandParameterProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_AddTabButtonCommandParameterProperty("Microsoft.UI.Xaml.Controls.TabView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_AddTabButtonCommandParameterProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewStatics__Impl.Stubs.get_AddTabButtonCommandParameterProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabItemsSourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TabItemsSourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_TabItemsSourceProperty("Microsoft.UI.Xaml.Controls.TabView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_TabItemsSourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewStatics__Impl.Stubs.get_TabItemsSourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabItemsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TabItemsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_TabItemsProperty("Microsoft.UI.Xaml.Controls.TabView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_TabItemsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewStatics__Impl.Stubs.get_TabItemsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabItemTemplateProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TabItemTemplateProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_TabItemTemplateProperty("Microsoft.UI.Xaml.Controls.TabView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_TabItemTemplateProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewStatics__Impl.Stubs.get_TabItemTemplateProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabItemTemplateSelectorProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TabItemTemplateSelectorProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_TabItemTemplateSelectorProperty("Microsoft.UI.Xaml.Controls.TabView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_TabItemTemplateSelectorProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewStatics__Impl.Stubs.get_TabItemTemplateSelectorProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonOverlayModeProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CloseButtonOverlayModeProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_CloseButtonOverlayModeProperty("Microsoft.UI.Xaml.Controls.TabView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_CloseButtonOverlayModeProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewStatics__Impl.Stubs.get_CloseButtonOverlayModeProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanDragTabsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CanDragTabsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_CanDragTabsProperty("Microsoft.UI.Xaml.Controls.TabView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_CanDragTabsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewStatics__Impl.Stubs.get_CanDragTabsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanReorderTabsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CanReorderTabsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_CanReorderTabsProperty("Microsoft.UI.Xaml.Controls.TabView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_CanReorderTabsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewStatics__Impl.Stubs.get_CanReorderTabsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AllowDropTabsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_AllowDropTabsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_AllowDropTabsProperty("Microsoft.UI.Xaml.Controls.TabView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_AllowDropTabsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewStatics__Impl.Stubs.get_AllowDropTabsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedIndexProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SelectedIndexProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_SelectedIndexProperty("Microsoft.UI.Xaml.Controls.TabView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_SelectedIndexProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewStatics__Impl.Stubs.get_SelectedIndexProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedItemProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SelectedItemProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_SelectedItemProperty("Microsoft.UI.Xaml.Controls.TabView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewStatics_get_SelectedItemProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewStatics__Impl.Stubs.get_SelectedItemProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public TabView(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITabViewTabCloseRequestedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TabViewTabCloseRequestedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.ITabViewTabCloseRequestedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Item")]
		public object get_Item()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ITabViewTabCloseRequestedEventArgs__Impl.Stubs.get_Item(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Tab")]
		public global::Microsoft.UI.Xaml.Controls.TabViewItem get_Tab()
		{
			global::Microsoft.UI.Xaml.Controls.TabViewItem __retVal = global::Microsoft.UI.Xaml.Controls.ITabViewTabCloseRequestedEventArgs__Impl.Stubs.get_Tab(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public TabViewTabCloseRequestedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITabViewItem))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class TabViewItem : global::Windows.UI.Xaml.Controls.ListViewItem, global::Microsoft.UI.Xaml.Controls.ITabViewItem
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public TabViewItem() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewItemFactory_CreateInstance("Microsoft.UI.Xaml.Controls.TabViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__ITabViewItemFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.TabViewItem).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.ITabViewItemFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITabViewItemFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.ITabViewItemFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITabViewItemFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Header")]
		public virtual object get_Header()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ITabViewItem__Impl.Stubs.get_Header(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Header")]
		public virtual void put_Header(object value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabViewItem__Impl.Stubs.put_Header(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplate")]
		public virtual global::Windows.UI.Xaml.DataTemplate get_HeaderTemplate()
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Microsoft.UI.Xaml.Controls.ITabViewItem__Impl.Stubs.get_HeaderTemplate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderTemplate")]
		public virtual void put_HeaderTemplate(global::Windows.UI.Xaml.DataTemplate value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabViewItem__Impl.Stubs.put_HeaderTemplate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconSource")]
		public virtual global::Microsoft.UI.Xaml.Controls.IconSource get_IconSource()
		{
			global::Microsoft.UI.Xaml.Controls.IconSource __retVal = global::Microsoft.UI.Xaml.Controls.ITabViewItem__Impl.Stubs.get_IconSource(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IconSource")]
		public virtual void put_IconSource(global::Microsoft.UI.Xaml.Controls.IconSource value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabViewItem__Impl.Stubs.put_IconSource(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsClosable")]
		public virtual bool get_IsClosable()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.ITabViewItem__Impl.Stubs.get_IsClosable(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsClosable")]
		public virtual void put_IsClosable(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabViewItem__Impl.Stubs.put_IsClosable(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabViewTemplateSettings")]
		public virtual global::Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings get_TabViewTemplateSettings()
		{
			global::Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings __retVal = global::Microsoft.UI.Xaml.Controls.ITabViewItem__Impl.Stubs.get_TabViewTemplateSettings(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CloseRequested")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CloseRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabViewItem, global::Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ITabViewItem__Impl.Stubs.add_CloseRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CloseRequested")]
		public virtual void remove_CloseRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ITabViewItem__Impl.Stubs.remove_CloseRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HeaderProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewItemStatics_get_HeaderProperty("Microsoft.UI.Xaml.Controls.TabViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewItemStatics_get_HeaderProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewItemStatics__Impl.Stubs.get_HeaderProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplateProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HeaderTemplateProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewItemStatics_get_HeaderTemplateProperty("Microsoft.UI.Xaml.Controls.TabViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewItemStatics_get_HeaderTemplateProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewItemStatics__Impl.Stubs.get_HeaderTemplateProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconSourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IconSourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewItemStatics_get_IconSourceProperty("Microsoft.UI.Xaml.Controls.TabViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewItemStatics_get_IconSourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewItemStatics__Impl.Stubs.get_IconSourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsClosableProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsClosableProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewItemStatics_get_IsClosableProperty("Microsoft.UI.Xaml.Controls.TabViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewItemStatics_get_IsClosableProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewItemStatics__Impl.Stubs.get_IsClosableProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabViewTemplateSettingsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TabViewTemplateSettingsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewItemStatics_get_TabViewTemplateSettingsProperty("Microsoft.UI.Xaml.Controls.TabViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewItemStatics_get_TabViewTemplateSettingsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewItemStatics__Impl.Stubs.get_TabViewTemplateSettingsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public TabViewItem(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettings))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettings2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(131072)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class TabViewItemTemplateSettings : global::Windows.UI.Xaml.DependencyObject, global::Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettings, global::Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettings2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public TabViewItemTemplateSettings() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewItemTemplateSettingsFactory_CreateInstance("Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__ITabViewItemTemplateSettingsFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettingsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettingsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettingsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettingsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconElement")]
		public virtual global::Windows.UI.Xaml.Controls.IconElement get_IconElement()
		{
			global::Windows.UI.Xaml.Controls.IconElement __retVal = global::Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettings__Impl.Stubs.get_IconElement(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IconElement")]
		public virtual void put_IconElement(global::Windows.UI.Xaml.Controls.IconElement value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettings__Impl.Stubs.put_IconElement(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabGeometry")]
		public virtual global::Windows.UI.Xaml.Media.Geometry get_TabGeometry()
		{
			global::Windows.UI.Xaml.Media.Geometry __retVal = global::Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettings2__Impl.Stubs.get_TabGeometry(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TabGeometry")]
		public virtual void put_TabGeometry(global::Windows.UI.Xaml.Media.Geometry value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettings2__Impl.Stubs.put_TabGeometry(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabGeometryProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TabGeometryProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewItemTemplateSettingsStatics2_get_TabGeometryProperty("Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewItemTemplateSettingsStatics2_get_TabGeometryProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettingsStatics2__Impl.Stubs.get_TabGeometryProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettingsStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconElementProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IconElementProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITabViewItemTemplateSettingsStatics_get_IconElementProperty("Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITabViewItemTemplateSettingsStatics_get_IconElementProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettingsStatics__Impl.Stubs.get_IconElementProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITabViewItemTemplateSettingsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public TabViewItemTemplateSettings(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITabViewTabDroppedOutsideEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TabViewTabDroppedOutsideEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.ITabViewTabDroppedOutsideEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Item")]
		public object get_Item()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ITabViewTabDroppedOutsideEventArgs__Impl.Stubs.get_Item(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Tab")]
		public global::Microsoft.UI.Xaml.Controls.TabViewItem get_Tab()
		{
			global::Microsoft.UI.Xaml.Controls.TabViewItem __retVal = global::Microsoft.UI.Xaml.Controls.ITabViewTabDroppedOutsideEventArgs__Impl.Stubs.get_Tab(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public TabViewTabDroppedOutsideEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITabViewTabDragStartingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TabViewTabDragStartingEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.ITabViewTabDragStartingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cancel")]
		public bool get_Cancel()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.ITabViewTabDragStartingEventArgs__Impl.Stubs.get_Cancel(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Cancel")]
		public void put_Cancel(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.ITabViewTabDragStartingEventArgs__Impl.Stubs.put_Cancel(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Data")]
		public global::Windows.ApplicationModel.DataTransfer.DataPackage get_Data()
		{
			global::Windows.ApplicationModel.DataTransfer.DataPackage __retVal = global::Microsoft.UI.Xaml.Controls.ITabViewTabDragStartingEventArgs__Impl.Stubs.get_Data(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Item")]
		public object get_Item()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ITabViewTabDragStartingEventArgs__Impl.Stubs.get_Item(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Tab")]
		public global::Microsoft.UI.Xaml.Controls.TabViewItem get_Tab()
		{
			global::Microsoft.UI.Xaml.Controls.TabViewItem __retVal = global::Microsoft.UI.Xaml.Controls.ITabViewTabDragStartingEventArgs__Impl.Stubs.get_Tab(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public TabViewTabDragStartingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITabViewTabDragCompletedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TabViewTabDragCompletedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.ITabViewTabDragCompletedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DropResult")]
		public global::Windows.ApplicationModel.DataTransfer.DataPackageOperation get_DropResult()
		{
			global::Windows.ApplicationModel.DataTransfer.DataPackageOperation __retVal = global::Microsoft.UI.Xaml.Controls.ITabViewTabDragCompletedEventArgs__Impl.Stubs.get_DropResult(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Item")]
		public object get_Item()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ITabViewTabDragCompletedEventArgs__Impl.Stubs.get_Item(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Tab")]
		public global::Microsoft.UI.Xaml.Controls.TabViewItem get_Tab()
		{
			global::Microsoft.UI.Xaml.Controls.TabViewItem __retVal = global::Microsoft.UI.Xaml.Controls.ITabViewTabDragCompletedEventArgs__Impl.Stubs.get_Tab(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public TabViewTabDragCompletedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTip))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class TeachingTip : global::Windows.UI.Xaml.Controls.ContentControl, global::Microsoft.UI.Xaml.Controls.ITeachingTip
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public TeachingTip() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipFactory_CreateInstance("Microsoft.UI.Xaml.Controls.TeachingTip");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.TeachingTip).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.ITeachingTipFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.ITeachingTipFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Title")]
		public virtual string get_Title()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.get_Title(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Title")]
		public virtual void put_Title(string value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.put_Title(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Subtitle")]
		public virtual string get_Subtitle()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.get_Subtitle(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Subtitle")]
		public virtual void put_Subtitle(string value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.put_Subtitle(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsOpen")]
		public virtual bool get_IsOpen()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.get_IsOpen(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsOpen")]
		public virtual void put_IsOpen(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.put_IsOpen(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Target")]
		public virtual global::Windows.UI.Xaml.FrameworkElement get_Target()
		{
			global::Windows.UI.Xaml.FrameworkElement __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.get_Target(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Target")]
		public virtual void put_Target(global::Windows.UI.Xaml.FrameworkElement value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.put_Target(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TailVisibility")]
		public virtual global::Microsoft.UI.Xaml.Controls.TeachingTipTailVisibility get_TailVisibility()
		{
			global::Microsoft.UI.Xaml.Controls.TeachingTipTailVisibility __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.get_TailVisibility(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TailVisibility")]
		public virtual void put_TailVisibility(global::Microsoft.UI.Xaml.Controls.TeachingTipTailVisibility value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.put_TailVisibility(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActionButtonContent")]
		public virtual object get_ActionButtonContent()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.get_ActionButtonContent(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ActionButtonContent")]
		public virtual void put_ActionButtonContent(object value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.put_ActionButtonContent(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActionButtonStyle")]
		public virtual global::Windows.UI.Xaml.Style get_ActionButtonStyle()
		{
			global::Windows.UI.Xaml.Style __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.get_ActionButtonStyle(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ActionButtonStyle")]
		public virtual void put_ActionButtonStyle(global::Windows.UI.Xaml.Style value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.put_ActionButtonStyle(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActionButtonCommand")]
		public virtual global::System.Windows.Input.ICommand get_ActionButtonCommand()
		{
			global::System.Windows.Input.ICommand __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.get_ActionButtonCommand(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ActionButtonCommand")]
		public virtual void put_ActionButtonCommand(global::System.Windows.Input.ICommand value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.put_ActionButtonCommand(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActionButtonCommandParameter")]
		public virtual object get_ActionButtonCommandParameter()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.get_ActionButtonCommandParameter(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ActionButtonCommandParameter")]
		public virtual void put_ActionButtonCommandParameter(object value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.put_ActionButtonCommandParameter(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonContent")]
		public virtual object get_CloseButtonContent()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.get_CloseButtonContent(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CloseButtonContent")]
		public virtual void put_CloseButtonContent(object value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.put_CloseButtonContent(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonStyle")]
		public virtual global::Windows.UI.Xaml.Style get_CloseButtonStyle()
		{
			global::Windows.UI.Xaml.Style __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.get_CloseButtonStyle(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CloseButtonStyle")]
		public virtual void put_CloseButtonStyle(global::Windows.UI.Xaml.Style value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.put_CloseButtonStyle(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonCommand")]
		public virtual global::System.Windows.Input.ICommand get_CloseButtonCommand()
		{
			global::System.Windows.Input.ICommand __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.get_CloseButtonCommand(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CloseButtonCommand")]
		public virtual void put_CloseButtonCommand(global::System.Windows.Input.ICommand value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.put_CloseButtonCommand(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonCommandParameter")]
		public virtual object get_CloseButtonCommandParameter()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.get_CloseButtonCommandParameter(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CloseButtonCommandParameter")]
		public virtual void put_CloseButtonCommandParameter(object value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.put_CloseButtonCommandParameter(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlacementMargin")]
		public virtual global::Windows.UI.Xaml.Thickness get_PlacementMargin()
		{
			global::Windows.UI.Xaml.Thickness __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.get_PlacementMargin(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PlacementMargin")]
		public virtual void put_PlacementMargin(global::Windows.UI.Xaml.Thickness value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.put_PlacementMargin(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShouldConstrainToRootBounds")]
		public virtual bool get_ShouldConstrainToRootBounds()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.get_ShouldConstrainToRootBounds(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ShouldConstrainToRootBounds")]
		public virtual void put_ShouldConstrainToRootBounds(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.put_ShouldConstrainToRootBounds(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsLightDismissEnabled")]
		public virtual bool get_IsLightDismissEnabled()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.get_IsLightDismissEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsLightDismissEnabled")]
		public virtual void put_IsLightDismissEnabled(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.put_IsLightDismissEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreferredPlacement")]
		public virtual global::Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode get_PreferredPlacement()
		{
			global::Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.get_PreferredPlacement(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PreferredPlacement")]
		public virtual void put_PreferredPlacement(global::Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.put_PreferredPlacement(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeroContentPlacement")]
		public virtual global::Microsoft.UI.Xaml.Controls.TeachingTipHeroContentPlacementMode get_HeroContentPlacement()
		{
			global::Microsoft.UI.Xaml.Controls.TeachingTipHeroContentPlacementMode __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.get_HeroContentPlacement(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeroContentPlacement")]
		public virtual void put_HeroContentPlacement(global::Microsoft.UI.Xaml.Controls.TeachingTipHeroContentPlacementMode value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.put_HeroContentPlacement(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeroContent")]
		public virtual global::Windows.UI.Xaml.UIElement get_HeroContent()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.get_HeroContent(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeroContent")]
		public virtual void put_HeroContent(global::Windows.UI.Xaml.UIElement value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.put_HeroContent(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconSource")]
		public virtual global::Microsoft.UI.Xaml.Controls.IconSource get_IconSource()
		{
			global::Microsoft.UI.Xaml.Controls.IconSource __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.get_IconSource(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IconSource")]
		public virtual void put_IconSource(global::Microsoft.UI.Xaml.Controls.IconSource value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.put_IconSource(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettings")]
		public virtual global::Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings get_TemplateSettings()
		{
			global::Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.get_TemplateSettings(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ActionButtonClick")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ActionButtonClick(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.add_ActionButtonClick(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ActionButtonClick")]
		public virtual void remove_ActionButtonClick(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.remove_ActionButtonClick(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CloseButtonClick")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CloseButtonClick(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.add_CloseButtonClick(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CloseButtonClick")]
		public virtual void remove_CloseButtonClick(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.remove_CloseButtonClick(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closing")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closing(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, global::Microsoft.UI.Xaml.Controls.TeachingTipClosingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.add_Closing(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closing")]
		public virtual void remove_Closing(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.remove_Closing(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closed(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, global::Microsoft.UI.Xaml.Controls.TeachingTipClosedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.add_Closed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closed")]
		public virtual void remove_Closed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTip__Impl.Stubs.remove_Closed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsOpenProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsOpenProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_IsOpenProperty("Microsoft.UI.Xaml.Controls.TeachingTip");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_IsOpenProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics__Impl.Stubs.get_IsOpenProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TargetProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TargetProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_TargetProperty("Microsoft.UI.Xaml.Controls.TeachingTip");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_TargetProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics__Impl.Stubs.get_TargetProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TailVisibilityProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TailVisibilityProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_TailVisibilityProperty("Microsoft.UI.Xaml.Controls.TeachingTip");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_TailVisibilityProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics__Impl.Stubs.get_TailVisibilityProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TitleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TitleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_TitleProperty("Microsoft.UI.Xaml.Controls.TeachingTip");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_TitleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics__Impl.Stubs.get_TitleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SubtitleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SubtitleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_SubtitleProperty("Microsoft.UI.Xaml.Controls.TeachingTip");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_SubtitleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics__Impl.Stubs.get_SubtitleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActionButtonContentProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ActionButtonContentProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_ActionButtonContentProperty("Microsoft.UI.Xaml.Controls.TeachingTip");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_ActionButtonContentProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics__Impl.Stubs.get_ActionButtonContentProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActionButtonStyleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ActionButtonStyleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_ActionButtonStyleProperty("Microsoft.UI.Xaml.Controls.TeachingTip");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_ActionButtonStyleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics__Impl.Stubs.get_ActionButtonStyleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActionButtonCommandProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ActionButtonCommandProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_ActionButtonCommandProperty("Microsoft.UI.Xaml.Controls.TeachingTip");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_ActionButtonCommandProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics__Impl.Stubs.get_ActionButtonCommandProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActionButtonCommandParameterProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ActionButtonCommandParameterProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_ActionButtonCommandParameterProperty("Microsoft.UI.Xaml.Controls.TeachingTip");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_ActionButtonCommandParameterProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics__Impl.Stubs.get_ActionButtonCommandParameterProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonContentProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CloseButtonContentProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_CloseButtonContentProperty("Microsoft.UI.Xaml.Controls.TeachingTip");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_CloseButtonContentProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics__Impl.Stubs.get_CloseButtonContentProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonStyleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CloseButtonStyleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_CloseButtonStyleProperty("Microsoft.UI.Xaml.Controls.TeachingTip");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_CloseButtonStyleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics__Impl.Stubs.get_CloseButtonStyleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonCommandProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CloseButtonCommandProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_CloseButtonCommandProperty("Microsoft.UI.Xaml.Controls.TeachingTip");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_CloseButtonCommandProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics__Impl.Stubs.get_CloseButtonCommandProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonCommandParameterProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CloseButtonCommandParameterProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_CloseButtonCommandParameterProperty("Microsoft.UI.Xaml.Controls.TeachingTip");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_CloseButtonCommandParameterProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics__Impl.Stubs.get_CloseButtonCommandParameterProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlacementMarginProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PlacementMarginProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_PlacementMarginProperty("Microsoft.UI.Xaml.Controls.TeachingTip");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_PlacementMarginProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics__Impl.Stubs.get_PlacementMarginProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShouldConstrainToRootBoundsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ShouldConstrainToRootBoundsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_ShouldConstrainToRootBoundsProperty("Microsoft.UI.Xaml.Controls.TeachingTip");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_ShouldConstrainToRootBoundsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics__Impl.Stubs.get_ShouldConstrainToRootBoundsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsLightDismissEnabledProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsLightDismissEnabledProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_IsLightDismissEnabledProperty("Microsoft.UI.Xaml.Controls.TeachingTip");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_IsLightDismissEnabledProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics__Impl.Stubs.get_IsLightDismissEnabledProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreferredPlacementProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PreferredPlacementProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_PreferredPlacementProperty("Microsoft.UI.Xaml.Controls.TeachingTip");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_PreferredPlacementProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics__Impl.Stubs.get_PreferredPlacementProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeroContentPlacementProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HeroContentPlacementProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_HeroContentPlacementProperty("Microsoft.UI.Xaml.Controls.TeachingTip");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_HeroContentPlacementProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics__Impl.Stubs.get_HeroContentPlacementProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeroContentProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HeroContentProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_HeroContentProperty("Microsoft.UI.Xaml.Controls.TeachingTip");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_HeroContentProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics__Impl.Stubs.get_HeroContentProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconSourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IconSourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_IconSourceProperty("Microsoft.UI.Xaml.Controls.TeachingTip");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_IconSourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics__Impl.Stubs.get_IconSourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettingsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TemplateSettingsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_TemplateSettingsProperty("Microsoft.UI.Xaml.Controls.TeachingTip");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipStatics_get_TemplateSettingsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics__Impl.Stubs.get_TemplateSettingsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public TeachingTip(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettings))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class TeachingTipTemplateSettings : global::Windows.UI.Xaml.DependencyObject, global::Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettings
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public TeachingTipTemplateSettings() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipTemplateSettingsFactory_CreateInstance("Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipTemplateSettingsFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettingsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettingsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettingsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettingsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TopRightHighlightMargin")]
		public virtual global::Windows.UI.Xaml.Thickness get_TopRightHighlightMargin()
		{
			global::Windows.UI.Xaml.Thickness __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettings__Impl.Stubs.get_TopRightHighlightMargin(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TopRightHighlightMargin")]
		public virtual void put_TopRightHighlightMargin(global::Windows.UI.Xaml.Thickness value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettings__Impl.Stubs.put_TopRightHighlightMargin(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TopLeftHighlightMargin")]
		public virtual global::Windows.UI.Xaml.Thickness get_TopLeftHighlightMargin()
		{
			global::Windows.UI.Xaml.Thickness __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettings__Impl.Stubs.get_TopLeftHighlightMargin(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TopLeftHighlightMargin")]
		public virtual void put_TopLeftHighlightMargin(global::Windows.UI.Xaml.Thickness value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettings__Impl.Stubs.put_TopLeftHighlightMargin(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconElement")]
		public virtual global::Windows.UI.Xaml.Controls.IconElement get_IconElement()
		{
			global::Windows.UI.Xaml.Controls.IconElement __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettings__Impl.Stubs.get_IconElement(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IconElement")]
		public virtual void put_IconElement(global::Windows.UI.Xaml.Controls.IconElement value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettings__Impl.Stubs.put_IconElement(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TopRightHighlightMarginProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TopRightHighlightMarginProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipTemplateSettingsStatics_get_TopRightHighlightMarginProperty("Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipTemplateSettingsStatics_get_TopRightHighlightMarginProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettingsStatics__Impl.Stubs.get_TopRightHighlightMarginProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettingsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TopLeftHighlightMarginProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TopLeftHighlightMarginProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipTemplateSettingsStatics_get_TopLeftHighlightMarginProperty("Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipTemplateSettingsStatics_get_TopLeftHighlightMarginProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettingsStatics__Impl.Stubs.get_TopLeftHighlightMarginProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettingsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconElementProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IconElementProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipTemplateSettingsStatics_get_IconElementProperty("Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITeachingTipTemplateSettingsStatics_get_IconElementProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettingsStatics__Impl.Stubs.get_IconElementProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipTemplateSettingsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public TeachingTipTemplateSettings(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipClosingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TeachingTipClosingEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.ITeachingTipClosingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Reason")]
		public global::Microsoft.UI.Xaml.Controls.TeachingTipCloseReason get_Reason()
		{
			global::Microsoft.UI.Xaml.Controls.TeachingTipCloseReason __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipClosingEventArgs__Impl.Stubs.get_Reason(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cancel")]
		public bool get_Cancel()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipClosingEventArgs__Impl.Stubs.get_Cancel(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Cancel")]
		public void put_Cancel(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.ITeachingTipClosingEventArgs__Impl.Stubs.put_Cancel(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public global::Windows.Foundation.Deferral GetDeferral()
		{
			global::Windows.Foundation.Deferral __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipClosingEventArgs__Impl.Stubs.GetDeferral(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public TeachingTipClosingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITeachingTipClosedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TeachingTipClosedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.ITeachingTipClosedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Reason")]
		public global::Microsoft.UI.Xaml.Controls.TeachingTipCloseReason get_Reason()
		{
			global::Microsoft.UI.Xaml.Controls.TeachingTipCloseReason __retVal = global::Microsoft.UI.Xaml.Controls.ITeachingTipClosedEventArgs__Impl.Stubs.get_Reason(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public TeachingTipClosedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IToggleSplitButton))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ToggleSplitButton : global::Microsoft.UI.Xaml.Controls.SplitButton, global::Microsoft.UI.Xaml.Controls.IToggleSplitButton
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ToggleSplitButton() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IToggleSplitButtonFactory_CreateInstance("Microsoft.UI.Xaml.Controls.ToggleSplitButton");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IToggleSplitButtonFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.ToggleSplitButton).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IToggleSplitButtonFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IToggleSplitButtonFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IToggleSplitButtonFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IToggleSplitButtonFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsChecked")]
		public virtual bool get_IsChecked()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IToggleSplitButton__Impl.Stubs.get_IsChecked(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsChecked")]
		public virtual void put_IsChecked(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IToggleSplitButton__Impl.Stubs.put_IsChecked(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "IsCheckedChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_IsCheckedChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ToggleSplitButton, global::Microsoft.UI.Xaml.Controls.ToggleSplitButtonIsCheckedChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.IToggleSplitButton__Impl.Stubs.add_IsCheckedChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "IsCheckedChanged")]
		public virtual void remove_IsCheckedChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.IToggleSplitButton__Impl.Stubs.remove_IsCheckedChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsCheckedProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsCheckedProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IToggleSplitButtonStatics_get_IsCheckedProperty("Microsoft.UI.Xaml.Controls.ToggleSplitButton");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IToggleSplitButtonStatics_get_IsCheckedProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IToggleSplitButtonStatics__Impl.Stubs.get_IsCheckedProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IToggleSplitButtonStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public ToggleSplitButton(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IToggleSplitButtonIsCheckedChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ToggleSplitButtonIsCheckedChangedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IToggleSplitButtonIsCheckedChangedEventArgs
	{
		public ToggleSplitButtonIsCheckedChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewItem))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewItem2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class TreeViewItem : global::Windows.UI.Xaml.Controls.ListViewItem, global::Microsoft.UI.Xaml.Controls.ITreeViewItem, global::Microsoft.UI.Xaml.Controls.ITreeViewItem2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public TreeViewItem() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemFactory_CreateInstance("Microsoft.UI.Xaml.Controls.TreeViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.TreeViewItem).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.ITreeViewItemFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewItemFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.ITreeViewItemFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewItemFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GlyphOpacity")]
		public virtual double get_GlyphOpacity()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItem__Impl.Stubs.get_GlyphOpacity(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "GlyphOpacity")]
		public virtual void put_GlyphOpacity(double value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeViewItem__Impl.Stubs.put_GlyphOpacity(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GlyphBrush")]
		public virtual global::Windows.UI.Xaml.Media.Brush get_GlyphBrush()
		{
			global::Windows.UI.Xaml.Media.Brush __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItem__Impl.Stubs.get_GlyphBrush(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "GlyphBrush")]
		public virtual void put_GlyphBrush(global::Windows.UI.Xaml.Media.Brush value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeViewItem__Impl.Stubs.put_GlyphBrush(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandedGlyph")]
		public virtual string get_ExpandedGlyph()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItem__Impl.Stubs.get_ExpandedGlyph(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ExpandedGlyph")]
		public virtual void put_ExpandedGlyph(string value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeViewItem__Impl.Stubs.put_ExpandedGlyph(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CollapsedGlyph")]
		public virtual string get_CollapsedGlyph()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItem__Impl.Stubs.get_CollapsedGlyph(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CollapsedGlyph")]
		public virtual void put_CollapsedGlyph(string value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeViewItem__Impl.Stubs.put_CollapsedGlyph(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GlyphSize")]
		public virtual double get_GlyphSize()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItem__Impl.Stubs.get_GlyphSize(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "GlyphSize")]
		public virtual void put_GlyphSize(double value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeViewItem__Impl.Stubs.put_GlyphSize(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsExpanded")]
		public virtual bool get_IsExpanded()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItem__Impl.Stubs.get_IsExpanded(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsExpanded")]
		public virtual void put_IsExpanded(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeViewItem__Impl.Stubs.put_IsExpanded(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TreeViewItemTemplateSettings")]
		public virtual global::Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings get_TreeViewItemTemplateSettings()
		{
			global::Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItem__Impl.Stubs.get_TreeViewItemTemplateSettings(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasUnrealizedChildren")]
		public virtual bool get_HasUnrealizedChildren()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItem2__Impl.Stubs.get_HasUnrealizedChildren(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HasUnrealizedChildren")]
		public virtual void put_HasUnrealizedChildren(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeViewItem2__Impl.Stubs.put_HasUnrealizedChildren(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSource")]
		public virtual object get_ItemsSource()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItem2__Impl.Stubs.get_ItemsSource(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemsSource")]
		public virtual void put_ItemsSource(object value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeViewItem2__Impl.Stubs.put_ItemsSource(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasUnrealizedChildrenProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HasUnrealizedChildrenProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemStatics2_get_HasUnrealizedChildrenProperty("Microsoft.UI.Xaml.Controls.TreeViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemStatics2_get_HasUnrealizedChildrenProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItemStatics2__Impl.Stubs.get_HasUnrealizedChildrenProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewItemStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ItemsSourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemStatics2_get_ItemsSourceProperty("Microsoft.UI.Xaml.Controls.TreeViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemStatics2_get_ItemsSourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItemStatics2__Impl.Stubs.get_ItemsSourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewItemStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GlyphOpacityProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_GlyphOpacityProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemStatics_get_GlyphOpacityProperty("Microsoft.UI.Xaml.Controls.TreeViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemStatics_get_GlyphOpacityProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItemStatics__Impl.Stubs.get_GlyphOpacityProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GlyphBrushProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_GlyphBrushProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemStatics_get_GlyphBrushProperty("Microsoft.UI.Xaml.Controls.TreeViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemStatics_get_GlyphBrushProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItemStatics__Impl.Stubs.get_GlyphBrushProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandedGlyphProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ExpandedGlyphProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemStatics_get_ExpandedGlyphProperty("Microsoft.UI.Xaml.Controls.TreeViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemStatics_get_ExpandedGlyphProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItemStatics__Impl.Stubs.get_ExpandedGlyphProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CollapsedGlyphProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CollapsedGlyphProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemStatics_get_CollapsedGlyphProperty("Microsoft.UI.Xaml.Controls.TreeViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemStatics_get_CollapsedGlyphProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItemStatics__Impl.Stubs.get_CollapsedGlyphProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GlyphSizeProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_GlyphSizeProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemStatics_get_GlyphSizeProperty("Microsoft.UI.Xaml.Controls.TreeViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemStatics_get_GlyphSizeProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItemStatics__Impl.Stubs.get_GlyphSizeProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsExpandedProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsExpandedProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemStatics_get_IsExpandedProperty("Microsoft.UI.Xaml.Controls.TreeViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemStatics_get_IsExpandedProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItemStatics__Impl.Stubs.get_IsExpandedProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TreeViewItemTemplateSettingsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TreeViewItemTemplateSettingsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemStatics_get_TreeViewItemTemplateSettingsProperty("Microsoft.UI.Xaml.Controls.TreeViewItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemStatics_get_TreeViewItemTemplateSettingsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItemStatics__Impl.Stubs.get_TreeViewItemTemplateSettingsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public TreeViewItem(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettings))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class TreeViewItemTemplateSettings : global::Windows.UI.Xaml.DependencyObject, global::Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettings
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public TreeViewItemTemplateSettings() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemTemplateSettingsFactory_CreateInstance("Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemTemplateSettingsFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettingsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettingsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettingsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettingsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandedGlyphVisibility")]
		public virtual global::Windows.UI.Xaml.Visibility get_ExpandedGlyphVisibility()
		{
			global::Windows.UI.Xaml.Visibility __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettings__Impl.Stubs.get_ExpandedGlyphVisibility(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CollapsedGlyphVisibility")]
		public virtual global::Windows.UI.Xaml.Visibility get_CollapsedGlyphVisibility()
		{
			global::Windows.UI.Xaml.Visibility __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettings__Impl.Stubs.get_CollapsedGlyphVisibility(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Indentation")]
		public virtual global::Windows.UI.Xaml.Thickness get_Indentation()
		{
			global::Windows.UI.Xaml.Thickness __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettings__Impl.Stubs.get_Indentation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DragItemsCount")]
		public virtual int get_DragItemsCount()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettings__Impl.Stubs.get_DragItemsCount(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandedGlyphVisibilityProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ExpandedGlyphVisibilityProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemTemplateSettingsStatics_get_ExpandedGlyphVisibilityProperty("Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemTemplateSettingsStatics_get_ExpandedGlyphVisibilityProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettingsStatics__Impl.Stubs.get_ExpandedGlyphVisibilityProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettingsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CollapsedGlyphVisibilityProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CollapsedGlyphVisibilityProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemTemplateSettingsStatics_get_CollapsedGlyphVisibilityProperty("Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemTemplateSettingsStatics_get_CollapsedGlyphVisibilityProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettingsStatics__Impl.Stubs.get_CollapsedGlyphVisibilityProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettingsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IndentationProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IndentationProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemTemplateSettingsStatics_get_IndentationProperty("Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemTemplateSettingsStatics_get_IndentationProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettingsStatics__Impl.Stubs.get_IndentationProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettingsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DragItemsCountProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_DragItemsCountProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemTemplateSettingsStatics_get_DragItemsCountProperty("Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewItemTemplateSettingsStatics_get_DragItemsCountProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettingsStatics__Impl.Stubs.get_DragItemsCountProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewItemTemplateSettingsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public TreeViewItemTemplateSettings(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewList))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class TreeViewList : global::Windows.UI.Xaml.Controls.ListView, global::Microsoft.UI.Xaml.Controls.ITreeViewList
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public TreeViewList() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewListFactory_CreateInstance("Microsoft.UI.Xaml.Controls.TreeViewList");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__ITreeViewListFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.TreeViewList).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.ITreeViewListFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewListFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.ITreeViewListFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewListFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public TreeViewList(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedIconSource))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class AnimatedIconSource : global::Microsoft.UI.Xaml.Controls.IconSource, global::Microsoft.UI.Xaml.Controls.IAnimatedIconSource
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AnimatedIconSource() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IAnimatedIconSourceFactory_CreateInstance("Microsoft.UI.Xaml.Controls.AnimatedIconSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IAnimatedIconSourceFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.AnimatedIconSource).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IAnimatedIconSourceFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedIconSourceFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IAnimatedIconSourceFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedIconSourceFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		public virtual global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2 get_Source()
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2 __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedIconSource__Impl.Stubs.get_Source(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Source")]
		public virtual void put_Source(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2 value)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedIconSource__Impl.Stubs.put_Source(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FallbackIconSource")]
		public virtual global::Microsoft.UI.Xaml.Controls.IconSource get_FallbackIconSource()
		{
			global::Microsoft.UI.Xaml.Controls.IconSource __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedIconSource__Impl.Stubs.get_FallbackIconSource(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FallbackIconSource")]
		public virtual void put_FallbackIconSource(global::Microsoft.UI.Xaml.Controls.IconSource value)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedIconSource__Impl.Stubs.put_FallbackIconSource(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MirroredWhenRightToLeft")]
		public virtual bool get_MirroredWhenRightToLeft()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedIconSource__Impl.Stubs.get_MirroredWhenRightToLeft(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MirroredWhenRightToLeft")]
		public virtual void put_MirroredWhenRightToLeft(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedIconSource__Impl.Stubs.put_MirroredWhenRightToLeft(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IAnimatedIconSourceStatics_get_SourceProperty("Microsoft.UI.Xaml.Controls.AnimatedIconSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IAnimatedIconSourceStatics_get_SourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IAnimatedIconSourceStatics__Impl.Stubs.get_SourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedIconSourceStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FallbackIconSourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_FallbackIconSourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IAnimatedIconSourceStatics_get_FallbackIconSourceProperty("Microsoft.UI.Xaml.Controls.AnimatedIconSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IAnimatedIconSourceStatics_get_FallbackIconSourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IAnimatedIconSourceStatics__Impl.Stubs.get_FallbackIconSourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedIconSourceStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MirroredWhenRightToLeftProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MirroredWhenRightToLeftProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IAnimatedIconSourceStatics_get_MirroredWhenRightToLeftProperty("Microsoft.UI.Xaml.Controls.AnimatedIconSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IAnimatedIconSourceStatics_get_MirroredWhenRightToLeftProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IAnimatedIconSourceStatics__Impl.Stubs.get_MirroredWhenRightToLeftProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedIconSourceStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public AnimatedIconSource(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IBitmapIconSource))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class BitmapIconSource : global::Microsoft.UI.Xaml.Controls.IconSource, global::Microsoft.UI.Xaml.Controls.IBitmapIconSource
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public BitmapIconSource() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IBitmapIconSourceFactory_CreateInstance("Microsoft.UI.Xaml.Controls.BitmapIconSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IBitmapIconSourceFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.BitmapIconSource).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IBitmapIconSourceFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IBitmapIconSourceFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IBitmapIconSourceFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IBitmapIconSourceFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UriSource")]
		public virtual global::System.Uri get_UriSource()
		{
			global::System.Uri __retVal = global::Microsoft.UI.Xaml.Controls.IBitmapIconSource__Impl.Stubs.get_UriSource(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UriSource")]
		public virtual void put_UriSource(global::System.Uri value)
		{
			global::Microsoft.UI.Xaml.Controls.IBitmapIconSource__Impl.Stubs.put_UriSource(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShowAsMonochrome")]
		public virtual bool get_ShowAsMonochrome()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IBitmapIconSource__Impl.Stubs.get_ShowAsMonochrome(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ShowAsMonochrome")]
		public virtual void put_ShowAsMonochrome(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IBitmapIconSource__Impl.Stubs.put_ShowAsMonochrome(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UriSourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_UriSourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IBitmapIconSourceStatics_get_UriSourceProperty("Microsoft.UI.Xaml.Controls.BitmapIconSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IBitmapIconSourceStatics_get_UriSourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IBitmapIconSourceStatics__Impl.Stubs.get_UriSourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IBitmapIconSourceStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShowAsMonochromeProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ShowAsMonochromeProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IBitmapIconSourceStatics_get_ShowAsMonochromeProperty("Microsoft.UI.Xaml.Controls.BitmapIconSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IBitmapIconSourceStatics_get_ShowAsMonochromeProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IBitmapIconSourceStatics__Impl.Stubs.get_ShowAsMonochromeProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IBitmapIconSourceStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public BitmapIconSource(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IBreadcrumbBar))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class BreadcrumbBar : global::Windows.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.IBreadcrumbBar
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public BreadcrumbBar() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IBreadcrumbBarFactory_CreateInstance("Microsoft.UI.Xaml.Controls.BreadcrumbBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IBreadcrumbBarFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.BreadcrumbBar).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IBreadcrumbBarFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IBreadcrumbBarFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IBreadcrumbBarFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IBreadcrumbBarFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSource")]
		public virtual object get_ItemsSource()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.IBreadcrumbBar__Impl.Stubs.get_ItemsSource(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemsSource")]
		public virtual void put_ItemsSource(object value)
		{
			global::Microsoft.UI.Xaml.Controls.IBreadcrumbBar__Impl.Stubs.put_ItemsSource(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemTemplate")]
		public virtual object get_ItemTemplate()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.IBreadcrumbBar__Impl.Stubs.get_ItemTemplate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemTemplate")]
		public virtual void put_ItemTemplate(object value)
		{
			global::Microsoft.UI.Xaml.Controls.IBreadcrumbBar__Impl.Stubs.put_ItemTemplate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ItemClicked")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ItemClicked(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.BreadcrumbBar, global::Microsoft.UI.Xaml.Controls.BreadcrumbBarItemClickedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.IBreadcrumbBar__Impl.Stubs.add_ItemClicked(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ItemClicked")]
		public virtual void remove_ItemClicked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.IBreadcrumbBar__Impl.Stubs.remove_ItemClicked(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ItemsSourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IBreadcrumbBarStatics_get_ItemsSourceProperty("Microsoft.UI.Xaml.Controls.BreadcrumbBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IBreadcrumbBarStatics_get_ItemsSourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IBreadcrumbBarStatics__Impl.Stubs.get_ItemsSourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IBreadcrumbBarStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemTemplateProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ItemTemplateProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IBreadcrumbBarStatics_get_ItemTemplateProperty("Microsoft.UI.Xaml.Controls.BreadcrumbBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IBreadcrumbBarStatics_get_ItemTemplateProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IBreadcrumbBarStatics__Impl.Stubs.get_ItemTemplateProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IBreadcrumbBarStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public BreadcrumbBar(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IBreadcrumbBarItemClickedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class BreadcrumbBarItemClickedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IBreadcrumbBarItemClickedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Index")]
		public int get_Index()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IBreadcrumbBarItemClickedEventArgs__Impl.Stubs.get_Index(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Item")]
		public object get_Item()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.IBreadcrumbBarItemClickedEventArgs__Impl.Stubs.get_Item(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public BreadcrumbBarItemClickedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IColorPicker))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IColorPicker2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(131072)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ColorPicker : global::Windows.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.IColorPicker, global::Microsoft.UI.Xaml.Controls.IColorPicker2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ColorPicker() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IColorPickerFactory_CreateInstance("Microsoft.UI.Xaml.Controls.ColorPicker");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IColorPickerFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.ColorPicker).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IColorPickerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IColorPickerFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IColorPickerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IColorPickerFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Color")]
		public virtual global::Windows.UI.Color get_Color()
		{
			global::Windows.UI.Color __retVal = global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.get_Color(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Color")]
		public virtual void put_Color(global::Windows.UI.Color value)
		{
			global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.put_Color(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousColor")]
		public virtual global::System.Nullable<global::Windows.UI.Color> get_PreviousColor()
		{
			global::System.Nullable<global::Windows.UI.Color> __retVal = global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.get_PreviousColor(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PreviousColor")]
		public virtual void put_PreviousColor(global::System.Nullable<global::Windows.UI.Color> value)
		{
			global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.put_PreviousColor(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAlphaEnabled")]
		public virtual bool get_IsAlphaEnabled()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.get_IsAlphaEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsAlphaEnabled")]
		public virtual void put_IsAlphaEnabled(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.put_IsAlphaEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsColorSpectrumVisible")]
		public virtual bool get_IsColorSpectrumVisible()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.get_IsColorSpectrumVisible(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsColorSpectrumVisible")]
		public virtual void put_IsColorSpectrumVisible(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.put_IsColorSpectrumVisible(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsColorPreviewVisible")]
		public virtual bool get_IsColorPreviewVisible()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.get_IsColorPreviewVisible(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsColorPreviewVisible")]
		public virtual void put_IsColorPreviewVisible(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.put_IsColorPreviewVisible(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsColorSliderVisible")]
		public virtual bool get_IsColorSliderVisible()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.get_IsColorSliderVisible(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsColorSliderVisible")]
		public virtual void put_IsColorSliderVisible(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.put_IsColorSliderVisible(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAlphaSliderVisible")]
		public virtual bool get_IsAlphaSliderVisible()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.get_IsAlphaSliderVisible(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsAlphaSliderVisible")]
		public virtual void put_IsAlphaSliderVisible(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.put_IsAlphaSliderVisible(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsMoreButtonVisible")]
		public virtual bool get_IsMoreButtonVisible()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.get_IsMoreButtonVisible(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsMoreButtonVisible")]
		public virtual void put_IsMoreButtonVisible(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.put_IsMoreButtonVisible(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsColorChannelTextInputVisible")]
		public virtual bool get_IsColorChannelTextInputVisible()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.get_IsColorChannelTextInputVisible(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsColorChannelTextInputVisible")]
		public virtual void put_IsColorChannelTextInputVisible(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.put_IsColorChannelTextInputVisible(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAlphaTextInputVisible")]
		public virtual bool get_IsAlphaTextInputVisible()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.get_IsAlphaTextInputVisible(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsAlphaTextInputVisible")]
		public virtual void put_IsAlphaTextInputVisible(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.put_IsAlphaTextInputVisible(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsHexInputVisible")]
		public virtual bool get_IsHexInputVisible()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.get_IsHexInputVisible(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsHexInputVisible")]
		public virtual void put_IsHexInputVisible(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.put_IsHexInputVisible(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinHue")]
		public virtual int get_MinHue()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.get_MinHue(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinHue")]
		public virtual void put_MinHue(int value)
		{
			global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.put_MinHue(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxHue")]
		public virtual int get_MaxHue()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.get_MaxHue(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxHue")]
		public virtual void put_MaxHue(int value)
		{
			global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.put_MaxHue(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinSaturation")]
		public virtual int get_MinSaturation()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.get_MinSaturation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinSaturation")]
		public virtual void put_MinSaturation(int value)
		{
			global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.put_MinSaturation(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxSaturation")]
		public virtual int get_MaxSaturation()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.get_MaxSaturation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxSaturation")]
		public virtual void put_MaxSaturation(int value)
		{
			global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.put_MaxSaturation(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinValue")]
		public virtual int get_MinValue()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.get_MinValue(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinValue")]
		public virtual void put_MinValue(int value)
		{
			global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.put_MinValue(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxValue")]
		public virtual int get_MaxValue()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.get_MaxValue(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxValue")]
		public virtual void put_MaxValue(int value)
		{
			global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.put_MaxValue(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColorSpectrumShape")]
		public virtual global::Microsoft.UI.Xaml.Controls.ColorSpectrumShape get_ColorSpectrumShape()
		{
			global::Microsoft.UI.Xaml.Controls.ColorSpectrumShape __retVal = global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.get_ColorSpectrumShape(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ColorSpectrumShape")]
		public virtual void put_ColorSpectrumShape(global::Microsoft.UI.Xaml.Controls.ColorSpectrumShape value)
		{
			global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.put_ColorSpectrumShape(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColorSpectrumComponents")]
		public virtual global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents get_ColorSpectrumComponents()
		{
			global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents __retVal = global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.get_ColorSpectrumComponents(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ColorSpectrumComponents")]
		public virtual void put_ColorSpectrumComponents(global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents value)
		{
			global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.put_ColorSpectrumComponents(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ColorChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ColorChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ColorPicker, global::Microsoft.UI.Xaml.Controls.ColorChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.add_ColorChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ColorChanged")]
		public virtual void remove_ColorChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.IColorPicker__Impl.Stubs.remove_ColorChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Orientation")]
		public virtual global::Windows.UI.Xaml.Controls.Orientation get_Orientation()
		{
			global::Windows.UI.Xaml.Controls.Orientation __retVal = global::Microsoft.UI.Xaml.Controls.IColorPicker2__Impl.Stubs.get_Orientation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Orientation")]
		public virtual void put_Orientation(global::Windows.UI.Xaml.Controls.Orientation value)
		{
			global::Microsoft.UI.Xaml.Controls.IColorPicker2__Impl.Stubs.put_Orientation(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OrientationProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_OrientationProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics2_get_OrientationProperty("Microsoft.UI.Xaml.Controls.ColorPicker");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics2_get_OrientationProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IColorPickerStatics2__Impl.Stubs.get_OrientationProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IColorPickerStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColorProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ColorProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_ColorProperty("Microsoft.UI.Xaml.Controls.ColorPicker");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_ColorProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IColorPickerStatics__Impl.Stubs.get_ColorProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IColorPickerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousColorProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PreviousColorProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_PreviousColorProperty("Microsoft.UI.Xaml.Controls.ColorPicker");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_PreviousColorProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IColorPickerStatics__Impl.Stubs.get_PreviousColorProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IColorPickerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAlphaEnabledProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsAlphaEnabledProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_IsAlphaEnabledProperty("Microsoft.UI.Xaml.Controls.ColorPicker");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_IsAlphaEnabledProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IColorPickerStatics__Impl.Stubs.get_IsAlphaEnabledProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IColorPickerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsColorSpectrumVisibleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsColorSpectrumVisibleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_IsColorSpectrumVisibleProperty("Microsoft.UI.Xaml.Controls.ColorPicker");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_IsColorSpectrumVisibleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IColorPickerStatics__Impl.Stubs.get_IsColorSpectrumVisibleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IColorPickerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsColorPreviewVisibleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsColorPreviewVisibleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_IsColorPreviewVisibleProperty("Microsoft.UI.Xaml.Controls.ColorPicker");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_IsColorPreviewVisibleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IColorPickerStatics__Impl.Stubs.get_IsColorPreviewVisibleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IColorPickerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsColorSliderVisibleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsColorSliderVisibleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_IsColorSliderVisibleProperty("Microsoft.UI.Xaml.Controls.ColorPicker");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_IsColorSliderVisibleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IColorPickerStatics__Impl.Stubs.get_IsColorSliderVisibleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IColorPickerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAlphaSliderVisibleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsAlphaSliderVisibleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_IsAlphaSliderVisibleProperty("Microsoft.UI.Xaml.Controls.ColorPicker");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_IsAlphaSliderVisibleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IColorPickerStatics__Impl.Stubs.get_IsAlphaSliderVisibleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IColorPickerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsMoreButtonVisibleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsMoreButtonVisibleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_IsMoreButtonVisibleProperty("Microsoft.UI.Xaml.Controls.ColorPicker");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_IsMoreButtonVisibleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IColorPickerStatics__Impl.Stubs.get_IsMoreButtonVisibleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IColorPickerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsColorChannelTextInputVisibleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsColorChannelTextInputVisibleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_IsColorChannelTextInputVisibleProperty("Microsoft.UI.Xaml.Controls.ColorPicker");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_IsColorChannelTextInputVisibleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IColorPickerStatics__Impl.Stubs.get_IsColorChannelTextInputVisibleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IColorPickerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAlphaTextInputVisibleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsAlphaTextInputVisibleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_IsAlphaTextInputVisibleProperty("Microsoft.UI.Xaml.Controls.ColorPicker");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_IsAlphaTextInputVisibleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IColorPickerStatics__Impl.Stubs.get_IsAlphaTextInputVisibleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IColorPickerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsHexInputVisibleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsHexInputVisibleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_IsHexInputVisibleProperty("Microsoft.UI.Xaml.Controls.ColorPicker");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_IsHexInputVisibleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IColorPickerStatics__Impl.Stubs.get_IsHexInputVisibleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IColorPickerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinHueProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MinHueProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_MinHueProperty("Microsoft.UI.Xaml.Controls.ColorPicker");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_MinHueProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IColorPickerStatics__Impl.Stubs.get_MinHueProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IColorPickerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxHueProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MaxHueProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_MaxHueProperty("Microsoft.UI.Xaml.Controls.ColorPicker");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_MaxHueProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IColorPickerStatics__Impl.Stubs.get_MaxHueProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IColorPickerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinSaturationProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MinSaturationProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_MinSaturationProperty("Microsoft.UI.Xaml.Controls.ColorPicker");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_MinSaturationProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IColorPickerStatics__Impl.Stubs.get_MinSaturationProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IColorPickerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxSaturationProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MaxSaturationProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_MaxSaturationProperty("Microsoft.UI.Xaml.Controls.ColorPicker");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_MaxSaturationProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IColorPickerStatics__Impl.Stubs.get_MaxSaturationProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IColorPickerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinValueProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MinValueProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_MinValueProperty("Microsoft.UI.Xaml.Controls.ColorPicker");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_MinValueProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IColorPickerStatics__Impl.Stubs.get_MinValueProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IColorPickerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxValueProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MaxValueProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_MaxValueProperty("Microsoft.UI.Xaml.Controls.ColorPicker");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_MaxValueProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IColorPickerStatics__Impl.Stubs.get_MaxValueProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IColorPickerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColorSpectrumShapeProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ColorSpectrumShapeProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_ColorSpectrumShapeProperty("Microsoft.UI.Xaml.Controls.ColorPicker");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_ColorSpectrumShapeProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IColorPickerStatics__Impl.Stubs.get_ColorSpectrumShapeProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IColorPickerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColorSpectrumComponentsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ColorSpectrumComponentsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_ColorSpectrumComponentsProperty("Microsoft.UI.Xaml.Controls.ColorPicker");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IColorPickerStatics_get_ColorSpectrumComponentsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IColorPickerStatics__Impl.Stubs.get_ColorSpectrumComponentsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IColorPickerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public ColorPicker(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ICommandBarFlyout))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ICommandBarFlyout2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class CommandBarFlyout : global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase, global::Microsoft.UI.Xaml.Controls.ICommandBarFlyout, global::Microsoft.UI.Xaml.Controls.ICommandBarFlyout2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public CommandBarFlyout() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ICommandBarFlyoutFactory_CreateInstance("Microsoft.UI.Xaml.Controls.CommandBarFlyout");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__ICommandBarFlyoutFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.CommandBarFlyout).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.ICommandBarFlyoutFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ICommandBarFlyoutFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.ICommandBarFlyoutFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ICommandBarFlyoutFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PrimaryCommands")]
		public virtual global::Windows.Foundation.Collections.IObservableVector<global::Windows.UI.Xaml.Controls.ICommandBarElement> get_PrimaryCommands()
		{
			global::Windows.Foundation.Collections.IObservableVector<global::Windows.UI.Xaml.Controls.ICommandBarElement> __retVal = global::Microsoft.UI.Xaml.Controls.ICommandBarFlyout__Impl.Stubs.get_PrimaryCommands(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SecondaryCommands")]
		public virtual global::Windows.Foundation.Collections.IObservableVector<global::Windows.UI.Xaml.Controls.ICommandBarElement> get_SecondaryCommands()
		{
			global::Windows.Foundation.Collections.IObservableVector<global::Windows.UI.Xaml.Controls.ICommandBarElement> __retVal = global::Microsoft.UI.Xaml.Controls.ICommandBarFlyout__Impl.Stubs.get_SecondaryCommands(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AlwaysExpanded")]
		public virtual bool get_AlwaysExpanded()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.ICommandBarFlyout2__Impl.Stubs.get_AlwaysExpanded(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AlwaysExpanded")]
		public virtual void put_AlwaysExpanded(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.ICommandBarFlyout2__Impl.Stubs.put_AlwaysExpanded(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public CommandBarFlyout(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IElementFactoryGetArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ElementFactoryGetArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IElementFactoryGetArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ElementFactoryGetArgs()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Microsoft.UI.Xaml.Controls.ElementFactoryGetArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Data")]
		public object get_Data()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.IElementFactoryGetArgs__Impl.Stubs.get_Data(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Data")]
		public void put_Data(object value)
		{
			global::Microsoft.UI.Xaml.Controls.IElementFactoryGetArgs__Impl.Stubs.put_Data(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Parent")]
		public global::Windows.UI.Xaml.UIElement get_Parent()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.IElementFactoryGetArgs__Impl.Stubs.get_Parent(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Parent")]
		public void put_Parent(global::Windows.UI.Xaml.UIElement value)
		{
			global::Microsoft.UI.Xaml.Controls.IElementFactoryGetArgs__Impl.Stubs.put_Parent(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ElementFactoryGetArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IElementFactoryRecycleArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ElementFactoryRecycleArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IElementFactoryRecycleArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ElementFactoryRecycleArgs()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Microsoft.UI.Xaml.Controls.ElementFactoryRecycleArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Element")]
		public global::Windows.UI.Xaml.UIElement get_Element()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.IElementFactoryRecycleArgs__Impl.Stubs.get_Element(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Element")]
		public void put_Element(global::Windows.UI.Xaml.UIElement value)
		{
			global::Microsoft.UI.Xaml.Controls.IElementFactoryRecycleArgs__Impl.Stubs.put_Element(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Parent")]
		public global::Windows.UI.Xaml.UIElement get_Parent()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.IElementFactoryRecycleArgs__Impl.Stubs.get_Parent(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Parent")]
		public void put_Parent(global::Windows.UI.Xaml.UIElement value)
		{
			global::Microsoft.UI.Xaml.Controls.IElementFactoryRecycleArgs__Impl.Stubs.put_Parent(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ElementFactoryRecycleArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IFontIconSource))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class FontIconSource : global::Microsoft.UI.Xaml.Controls.IconSource, global::Microsoft.UI.Xaml.Controls.IFontIconSource
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public FontIconSource() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IFontIconSourceFactory_CreateInstance("Microsoft.UI.Xaml.Controls.FontIconSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IFontIconSourceFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.FontIconSource).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IFontIconSourceFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IFontIconSourceFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IFontIconSourceFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IFontIconSourceFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Glyph")]
		public virtual string get_Glyph()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.IFontIconSource__Impl.Stubs.get_Glyph(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Glyph")]
		public virtual void put_Glyph(string value)
		{
			global::Microsoft.UI.Xaml.Controls.IFontIconSource__Impl.Stubs.put_Glyph(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontSize")]
		public virtual double get_FontSize()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IFontIconSource__Impl.Stubs.get_FontSize(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontSize")]
		public virtual void put_FontSize(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IFontIconSource__Impl.Stubs.put_FontSize(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontFamily")]
		public virtual global::Windows.UI.Xaml.Media.FontFamily get_FontFamily()
		{
			global::Windows.UI.Xaml.Media.FontFamily __retVal = global::Microsoft.UI.Xaml.Controls.IFontIconSource__Impl.Stubs.get_FontFamily(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontFamily")]
		public virtual void put_FontFamily(global::Windows.UI.Xaml.Media.FontFamily value)
		{
			global::Microsoft.UI.Xaml.Controls.IFontIconSource__Impl.Stubs.put_FontFamily(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontWeight")]
		public virtual global::Windows.UI.Text.FontWeight get_FontWeight()
		{
			global::Windows.UI.Text.FontWeight __retVal = global::Microsoft.UI.Xaml.Controls.IFontIconSource__Impl.Stubs.get_FontWeight(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontWeight")]
		public virtual void put_FontWeight(global::Windows.UI.Text.FontWeight value)
		{
			global::Microsoft.UI.Xaml.Controls.IFontIconSource__Impl.Stubs.put_FontWeight(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontStyle")]
		public virtual global::Windows.UI.Text.FontStyle get_FontStyle()
		{
			global::Windows.UI.Text.FontStyle __retVal = global::Microsoft.UI.Xaml.Controls.IFontIconSource__Impl.Stubs.get_FontStyle(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontStyle")]
		public virtual void put_FontStyle(global::Windows.UI.Text.FontStyle value)
		{
			global::Microsoft.UI.Xaml.Controls.IFontIconSource__Impl.Stubs.put_FontStyle(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsTextScaleFactorEnabled")]
		public virtual bool get_IsTextScaleFactorEnabled()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IFontIconSource__Impl.Stubs.get_IsTextScaleFactorEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsTextScaleFactorEnabled")]
		public virtual void put_IsTextScaleFactorEnabled(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IFontIconSource__Impl.Stubs.put_IsTextScaleFactorEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MirroredWhenRightToLeft")]
		public virtual bool get_MirroredWhenRightToLeft()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IFontIconSource__Impl.Stubs.get_MirroredWhenRightToLeft(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MirroredWhenRightToLeft")]
		public virtual void put_MirroredWhenRightToLeft(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IFontIconSource__Impl.Stubs.put_MirroredWhenRightToLeft(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GlyphProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_GlyphProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IFontIconSourceStatics_get_GlyphProperty("Microsoft.UI.Xaml.Controls.FontIconSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IFontIconSourceStatics_get_GlyphProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IFontIconSourceStatics__Impl.Stubs.get_GlyphProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IFontIconSourceStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontSizeProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_FontSizeProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IFontIconSourceStatics_get_FontSizeProperty("Microsoft.UI.Xaml.Controls.FontIconSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IFontIconSourceStatics_get_FontSizeProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IFontIconSourceStatics__Impl.Stubs.get_FontSizeProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IFontIconSourceStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontFamilyProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_FontFamilyProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IFontIconSourceStatics_get_FontFamilyProperty("Microsoft.UI.Xaml.Controls.FontIconSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IFontIconSourceStatics_get_FontFamilyProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IFontIconSourceStatics__Impl.Stubs.get_FontFamilyProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IFontIconSourceStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontWeightProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_FontWeightProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IFontIconSourceStatics_get_FontWeightProperty("Microsoft.UI.Xaml.Controls.FontIconSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IFontIconSourceStatics_get_FontWeightProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IFontIconSourceStatics__Impl.Stubs.get_FontWeightProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IFontIconSourceStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontStyleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_FontStyleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IFontIconSourceStatics_get_FontStyleProperty("Microsoft.UI.Xaml.Controls.FontIconSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IFontIconSourceStatics_get_FontStyleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IFontIconSourceStatics__Impl.Stubs.get_FontStyleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IFontIconSourceStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsTextScaleFactorEnabledProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsTextScaleFactorEnabledProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IFontIconSourceStatics_get_IsTextScaleFactorEnabledProperty("Microsoft.UI.Xaml.Controls.FontIconSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IFontIconSourceStatics_get_IsTextScaleFactorEnabledProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IFontIconSourceStatics__Impl.Stubs.get_IsTextScaleFactorEnabledProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IFontIconSourceStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MirroredWhenRightToLeftProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MirroredWhenRightToLeftProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IFontIconSourceStatics_get_MirroredWhenRightToLeftProperty("Microsoft.UI.Xaml.Controls.FontIconSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IFontIconSourceStatics_get_MirroredWhenRightToLeftProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IFontIconSourceStatics__Impl.Stubs.get_MirroredWhenRightToLeftProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IFontIconSourceStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public FontIconSource(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IImageIcon))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ImageIcon : global::Windows.UI.Xaml.Controls.IconElement, global::Microsoft.UI.Xaml.Controls.IImageIcon
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ImageIcon() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IImageIconFactory_CreateInstance("Microsoft.UI.Xaml.Controls.ImageIcon");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IImageIconFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.ImageIcon).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IImageIconFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IImageIconFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IImageIconFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IImageIconFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		public virtual global::Windows.UI.Xaml.Media.ImageSource get_Source()
		{
			global::Windows.UI.Xaml.Media.ImageSource __retVal = global::Microsoft.UI.Xaml.Controls.IImageIcon__Impl.Stubs.get_Source(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Source")]
		public virtual void put_Source(global::Windows.UI.Xaml.Media.ImageSource value)
		{
			global::Microsoft.UI.Xaml.Controls.IImageIcon__Impl.Stubs.put_Source(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IImageIconStatics_get_SourceProperty("Microsoft.UI.Xaml.Controls.ImageIcon");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IImageIconStatics_get_SourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IImageIconStatics__Impl.Stubs.get_SourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IImageIconStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public ImageIcon(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IImageIconSource))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ImageIconSource : global::Microsoft.UI.Xaml.Controls.IconSource, global::Microsoft.UI.Xaml.Controls.IImageIconSource
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ImageIconSource() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IImageIconSourceFactory_CreateInstance("Microsoft.UI.Xaml.Controls.ImageIconSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IImageIconSourceFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.ImageIconSource).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IImageIconSourceFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IImageIconSourceFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IImageIconSourceFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IImageIconSourceFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ImageSource")]
		public virtual global::Windows.UI.Xaml.Media.ImageSource get_ImageSource()
		{
			global::Windows.UI.Xaml.Media.ImageSource __retVal = global::Microsoft.UI.Xaml.Controls.IImageIconSource__Impl.Stubs.get_ImageSource(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ImageSource")]
		public virtual void put_ImageSource(global::Windows.UI.Xaml.Media.ImageSource value)
		{
			global::Microsoft.UI.Xaml.Controls.IImageIconSource__Impl.Stubs.put_ImageSource(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ImageSourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ImageSourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IImageIconSourceStatics_get_ImageSourceProperty("Microsoft.UI.Xaml.Controls.ImageIconSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IImageIconSourceStatics_get_ImageSourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IImageIconSourceStatics__Impl.Stubs.get_ImageSourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IImageIconSourceStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public ImageIconSource(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IItemsRepeaterScrollHost))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ItemsRepeaterScrollHost : global::Windows.UI.Xaml.FrameworkElement, global::Microsoft.UI.Xaml.Controls.IItemsRepeaterScrollHost
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ItemsRepeaterScrollHost() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Microsoft.UI.Xaml.Controls.ItemsRepeaterScrollHost");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ScrollViewer")]
		public global::Windows.UI.Xaml.Controls.ScrollViewer get_ScrollViewer()
		{
			global::Windows.UI.Xaml.Controls.ScrollViewer __retVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeaterScrollHost__Impl.Stubs.get_ScrollViewer(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ScrollViewer")]
		public void put_ScrollViewer(global::Windows.UI.Xaml.Controls.ScrollViewer value)
		{
			global::Microsoft.UI.Xaml.Controls.IItemsRepeaterScrollHost__Impl.Stubs.put_ScrollViewer(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CurrentAnchor")]
		public global::Windows.UI.Xaml.UIElement get_CurrentAnchor()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeaterScrollHost__Impl.Stubs.get_CurrentAnchor(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalAnchorRatio")]
		public double get_HorizontalAnchorRatio()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeaterScrollHost__Impl.Stubs.get_HorizontalAnchorRatio(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalAnchorRatio")]
		public void put_HorizontalAnchorRatio(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IItemsRepeaterScrollHost__Impl.Stubs.put_HorizontalAnchorRatio(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalAnchorRatio")]
		public double get_VerticalAnchorRatio()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IItemsRepeaterScrollHost__Impl.Stubs.get_VerticalAnchorRatio(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalAnchorRatio")]
		public void put_VerticalAnchorRatio(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IItemsRepeaterScrollHost__Impl.Stubs.put_VerticalAnchorRatio(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ItemsRepeaterScrollHost(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IMenuBarItemFlyout))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class MenuBarItemFlyout : global::Windows.UI.Xaml.Controls.MenuFlyout, global::Microsoft.UI.Xaml.Controls.IMenuBarItemFlyout
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public MenuBarItemFlyout() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IMenuBarItemFlyoutFactory_CreateInstance("Microsoft.UI.Xaml.Controls.MenuBarItemFlyout");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IMenuBarItemFlyoutFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.MenuBarItemFlyout).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IMenuBarItemFlyoutFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IMenuBarItemFlyoutFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IMenuBarItemFlyoutFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IMenuBarItemFlyoutFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public MenuBarItemFlyout(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemHeader))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class NavigationViewItemHeader : global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase, global::Microsoft.UI.Xaml.Controls.INavigationViewItemHeader
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public NavigationViewItemHeader() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemHeaderFactory_CreateInstance("Microsoft.UI.Xaml.Controls.NavigationViewItemHeader");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemHeaderFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItemHeader).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.INavigationViewItemHeaderFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemHeaderFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.INavigationViewItemHeaderFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemHeaderFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public NavigationViewItemHeader(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemSeparator))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class NavigationViewItemSeparator : global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase, global::Microsoft.UI.Xaml.Controls.INavigationViewItemSeparator
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public NavigationViewItemSeparator() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemSeparatorFactory_CreateInstance("Microsoft.UI.Xaml.Controls.NavigationViewItemSeparator");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__INavigationViewItemSeparatorFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItemSeparator).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.INavigationViewItemSeparatorFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemSeparatorFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.INavigationViewItemSeparatorFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.INavigationViewItemSeparatorFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public NavigationViewItemSeparator(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayout))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class NonVirtualizingLayout : global::Microsoft.UI.Xaml.Controls.Layout, global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayout, global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutOverrides
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public NonVirtualizingLayout() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INonVirtualizingLayoutFactory_CreateInstance("Microsoft.UI.Xaml.Controls.NonVirtualizingLayout");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__INonVirtualizingLayoutFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.NonVirtualizingLayout).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		void global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutOverrides.InitializeForContextCore(global::Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext context)
		{
			this.InitializeForContextCore(context);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void InitializeForContextCore(global::Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext context)
		{
			global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutOverrides__Impl.Stubs.InitializeForContextCore(
								this, 
								context
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutOverrides.UninitializeForContextCore(global::Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext context)
		{
			this.UninitializeForContextCore(context);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void UninitializeForContextCore(global::Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext context)
		{
			global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutOverrides__Impl.Stubs.UninitializeForContextCore(
								this, 
								context
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		global::Windows.Foundation.Size global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutOverrides.MeasureOverride(
					global::Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext context, 
					global::Windows.Foundation.Size availableSize)
		{
			global::Windows.Foundation.Size __retVal_1 = this.MeasureOverride(
								context, 
								availableSize
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.Foundation.Size MeasureOverride(
					global::Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext context, 
					global::Windows.Foundation.Size availableSize)
		{
			global::Windows.Foundation.Size __retVal = global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutOverrides__Impl.Stubs.MeasureOverride(
								this, 
								context, 
								availableSize
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.Foundation.Size global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutOverrides.ArrangeOverride(
					global::Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext context, 
					global::Windows.Foundation.Size finalSize)
		{
			global::Windows.Foundation.Size __retVal_1 = this.ArrangeOverride(
								context, 
								finalSize
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.Foundation.Size ArrangeOverride(
					global::Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext context, 
					global::Windows.Foundation.Size finalSize)
		{
			global::Windows.Foundation.Size __retVal = global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutOverrides__Impl.Stubs.ArrangeOverride(
								this, 
								context, 
								finalSize
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public NonVirtualizingLayout(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContext))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContextOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class NonVirtualizingLayoutContext : global::Microsoft.UI.Xaml.Controls.LayoutContext, global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContext, global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContextOverrides
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public NonVirtualizingLayoutContext() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__INonVirtualizingLayoutContextFactory_CreateInstance("Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__INonVirtualizingLayoutContextFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContextFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContextFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContextFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContextFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Children")]
		public virtual global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.UIElement> get_Children()
		{
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.UIElement> __retVal = global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContext__Impl.Stubs.get_Children(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.UIElement> global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContextOverrides.get_ChildrenCore()
		{
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.UIElement> __retVal_1 = this.get_ChildrenCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ChildrenCore")]
		protected virtual global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.UIElement> get_ChildrenCore()
		{
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.UIElement> __retVal = global::Microsoft.UI.Xaml.Controls.INonVirtualizingLayoutContextOverrides__Impl.Stubs.get_ChildrenCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public NonVirtualizingLayoutContext(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IParallaxView))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ParallaxView : global::Windows.UI.Xaml.FrameworkElement, global::Microsoft.UI.Xaml.Controls.IParallaxView
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ParallaxView() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewFactory_CreateInstance("Microsoft.UI.Xaml.Controls.ParallaxView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.ParallaxView).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IParallaxViewFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IParallaxViewFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IParallaxViewFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IParallaxViewFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Child")]
		public virtual global::Windows.UI.Xaml.UIElement get_Child()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.get_Child(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Child")]
		public virtual void put_Child(global::Windows.UI.Xaml.UIElement value)
		{
			global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.put_Child(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalShift")]
		public virtual double get_HorizontalShift()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.get_HorizontalShift(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalShift")]
		public virtual void put_HorizontalShift(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.put_HorizontalShift(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalSourceEndOffset")]
		public virtual double get_HorizontalSourceEndOffset()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.get_HorizontalSourceEndOffset(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalSourceEndOffset")]
		public virtual void put_HorizontalSourceEndOffset(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.put_HorizontalSourceEndOffset(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalSourceOffsetKind")]
		public virtual global::Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind get_HorizontalSourceOffsetKind()
		{
			global::Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind __retVal = global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.get_HorizontalSourceOffsetKind(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalSourceOffsetKind")]
		public virtual void put_HorizontalSourceOffsetKind(global::Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind value)
		{
			global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.put_HorizontalSourceOffsetKind(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalSourceStartOffset")]
		public virtual double get_HorizontalSourceStartOffset()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.get_HorizontalSourceStartOffset(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalSourceStartOffset")]
		public virtual void put_HorizontalSourceStartOffset(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.put_HorizontalSourceStartOffset(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsHorizontalShiftClamped")]
		public virtual bool get_IsHorizontalShiftClamped()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.get_IsHorizontalShiftClamped(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsHorizontalShiftClamped")]
		public virtual void put_IsHorizontalShiftClamped(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.put_IsHorizontalShiftClamped(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsVerticalShiftClamped")]
		public virtual bool get_IsVerticalShiftClamped()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.get_IsVerticalShiftClamped(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsVerticalShiftClamped")]
		public virtual void put_IsVerticalShiftClamped(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.put_IsVerticalShiftClamped(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxHorizontalShiftRatio")]
		public virtual double get_MaxHorizontalShiftRatio()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.get_MaxHorizontalShiftRatio(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxHorizontalShiftRatio")]
		public virtual void put_MaxHorizontalShiftRatio(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.put_MaxHorizontalShiftRatio(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxVerticalShiftRatio")]
		public virtual double get_MaxVerticalShiftRatio()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.get_MaxVerticalShiftRatio(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxVerticalShiftRatio")]
		public virtual void put_MaxVerticalShiftRatio(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.put_MaxVerticalShiftRatio(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		public virtual global::Windows.UI.Xaml.UIElement get_Source()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.get_Source(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Source")]
		public virtual void put_Source(global::Windows.UI.Xaml.UIElement value)
		{
			global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.put_Source(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalShift")]
		public virtual double get_VerticalShift()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.get_VerticalShift(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalShift")]
		public virtual void put_VerticalShift(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.put_VerticalShift(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalSourceEndOffset")]
		public virtual double get_VerticalSourceEndOffset()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.get_VerticalSourceEndOffset(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalSourceEndOffset")]
		public virtual void put_VerticalSourceEndOffset(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.put_VerticalSourceEndOffset(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalSourceOffsetKind")]
		public virtual global::Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind get_VerticalSourceOffsetKind()
		{
			global::Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind __retVal = global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.get_VerticalSourceOffsetKind(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalSourceOffsetKind")]
		public virtual void put_VerticalSourceOffsetKind(global::Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind value)
		{
			global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.put_VerticalSourceOffsetKind(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalSourceStartOffset")]
		public virtual double get_VerticalSourceStartOffset()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.get_VerticalSourceStartOffset(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalSourceStartOffset")]
		public virtual void put_VerticalSourceStartOffset(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.put_VerticalSourceStartOffset(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void RefreshAutomaticHorizontalOffsets()
		{
			global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.RefreshAutomaticHorizontalOffsets(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void RefreshAutomaticVerticalOffsets()
		{
			global::Microsoft.UI.Xaml.Controls.IParallaxView__Impl.Stubs.RefreshAutomaticVerticalOffsets(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ChildProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ChildProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_ChildProperty("Microsoft.UI.Xaml.Controls.ParallaxView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_ChildProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics__Impl.Stubs.get_ChildProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalSourceEndOffsetProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HorizontalSourceEndOffsetProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_HorizontalSourceEndOffsetProperty("Microsoft.UI.Xaml.Controls.ParallaxView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_HorizontalSourceEndOffsetProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics__Impl.Stubs.get_HorizontalSourceEndOffsetProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalSourceOffsetKindProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HorizontalSourceOffsetKindProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_HorizontalSourceOffsetKindProperty("Microsoft.UI.Xaml.Controls.ParallaxView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_HorizontalSourceOffsetKindProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics__Impl.Stubs.get_HorizontalSourceOffsetKindProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalSourceStartOffsetProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HorizontalSourceStartOffsetProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_HorizontalSourceStartOffsetProperty("Microsoft.UI.Xaml.Controls.ParallaxView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_HorizontalSourceStartOffsetProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics__Impl.Stubs.get_HorizontalSourceStartOffsetProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxHorizontalShiftRatioProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MaxHorizontalShiftRatioProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_MaxHorizontalShiftRatioProperty("Microsoft.UI.Xaml.Controls.ParallaxView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_MaxHorizontalShiftRatioProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics__Impl.Stubs.get_MaxHorizontalShiftRatioProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalShiftProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HorizontalShiftProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_HorizontalShiftProperty("Microsoft.UI.Xaml.Controls.ParallaxView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_HorizontalShiftProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics__Impl.Stubs.get_HorizontalShiftProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsHorizontalShiftClampedProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsHorizontalShiftClampedProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_IsHorizontalShiftClampedProperty("Microsoft.UI.Xaml.Controls.ParallaxView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_IsHorizontalShiftClampedProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics__Impl.Stubs.get_IsHorizontalShiftClampedProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsVerticalShiftClampedProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsVerticalShiftClampedProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_IsVerticalShiftClampedProperty("Microsoft.UI.Xaml.Controls.ParallaxView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_IsVerticalShiftClampedProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics__Impl.Stubs.get_IsVerticalShiftClampedProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_SourceProperty("Microsoft.UI.Xaml.Controls.ParallaxView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_SourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics__Impl.Stubs.get_SourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalSourceEndOffsetProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_VerticalSourceEndOffsetProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_VerticalSourceEndOffsetProperty("Microsoft.UI.Xaml.Controls.ParallaxView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_VerticalSourceEndOffsetProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics__Impl.Stubs.get_VerticalSourceEndOffsetProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalSourceOffsetKindProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_VerticalSourceOffsetKindProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_VerticalSourceOffsetKindProperty("Microsoft.UI.Xaml.Controls.ParallaxView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_VerticalSourceOffsetKindProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics__Impl.Stubs.get_VerticalSourceOffsetKindProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalSourceStartOffsetProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_VerticalSourceStartOffsetProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_VerticalSourceStartOffsetProperty("Microsoft.UI.Xaml.Controls.ParallaxView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_VerticalSourceStartOffsetProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics__Impl.Stubs.get_VerticalSourceStartOffsetProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxVerticalShiftRatioProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MaxVerticalShiftRatioProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_MaxVerticalShiftRatioProperty("Microsoft.UI.Xaml.Controls.ParallaxView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_MaxVerticalShiftRatioProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics__Impl.Stubs.get_MaxVerticalShiftRatioProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalShiftProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_VerticalShiftProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_VerticalShiftProperty("Microsoft.UI.Xaml.Controls.ParallaxView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IParallaxViewStatics_get_VerticalShiftProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics__Impl.Stubs.get_VerticalShiftProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IParallaxViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public ParallaxView(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IPathIconSource))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class PathIconSource : global::Microsoft.UI.Xaml.Controls.IconSource, global::Microsoft.UI.Xaml.Controls.IPathIconSource
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public PathIconSource() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPathIconSourceFactory_CreateInstance("Microsoft.UI.Xaml.Controls.PathIconSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IPathIconSourceFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.PathIconSource).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IPathIconSourceFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IPathIconSourceFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IPathIconSourceFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IPathIconSourceFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Data")]
		public virtual global::Windows.UI.Xaml.Media.Geometry get_Data()
		{
			global::Windows.UI.Xaml.Media.Geometry __retVal = global::Microsoft.UI.Xaml.Controls.IPathIconSource__Impl.Stubs.get_Data(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Data")]
		public virtual void put_Data(global::Windows.UI.Xaml.Media.Geometry value)
		{
			global::Microsoft.UI.Xaml.Controls.IPathIconSource__Impl.Stubs.put_Data(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DataProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_DataProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IPathIconSourceStatics_get_DataProperty("Microsoft.UI.Xaml.Controls.PathIconSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IPathIconSourceStatics_get_DataProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IPathIconSourceStatics__Impl.Stubs.get_DataProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IPathIconSourceStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public PathIconSource(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItem))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(131072)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RadioMenuFlyoutItem : global::Windows.UI.Xaml.Controls.MenuFlyoutItem, global::Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItem
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public RadioMenuFlyoutItem() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRadioMenuFlyoutItemFactory_CreateInstance("Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IRadioMenuFlyoutItemFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsChecked")]
		public virtual bool get_IsChecked()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItem__Impl.Stubs.get_IsChecked(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsChecked")]
		public virtual void put_IsChecked(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItem__Impl.Stubs.put_IsChecked(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GroupName")]
		public virtual string get_GroupName()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItem__Impl.Stubs.get_GroupName(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "GroupName")]
		public virtual void put_GroupName(string value)
		{
			global::Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItem__Impl.Stubs.put_GroupName(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AreCheckStatesEnabledProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_AreCheckStatesEnabledProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRadioMenuFlyoutItemStatics2_get_AreCheckStatesEnabledProperty("Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRadioMenuFlyoutItemStatics2_get_AreCheckStatesEnabledProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemStatics2__Impl.Stubs.get_AreCheckStatesEnabledProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static void SetAreCheckStatesEnabled(
					global::Windows.UI.Xaml.Controls.MenuFlyoutSubItem @object, 
					bool value)
		{
			__Factory_Microsoft_UI_Xaml_Controls__IRadioMenuFlyoutItemStatics2_SetAreCheckStatesEnabled(
								"Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem", 
								@object, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Microsoft_UI_Xaml_Controls__IRadioMenuFlyoutItemStatics2_SetAreCheckStatesEnabled(
					string typeName, 
					global::Windows.UI.Xaml.Controls.MenuFlyoutSubItem @object, 
					bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemStatics2__Impl.Stubs.SetAreCheckStatesEnabled(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemStatics2).TypeHandle
												), 
								@object, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static bool GetAreCheckStatesEnabled(global::Windows.UI.Xaml.Controls.MenuFlyoutSubItem @object)
		{
			bool retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRadioMenuFlyoutItemStatics2_GetAreCheckStatesEnabled(
								"Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem", 
								@object
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static bool __Factory_Microsoft_UI_Xaml_Controls__IRadioMenuFlyoutItemStatics2_GetAreCheckStatesEnabled(
					string typeName, 
					global::Windows.UI.Xaml.Controls.MenuFlyoutSubItem @object)
		{
			bool __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemStatics2__Impl.Stubs.GetAreCheckStatesEnabled(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemStatics2).TypeHandle
												), 
								@object
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsCheckedProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsCheckedProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRadioMenuFlyoutItemStatics_get_IsCheckedProperty("Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRadioMenuFlyoutItemStatics_get_IsCheckedProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemStatics__Impl.Stubs.get_IsCheckedProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GroupNameProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_GroupNameProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRadioMenuFlyoutItemStatics_get_GroupNameProperty("Microsoft.UI.Xaml.Controls.RadioMenuFlyoutItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRadioMenuFlyoutItemStatics_get_GroupNameProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemStatics__Impl.Stubs.get_GroupNameProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRadioMenuFlyoutItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public RadioMenuFlyoutItem(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfo))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RatingItemFontInfo : global::Microsoft.UI.Xaml.Controls.RatingItemInfo, global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfo
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public RatingItemFontInfo() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingItemFontInfoFactory_CreateInstance("Microsoft.UI.Xaml.Controls.RatingItemFontInfo");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IRatingItemFontInfoFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.RatingItemFontInfo).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfoFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfoFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfoFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfoFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisabledGlyph")]
		public virtual string get_DisabledGlyph()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfo__Impl.Stubs.get_DisabledGlyph(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DisabledGlyph")]
		public virtual void put_DisabledGlyph(string value)
		{
			global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfo__Impl.Stubs.put_DisabledGlyph(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Glyph")]
		public virtual string get_Glyph()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfo__Impl.Stubs.get_Glyph(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Glyph")]
		public virtual void put_Glyph(string value)
		{
			global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfo__Impl.Stubs.put_Glyph(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerOverGlyph")]
		public virtual string get_PointerOverGlyph()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfo__Impl.Stubs.get_PointerOverGlyph(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PointerOverGlyph")]
		public virtual void put_PointerOverGlyph(string value)
		{
			global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfo__Impl.Stubs.put_PointerOverGlyph(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerOverPlaceholderGlyph")]
		public virtual string get_PointerOverPlaceholderGlyph()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfo__Impl.Stubs.get_PointerOverPlaceholderGlyph(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PointerOverPlaceholderGlyph")]
		public virtual void put_PointerOverPlaceholderGlyph(string value)
		{
			global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfo__Impl.Stubs.put_PointerOverPlaceholderGlyph(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlaceholderGlyph")]
		public virtual string get_PlaceholderGlyph()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfo__Impl.Stubs.get_PlaceholderGlyph(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PlaceholderGlyph")]
		public virtual void put_PlaceholderGlyph(string value)
		{
			global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfo__Impl.Stubs.put_PlaceholderGlyph(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UnsetGlyph")]
		public virtual string get_UnsetGlyph()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfo__Impl.Stubs.get_UnsetGlyph(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UnsetGlyph")]
		public virtual void put_UnsetGlyph(string value)
		{
			global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfo__Impl.Stubs.put_UnsetGlyph(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisabledGlyphProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_DisabledGlyphProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingItemFontInfoStatics_get_DisabledGlyphProperty("Microsoft.UI.Xaml.Controls.RatingItemFontInfo");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRatingItemFontInfoStatics_get_DisabledGlyphProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfoStatics__Impl.Stubs.get_DisabledGlyphProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfoStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GlyphProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_GlyphProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingItemFontInfoStatics_get_GlyphProperty("Microsoft.UI.Xaml.Controls.RatingItemFontInfo");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRatingItemFontInfoStatics_get_GlyphProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfoStatics__Impl.Stubs.get_GlyphProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfoStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlaceholderGlyphProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PlaceholderGlyphProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingItemFontInfoStatics_get_PlaceholderGlyphProperty("Microsoft.UI.Xaml.Controls.RatingItemFontInfo");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRatingItemFontInfoStatics_get_PlaceholderGlyphProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfoStatics__Impl.Stubs.get_PlaceholderGlyphProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfoStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerOverGlyphProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PointerOverGlyphProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingItemFontInfoStatics_get_PointerOverGlyphProperty("Microsoft.UI.Xaml.Controls.RatingItemFontInfo");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRatingItemFontInfoStatics_get_PointerOverGlyphProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfoStatics__Impl.Stubs.get_PointerOverGlyphProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfoStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerOverPlaceholderGlyphProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PointerOverPlaceholderGlyphProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingItemFontInfoStatics_get_PointerOverPlaceholderGlyphProperty("Microsoft.UI.Xaml.Controls.RatingItemFontInfo");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRatingItemFontInfoStatics_get_PointerOverPlaceholderGlyphProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfoStatics__Impl.Stubs.get_PointerOverPlaceholderGlyphProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfoStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UnsetGlyphProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_UnsetGlyphProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingItemFontInfoStatics_get_UnsetGlyphProperty("Microsoft.UI.Xaml.Controls.RatingItemFontInfo");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRatingItemFontInfoStatics_get_UnsetGlyphProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfoStatics__Impl.Stubs.get_UnsetGlyphProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRatingItemFontInfoStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public RatingItemFontInfo(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfo))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RatingItemImageInfo : global::Microsoft.UI.Xaml.Controls.RatingItemInfo, global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfo
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public RatingItemImageInfo() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingItemImageInfoFactory_CreateInstance("Microsoft.UI.Xaml.Controls.RatingItemImageInfo");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IRatingItemImageInfoFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.RatingItemImageInfo).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfoFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfoFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfoFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfoFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisabledImage")]
		public virtual global::Windows.UI.Xaml.Media.ImageSource get_DisabledImage()
		{
			global::Windows.UI.Xaml.Media.ImageSource __retVal = global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfo__Impl.Stubs.get_DisabledImage(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DisabledImage")]
		public virtual void put_DisabledImage(global::Windows.UI.Xaml.Media.ImageSource value)
		{
			global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfo__Impl.Stubs.put_DisabledImage(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Image")]
		public virtual global::Windows.UI.Xaml.Media.ImageSource get_Image()
		{
			global::Windows.UI.Xaml.Media.ImageSource __retVal = global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfo__Impl.Stubs.get_Image(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Image")]
		public virtual void put_Image(global::Windows.UI.Xaml.Media.ImageSource value)
		{
			global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfo__Impl.Stubs.put_Image(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlaceholderImage")]
		public virtual global::Windows.UI.Xaml.Media.ImageSource get_PlaceholderImage()
		{
			global::Windows.UI.Xaml.Media.ImageSource __retVal = global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfo__Impl.Stubs.get_PlaceholderImage(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PlaceholderImage")]
		public virtual void put_PlaceholderImage(global::Windows.UI.Xaml.Media.ImageSource value)
		{
			global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfo__Impl.Stubs.put_PlaceholderImage(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerOverImage")]
		public virtual global::Windows.UI.Xaml.Media.ImageSource get_PointerOverImage()
		{
			global::Windows.UI.Xaml.Media.ImageSource __retVal = global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfo__Impl.Stubs.get_PointerOverImage(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PointerOverImage")]
		public virtual void put_PointerOverImage(global::Windows.UI.Xaml.Media.ImageSource value)
		{
			global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfo__Impl.Stubs.put_PointerOverImage(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerOverPlaceholderImage")]
		public virtual global::Windows.UI.Xaml.Media.ImageSource get_PointerOverPlaceholderImage()
		{
			global::Windows.UI.Xaml.Media.ImageSource __retVal = global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfo__Impl.Stubs.get_PointerOverPlaceholderImage(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PointerOverPlaceholderImage")]
		public virtual void put_PointerOverPlaceholderImage(global::Windows.UI.Xaml.Media.ImageSource value)
		{
			global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfo__Impl.Stubs.put_PointerOverPlaceholderImage(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UnsetImage")]
		public virtual global::Windows.UI.Xaml.Media.ImageSource get_UnsetImage()
		{
			global::Windows.UI.Xaml.Media.ImageSource __retVal = global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfo__Impl.Stubs.get_UnsetImage(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UnsetImage")]
		public virtual void put_UnsetImage(global::Windows.UI.Xaml.Media.ImageSource value)
		{
			global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfo__Impl.Stubs.put_UnsetImage(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisabledImageProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_DisabledImageProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingItemImageInfoStatics_get_DisabledImageProperty("Microsoft.UI.Xaml.Controls.RatingItemImageInfo");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRatingItemImageInfoStatics_get_DisabledImageProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfoStatics__Impl.Stubs.get_DisabledImageProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfoStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ImageProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ImageProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingItemImageInfoStatics_get_ImageProperty("Microsoft.UI.Xaml.Controls.RatingItemImageInfo");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRatingItemImageInfoStatics_get_ImageProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfoStatics__Impl.Stubs.get_ImageProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfoStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlaceholderImageProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PlaceholderImageProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingItemImageInfoStatics_get_PlaceholderImageProperty("Microsoft.UI.Xaml.Controls.RatingItemImageInfo");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRatingItemImageInfoStatics_get_PlaceholderImageProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfoStatics__Impl.Stubs.get_PlaceholderImageProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfoStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerOverImageProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PointerOverImageProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingItemImageInfoStatics_get_PointerOverImageProperty("Microsoft.UI.Xaml.Controls.RatingItemImageInfo");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRatingItemImageInfoStatics_get_PointerOverImageProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfoStatics__Impl.Stubs.get_PointerOverImageProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfoStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerOverPlaceholderImageProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PointerOverPlaceholderImageProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingItemImageInfoStatics_get_PointerOverPlaceholderImageProperty("Microsoft.UI.Xaml.Controls.RatingItemImageInfo");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRatingItemImageInfoStatics_get_PointerOverPlaceholderImageProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfoStatics__Impl.Stubs.get_PointerOverPlaceholderImageProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfoStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UnsetImageProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_UnsetImageProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRatingItemImageInfoStatics_get_UnsetImageProperty("Microsoft.UI.Xaml.Controls.RatingItemImageInfo");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRatingItemImageInfoStatics_get_UnsetImageProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfoStatics__Impl.Stubs.get_UnsetImageProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRatingItemImageInfoStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public RatingItemImageInfo(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IRefreshContainer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RefreshContainer : global::Windows.UI.Xaml.Controls.ContentControl, global::Microsoft.UI.Xaml.Controls.IRefreshContainer
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public RefreshContainer() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRefreshContainerFactory_CreateInstance("Microsoft.UI.Xaml.Controls.RefreshContainer");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IRefreshContainerFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.RefreshContainer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IRefreshContainerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IRefreshContainerFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IRefreshContainerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IRefreshContainerFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Visualizer")]
		public virtual global::Microsoft.UI.Xaml.Controls.RefreshVisualizer get_Visualizer()
		{
			global::Microsoft.UI.Xaml.Controls.RefreshVisualizer __retVal = global::Microsoft.UI.Xaml.Controls.IRefreshContainer__Impl.Stubs.get_Visualizer(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Visualizer")]
		public virtual void put_Visualizer(global::Microsoft.UI.Xaml.Controls.RefreshVisualizer value)
		{
			global::Microsoft.UI.Xaml.Controls.IRefreshContainer__Impl.Stubs.put_Visualizer(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PullDirection")]
		public virtual global::Microsoft.UI.Xaml.Controls.RefreshPullDirection get_PullDirection()
		{
			global::Microsoft.UI.Xaml.Controls.RefreshPullDirection __retVal = global::Microsoft.UI.Xaml.Controls.IRefreshContainer__Impl.Stubs.get_PullDirection(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PullDirection")]
		public virtual void put_PullDirection(global::Microsoft.UI.Xaml.Controls.RefreshPullDirection value)
		{
			global::Microsoft.UI.Xaml.Controls.IRefreshContainer__Impl.Stubs.put_PullDirection(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "RefreshRequested")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_RefreshRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshContainer, global::Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.IRefreshContainer__Impl.Stubs.add_RefreshRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "RefreshRequested")]
		public virtual void remove_RefreshRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.IRefreshContainer__Impl.Stubs.remove_RefreshRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void RequestRefresh()
		{
			global::Microsoft.UI.Xaml.Controls.IRefreshContainer__Impl.Stubs.RequestRefresh(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VisualizerProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_VisualizerProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRefreshContainerStatics_get_VisualizerProperty("Microsoft.UI.Xaml.Controls.RefreshContainer");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRefreshContainerStatics_get_VisualizerProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRefreshContainerStatics__Impl.Stubs.get_VisualizerProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRefreshContainerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PullDirectionProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PullDirectionProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRefreshContainerStatics_get_PullDirectionProperty("Microsoft.UI.Xaml.Controls.RefreshContainer");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRefreshContainerStatics_get_PullDirectionProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRefreshContainerStatics__Impl.Stubs.get_PullDirectionProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRefreshContainerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public RefreshContainer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IRefreshVisualizer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RefreshVisualizer : global::Windows.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.IRefreshVisualizer
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public RefreshVisualizer() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRefreshVisualizerFactory_CreateInstance("Microsoft.UI.Xaml.Controls.RefreshVisualizer");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IRefreshVisualizerFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.RefreshVisualizer).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IRefreshVisualizerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IRefreshVisualizerFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IRefreshVisualizerFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IRefreshVisualizerFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public virtual void RequestRefresh()
		{
			global::Microsoft.UI.Xaml.Controls.IRefreshVisualizer__Impl.Stubs.RequestRefresh(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Orientation")]
		public virtual global::Microsoft.UI.Xaml.Controls.RefreshVisualizerOrientation get_Orientation()
		{
			global::Microsoft.UI.Xaml.Controls.RefreshVisualizerOrientation __retVal = global::Microsoft.UI.Xaml.Controls.IRefreshVisualizer__Impl.Stubs.get_Orientation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Orientation")]
		public virtual void put_Orientation(global::Microsoft.UI.Xaml.Controls.RefreshVisualizerOrientation value)
		{
			global::Microsoft.UI.Xaml.Controls.IRefreshVisualizer__Impl.Stubs.put_Orientation(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		public virtual global::Windows.UI.Xaml.UIElement get_Content()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.IRefreshVisualizer__Impl.Stubs.get_Content(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		public virtual void put_Content(global::Windows.UI.Xaml.UIElement value)
		{
			global::Microsoft.UI.Xaml.Controls.IRefreshVisualizer__Impl.Stubs.put_Content(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "State")]
		public virtual global::Microsoft.UI.Xaml.Controls.RefreshVisualizerState get_State()
		{
			global::Microsoft.UI.Xaml.Controls.RefreshVisualizerState __retVal = global::Microsoft.UI.Xaml.Controls.IRefreshVisualizer__Impl.Stubs.get_State(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "RefreshRequested")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_RefreshRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshVisualizer, global::Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.IRefreshVisualizer__Impl.Stubs.add_RefreshRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "RefreshRequested")]
		public virtual void remove_RefreshRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.IRefreshVisualizer__Impl.Stubs.remove_RefreshRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "RefreshStateChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_RefreshStateChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshVisualizer, global::Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.IRefreshVisualizer__Impl.Stubs.add_RefreshStateChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "RefreshStateChanged")]
		public virtual void remove_RefreshStateChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.IRefreshVisualizer__Impl.Stubs.remove_RefreshStateChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InfoProviderProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_InfoProviderProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRefreshVisualizerStatics_get_InfoProviderProperty("Microsoft.UI.Xaml.Controls.RefreshVisualizer");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRefreshVisualizerStatics_get_InfoProviderProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRefreshVisualizerStatics__Impl.Stubs.get_InfoProviderProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRefreshVisualizerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OrientationProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_OrientationProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRefreshVisualizerStatics_get_OrientationProperty("Microsoft.UI.Xaml.Controls.RefreshVisualizer");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRefreshVisualizerStatics_get_OrientationProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRefreshVisualizerStatics__Impl.Stubs.get_OrientationProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRefreshVisualizerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ContentProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRefreshVisualizerStatics_get_ContentProperty("Microsoft.UI.Xaml.Controls.RefreshVisualizer");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRefreshVisualizerStatics_get_ContentProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRefreshVisualizerStatics__Impl.Stubs.get_ContentProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRefreshVisualizerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StateProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_StateProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRefreshVisualizerStatics_get_StateProperty("Microsoft.UI.Xaml.Controls.RefreshVisualizer");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IRefreshVisualizerStatics_get_StateProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IRefreshVisualizerStatics__Impl.Stubs.get_StateProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IRefreshVisualizerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public RefreshVisualizer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IRefreshRequestedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class RefreshRequestedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IRefreshRequestedEventArgs
	{
		public global::Windows.Foundation.Deferral GetDeferral()
		{
			global::Windows.Foundation.Deferral __retVal = global::Microsoft.UI.Xaml.Controls.IRefreshRequestedEventArgs__Impl.Stubs.GetDeferral(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public RefreshRequestedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IRefreshStateChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class RefreshStateChangedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IRefreshStateChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OldState")]
		public global::Microsoft.UI.Xaml.Controls.RefreshVisualizerState get_OldState()
		{
			global::Microsoft.UI.Xaml.Controls.RefreshVisualizerState __retVal = global::Microsoft.UI.Xaml.Controls.IRefreshStateChangedEventArgs__Impl.Stubs.get_OldState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NewState")]
		public global::Microsoft.UI.Xaml.Controls.RefreshVisualizerState get_NewState()
		{
			global::Microsoft.UI.Xaml.Controls.RefreshVisualizerState __retVal = global::Microsoft.UI.Xaml.Controls.IRefreshStateChangedEventArgs__Impl.Stubs.get_NewState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public RefreshStateChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IRevealListViewItemPresenter))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RevealListViewItemPresenter : global::Windows.UI.Xaml.Controls.Primitives.ListViewItemPresenter, global::Microsoft.UI.Xaml.Controls.IRevealListViewItemPresenter
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public RevealListViewItemPresenter() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IRevealListViewItemPresenterFactory_CreateInstance("Microsoft.UI.Xaml.Controls.RevealListViewItemPresenter");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IRevealListViewItemPresenterFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.RevealListViewItemPresenter).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IRevealListViewItemPresenterFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IRevealListViewItemPresenterFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IRevealListViewItemPresenterFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IRevealListViewItemPresenterFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public RevealListViewItemPresenter(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IVirtualizingLayout))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class VirtualizingLayout : global::Microsoft.UI.Xaml.Controls.Layout, global::Microsoft.UI.Xaml.Controls.IVirtualizingLayout, global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutOverrides
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public VirtualizingLayout() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IVirtualizingLayoutFactory_CreateInstance("Microsoft.UI.Xaml.Controls.VirtualizingLayout");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IVirtualizingLayoutFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.VirtualizingLayout).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		void global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutOverrides.InitializeForContextCore(global::Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext context)
		{
			this.InitializeForContextCore(context);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void InitializeForContextCore(global::Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext context)
		{
			global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutOverrides__Impl.Stubs.InitializeForContextCore(
								this, 
								context
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutOverrides.UninitializeForContextCore(global::Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext context)
		{
			this.UninitializeForContextCore(context);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void UninitializeForContextCore(global::Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext context)
		{
			global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutOverrides__Impl.Stubs.UninitializeForContextCore(
								this, 
								context
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		global::Windows.Foundation.Size global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutOverrides.MeasureOverride(
					global::Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext context, 
					global::Windows.Foundation.Size availableSize)
		{
			global::Windows.Foundation.Size __retVal_1 = this.MeasureOverride(
								context, 
								availableSize
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.Foundation.Size MeasureOverride(
					global::Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext context, 
					global::Windows.Foundation.Size availableSize)
		{
			global::Windows.Foundation.Size __retVal = global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutOverrides__Impl.Stubs.MeasureOverride(
								this, 
								context, 
								availableSize
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.Foundation.Size global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutOverrides.ArrangeOverride(
					global::Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext context, 
					global::Windows.Foundation.Size finalSize)
		{
			global::Windows.Foundation.Size __retVal_1 = this.ArrangeOverride(
								context, 
								finalSize
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.Foundation.Size ArrangeOverride(
					global::Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext context, 
					global::Windows.Foundation.Size finalSize)
		{
			global::Windows.Foundation.Size __retVal = global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutOverrides__Impl.Stubs.ArrangeOverride(
								this, 
								context, 
								finalSize
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutOverrides.OnItemsChangedCore(
					global::Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext context, 
					object source, 
					global::System.Collections.Specialized.NotifyCollectionChangedEventArgs args)
		{
			this.OnItemsChangedCore(
								context, 
								source, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnItemsChangedCore(
					global::Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext context, 
					object source, 
					global::System.Collections.Specialized.NotifyCollectionChangedEventArgs args)
		{
			global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutOverrides__Impl.Stubs.OnItemsChangedCore(
								this, 
								context, 
								source, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public VirtualizingLayout(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContext))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class VirtualizingLayoutContext : global::Microsoft.UI.Xaml.Controls.LayoutContext, global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContext, global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextOverrides
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public VirtualizingLayoutContext() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IVirtualizingLayoutContextFactory_CreateInstance("Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IVirtualizingLayoutContextFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemCount")]
		public virtual int get_ItemCount()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContext__Impl.Stubs.get_ItemCount(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual object GetItemAt(int index)
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContext__Impl.Stubs.GetItemAt(
								this, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RealizationRect")]
		public virtual global::Windows.Foundation.Rect get_RealizationRect()
		{
			global::Windows.Foundation.Rect __retVal = global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContext__Impl.Stubs.get_RealizationRect(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual global::Windows.UI.Xaml.UIElement GetOrCreateElementAt(int index)
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContext__Impl.Stubs.GetOrCreateElementAt(
								this, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual global::Windows.UI.Xaml.UIElement GetOrCreateElementAt(
					int index, 
					global::Microsoft.UI.Xaml.Controls.ElementRealizationOptions options)
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContext__Impl.Stubs.GetOrCreateElementAt(
								this, 
								index, 
								options
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual void RecycleElement(global::Windows.UI.Xaml.UIElement element)
		{
			global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContext__Impl.Stubs.RecycleElement(
								this, 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RecommendedAnchorIndex")]
		public virtual int get_RecommendedAnchorIndex()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContext__Impl.Stubs.get_RecommendedAnchorIndex(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LayoutOrigin")]
		public virtual global::Windows.Foundation.Point get_LayoutOrigin()
		{
			global::Windows.Foundation.Point __retVal = global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContext__Impl.Stubs.get_LayoutOrigin(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "LayoutOrigin")]
		public virtual void put_LayoutOrigin(global::Windows.Foundation.Point value)
		{
			global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContext__Impl.Stubs.put_LayoutOrigin(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		int global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextOverrides.ItemCountCore()
		{
			int __retVal_1 = this.ItemCountCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual int ItemCountCore()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextOverrides__Impl.Stubs.ItemCountCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		object global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextOverrides.GetItemAtCore(int index)
		{
			object __retVal_1 = this.GetItemAtCore(index);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual object GetItemAtCore(int index)
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextOverrides__Impl.Stubs.GetItemAtCore(
								this, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.Foundation.Rect global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextOverrides.RealizationRectCore()
		{
			global::Windows.Foundation.Rect __retVal_1 = this.RealizationRectCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.Foundation.Rect RealizationRectCore()
		{
			global::Windows.Foundation.Rect __retVal = global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextOverrides__Impl.Stubs.RealizationRectCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.UIElement global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextOverrides.GetOrCreateElementAtCore(
					int index, 
					global::Microsoft.UI.Xaml.Controls.ElementRealizationOptions options)
		{
			global::Windows.UI.Xaml.UIElement __retVal_1 = this.GetOrCreateElementAtCore(
								index, 
								options
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.UIElement GetOrCreateElementAtCore(
					int index, 
					global::Microsoft.UI.Xaml.Controls.ElementRealizationOptions options)
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextOverrides__Impl.Stubs.GetOrCreateElementAtCore(
								this, 
								index, 
								options
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextOverrides.RecycleElementCore(global::Windows.UI.Xaml.UIElement element)
		{
			this.RecycleElementCore(element);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void RecycleElementCore(global::Windows.UI.Xaml.UIElement element)
		{
			global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextOverrides__Impl.Stubs.RecycleElementCore(
								this, 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		int global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextOverrides.get_RecommendedAnchorIndexCore()
		{
			int __retVal_1 = this.get_RecommendedAnchorIndexCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RecommendedAnchorIndexCore")]
		protected virtual int get_RecommendedAnchorIndexCore()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextOverrides__Impl.Stubs.get_RecommendedAnchorIndexCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.Foundation.Point global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextOverrides.get_LayoutOriginCore()
		{
			global::Windows.Foundation.Point __retVal_1 = this.get_LayoutOriginCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LayoutOriginCore")]
		protected virtual global::Windows.Foundation.Point get_LayoutOriginCore()
		{
			global::Windows.Foundation.Point __retVal = global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextOverrides__Impl.Stubs.get_LayoutOriginCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextOverrides.put_LayoutOriginCore(global::Windows.Foundation.Point value)
		{
			this.put_LayoutOriginCore(value);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "LayoutOriginCore")]
		protected virtual void put_LayoutOriginCore(global::Windows.Foundation.Point value)
		{
			global::Microsoft.UI.Xaml.Controls.IVirtualizingLayoutContextOverrides__Impl.Stubs.put_LayoutOriginCore(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public VirtualizingLayoutContext(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IStackLayout))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class StackLayout : global::Microsoft.UI.Xaml.Controls.VirtualizingLayout, global::Microsoft.UI.Xaml.Controls.IStackLayout
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public StackLayout() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IStackLayoutFactory_CreateInstance("Microsoft.UI.Xaml.Controls.StackLayout");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IStackLayoutFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.StackLayout).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IStackLayoutFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IStackLayoutFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IStackLayoutFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IStackLayoutFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Orientation")]
		public virtual global::Windows.UI.Xaml.Controls.Orientation get_Orientation()
		{
			global::Windows.UI.Xaml.Controls.Orientation __retVal = global::Microsoft.UI.Xaml.Controls.IStackLayout__Impl.Stubs.get_Orientation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Orientation")]
		public virtual void put_Orientation(global::Windows.UI.Xaml.Controls.Orientation value)
		{
			global::Microsoft.UI.Xaml.Controls.IStackLayout__Impl.Stubs.put_Orientation(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Spacing")]
		public virtual double get_Spacing()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IStackLayout__Impl.Stubs.get_Spacing(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Spacing")]
		public virtual void put_Spacing(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IStackLayout__Impl.Stubs.put_Spacing(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OrientationProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_OrientationProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IStackLayoutStatics_get_OrientationProperty("Microsoft.UI.Xaml.Controls.StackLayout");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IStackLayoutStatics_get_OrientationProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IStackLayoutStatics__Impl.Stubs.get_OrientationProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IStackLayoutStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SpacingProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SpacingProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IStackLayoutStatics_get_SpacingProperty("Microsoft.UI.Xaml.Controls.StackLayout");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IStackLayoutStatics_get_SpacingProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IStackLayoutStatics__Impl.Stubs.get_SpacingProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IStackLayoutStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public StackLayout(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ISwipeControl))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class SwipeControl : global::Windows.UI.Xaml.Controls.ContentControl, global::Microsoft.UI.Xaml.Controls.ISwipeControl
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public SwipeControl() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ISwipeControlFactory_CreateInstance("Microsoft.UI.Xaml.Controls.SwipeControl");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__ISwipeControlFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.SwipeControl).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.ISwipeControlFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ISwipeControlFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.ISwipeControlFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ISwipeControlFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LeftItems")]
		public virtual global::Microsoft.UI.Xaml.Controls.SwipeItems get_LeftItems()
		{
			global::Microsoft.UI.Xaml.Controls.SwipeItems __retVal = global::Microsoft.UI.Xaml.Controls.ISwipeControl__Impl.Stubs.get_LeftItems(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "LeftItems")]
		public virtual void put_LeftItems(global::Microsoft.UI.Xaml.Controls.SwipeItems value)
		{
			global::Microsoft.UI.Xaml.Controls.ISwipeControl__Impl.Stubs.put_LeftItems(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RightItems")]
		public virtual global::Microsoft.UI.Xaml.Controls.SwipeItems get_RightItems()
		{
			global::Microsoft.UI.Xaml.Controls.SwipeItems __retVal = global::Microsoft.UI.Xaml.Controls.ISwipeControl__Impl.Stubs.get_RightItems(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "RightItems")]
		public virtual void put_RightItems(global::Microsoft.UI.Xaml.Controls.SwipeItems value)
		{
			global::Microsoft.UI.Xaml.Controls.ISwipeControl__Impl.Stubs.put_RightItems(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TopItems")]
		public virtual global::Microsoft.UI.Xaml.Controls.SwipeItems get_TopItems()
		{
			global::Microsoft.UI.Xaml.Controls.SwipeItems __retVal = global::Microsoft.UI.Xaml.Controls.ISwipeControl__Impl.Stubs.get_TopItems(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TopItems")]
		public virtual void put_TopItems(global::Microsoft.UI.Xaml.Controls.SwipeItems value)
		{
			global::Microsoft.UI.Xaml.Controls.ISwipeControl__Impl.Stubs.put_TopItems(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BottomItems")]
		public virtual global::Microsoft.UI.Xaml.Controls.SwipeItems get_BottomItems()
		{
			global::Microsoft.UI.Xaml.Controls.SwipeItems __retVal = global::Microsoft.UI.Xaml.Controls.ISwipeControl__Impl.Stubs.get_BottomItems(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BottomItems")]
		public virtual void put_BottomItems(global::Microsoft.UI.Xaml.Controls.SwipeItems value)
		{
			global::Microsoft.UI.Xaml.Controls.ISwipeControl__Impl.Stubs.put_BottomItems(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void Close()
		{
			global::Microsoft.UI.Xaml.Controls.ISwipeControl__Impl.Stubs.Close(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LeftItemsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_LeftItemsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ISwipeControlStatics_get_LeftItemsProperty("Microsoft.UI.Xaml.Controls.SwipeControl");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ISwipeControlStatics_get_LeftItemsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ISwipeControlStatics__Impl.Stubs.get_LeftItemsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ISwipeControlStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RightItemsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_RightItemsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ISwipeControlStatics_get_RightItemsProperty("Microsoft.UI.Xaml.Controls.SwipeControl");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ISwipeControlStatics_get_RightItemsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ISwipeControlStatics__Impl.Stubs.get_RightItemsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ISwipeControlStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TopItemsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TopItemsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ISwipeControlStatics_get_TopItemsProperty("Microsoft.UI.Xaml.Controls.SwipeControl");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ISwipeControlStatics_get_TopItemsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ISwipeControlStatics__Impl.Stubs.get_TopItemsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ISwipeControlStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BottomItemsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_BottomItemsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ISwipeControlStatics_get_BottomItemsProperty("Microsoft.UI.Xaml.Controls.SwipeControl");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ISwipeControlStatics_get_BottomItemsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ISwipeControlStatics__Impl.Stubs.get_BottomItemsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ISwipeControlStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public SwipeControl(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ISwipeItems))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.SwipeItem>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.SwipeItem>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.Controls.SwipeItem>))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class SwipeItems : global::Windows.UI.Xaml.DependencyObject, global::Microsoft.UI.Xaml.Controls.ISwipeItems, global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.SwipeItem>, global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.SwipeItem>, global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.Controls.SwipeItem>
	{
		int global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.SwipeItem>.Count
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Count(((global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.SwipeItem>)this));
			}
		}

		bool global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.SwipeItem>.IsReadOnly
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.IsReadOnly(((global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.SwipeItem>)this));
			}
		}

		void global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.SwipeItem>.Add(global::Microsoft.UI.Xaml.Controls.SwipeItem item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Add(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.SwipeItem>.Clear()
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Clear(((global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.SwipeItem>)this));
		}

		bool global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.SwipeItem>.Contains(global::Microsoft.UI.Xaml.Controls.SwipeItem item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Contains(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.SwipeItem>.CopyTo(
					global::Microsoft.UI.Xaml.Controls.SwipeItem[] array, 
					int arrayindex)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.CopyTo(
								this, 
								array, 
								arrayindex
							);
		}

		bool global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.SwipeItem>.Remove(global::Microsoft.UI.Xaml.Controls.SwipeItem item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Remove(
								this, 
								item
							);
		}

		global::Microsoft.UI.Xaml.Controls.SwipeItem global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.SwipeItem>.this[int index]
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Indexer_Get(
									((global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.SwipeItem>)this), 
									index
								);
			}
			set
			{
				global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Indexer_Set(
									this, 
									index, 
									value
								);
			}
		}

		int global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.SwipeItem>.IndexOf(global::Microsoft.UI.Xaml.Controls.SwipeItem item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.IndexOf(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.SwipeItem>.Insert(
					int index, 
					global::Microsoft.UI.Xaml.Controls.SwipeItem item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Insert(
								this, 
								index, 
								item
							);
		}

		void global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.SwipeItem>.RemoveAt(int index)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.RemoveAt(
								((global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.SwipeItem>)this), 
								index
							);
		}

		global::System.Collections.Generic.IEnumerator<global::Microsoft.UI.Xaml.Controls.SwipeItem> global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.Controls.SwipeItem>.GetEnumerator()
		{
			global::System.RuntimeTypeHandle dummySharedDynamicAdapter = typeof(global::System.Runtime.InteropServices.WindowsRuntime.IIterableSharedReferenceTypesDynamicAdapter<global::Microsoft.UI.Xaml.Controls.SwipeItem>).TypeHandle;
			return (global::System.Collections.Generic.IEnumerator<global::Microsoft.UI.Xaml.Controls.SwipeItem>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.Controls.SwipeItem>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Microsoft.UI.Xaml.Controls.SwipeItem>).TypeHandle
							);
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public SwipeItems() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ISwipeItemsFactory_CreateInstance("Microsoft.UI.Xaml.Controls.SwipeItems");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__ISwipeItemsFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.SwipeItems).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.ISwipeItemsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ISwipeItemsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.ISwipeItemsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ISwipeItemsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Mode")]
		public virtual global::Microsoft.UI.Xaml.Controls.SwipeMode get_Mode()
		{
			global::Microsoft.UI.Xaml.Controls.SwipeMode __retVal = global::Microsoft.UI.Xaml.Controls.ISwipeItems__Impl.Stubs.get_Mode(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Mode")]
		public virtual void put_Mode(global::Microsoft.UI.Xaml.Controls.SwipeMode value)
		{
			global::Microsoft.UI.Xaml.Controls.ISwipeItems__Impl.Stubs.put_Mode(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ModeProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ModeProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ISwipeItemsStatics_get_ModeProperty("Microsoft.UI.Xaml.Controls.SwipeItems");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ISwipeItemsStatics_get_ModeProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ISwipeItemsStatics__Impl.Stubs.get_ModeProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ISwipeItemsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public SwipeItems(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ISwipeItem))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class SwipeItem : global::Windows.UI.Xaml.DependencyObject, global::Microsoft.UI.Xaml.Controls.ISwipeItem
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public SwipeItem() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ISwipeItemFactory_CreateInstance("Microsoft.UI.Xaml.Controls.SwipeItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__ISwipeItemFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.SwipeItem).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.ISwipeItemFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ISwipeItemFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.ISwipeItemFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ISwipeItemFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Text")]
		public virtual string get_Text()
		{
			string __retVal = global::Microsoft.UI.Xaml.Controls.ISwipeItem__Impl.Stubs.get_Text(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Text")]
		public virtual void put_Text(string value)
		{
			global::Microsoft.UI.Xaml.Controls.ISwipeItem__Impl.Stubs.put_Text(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconSource")]
		public virtual global::Microsoft.UI.Xaml.Controls.IconSource get_IconSource()
		{
			global::Microsoft.UI.Xaml.Controls.IconSource __retVal = global::Microsoft.UI.Xaml.Controls.ISwipeItem__Impl.Stubs.get_IconSource(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IconSource")]
		public virtual void put_IconSource(global::Microsoft.UI.Xaml.Controls.IconSource value)
		{
			global::Microsoft.UI.Xaml.Controls.ISwipeItem__Impl.Stubs.put_IconSource(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Background")]
		public virtual global::Windows.UI.Xaml.Media.Brush get_Background()
		{
			global::Windows.UI.Xaml.Media.Brush __retVal = global::Microsoft.UI.Xaml.Controls.ISwipeItem__Impl.Stubs.get_Background(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Background")]
		public virtual void put_Background(global::Windows.UI.Xaml.Media.Brush value)
		{
			global::Microsoft.UI.Xaml.Controls.ISwipeItem__Impl.Stubs.put_Background(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Foreground")]
		public virtual global::Windows.UI.Xaml.Media.Brush get_Foreground()
		{
			global::Windows.UI.Xaml.Media.Brush __retVal = global::Microsoft.UI.Xaml.Controls.ISwipeItem__Impl.Stubs.get_Foreground(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Foreground")]
		public virtual void put_Foreground(global::Windows.UI.Xaml.Media.Brush value)
		{
			global::Microsoft.UI.Xaml.Controls.ISwipeItem__Impl.Stubs.put_Foreground(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Command")]
		public virtual global::System.Windows.Input.ICommand get_Command()
		{
			global::System.Windows.Input.ICommand __retVal = global::Microsoft.UI.Xaml.Controls.ISwipeItem__Impl.Stubs.get_Command(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Command")]
		public virtual void put_Command(global::System.Windows.Input.ICommand value)
		{
			global::Microsoft.UI.Xaml.Controls.ISwipeItem__Impl.Stubs.put_Command(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CommandParameter")]
		public virtual object get_CommandParameter()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ISwipeItem__Impl.Stubs.get_CommandParameter(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CommandParameter")]
		public virtual void put_CommandParameter(object value)
		{
			global::Microsoft.UI.Xaml.Controls.ISwipeItem__Impl.Stubs.put_CommandParameter(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BehaviorOnInvoked")]
		public virtual global::Microsoft.UI.Xaml.Controls.SwipeBehaviorOnInvoked get_BehaviorOnInvoked()
		{
			global::Microsoft.UI.Xaml.Controls.SwipeBehaviorOnInvoked __retVal = global::Microsoft.UI.Xaml.Controls.ISwipeItem__Impl.Stubs.get_BehaviorOnInvoked(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BehaviorOnInvoked")]
		public virtual void put_BehaviorOnInvoked(global::Microsoft.UI.Xaml.Controls.SwipeBehaviorOnInvoked value)
		{
			global::Microsoft.UI.Xaml.Controls.ISwipeItem__Impl.Stubs.put_BehaviorOnInvoked(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Invoked")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Invoked(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SwipeItem, global::Microsoft.UI.Xaml.Controls.SwipeItemInvokedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ISwipeItem__Impl.Stubs.add_Invoked(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Invoked")]
		public virtual void remove_Invoked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ISwipeItem__Impl.Stubs.remove_Invoked(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconSourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IconSourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ISwipeItemStatics_get_IconSourceProperty("Microsoft.UI.Xaml.Controls.SwipeItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ISwipeItemStatics_get_IconSourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ISwipeItemStatics__Impl.Stubs.get_IconSourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ISwipeItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TextProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TextProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ISwipeItemStatics_get_TextProperty("Microsoft.UI.Xaml.Controls.SwipeItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ISwipeItemStatics_get_TextProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ISwipeItemStatics__Impl.Stubs.get_TextProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ISwipeItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BackgroundProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_BackgroundProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ISwipeItemStatics_get_BackgroundProperty("Microsoft.UI.Xaml.Controls.SwipeItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ISwipeItemStatics_get_BackgroundProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ISwipeItemStatics__Impl.Stubs.get_BackgroundProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ISwipeItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ForegroundProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ForegroundProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ISwipeItemStatics_get_ForegroundProperty("Microsoft.UI.Xaml.Controls.SwipeItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ISwipeItemStatics_get_ForegroundProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ISwipeItemStatics__Impl.Stubs.get_ForegroundProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ISwipeItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CommandProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CommandProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ISwipeItemStatics_get_CommandProperty("Microsoft.UI.Xaml.Controls.SwipeItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ISwipeItemStatics_get_CommandProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ISwipeItemStatics__Impl.Stubs.get_CommandProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ISwipeItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CommandParameterProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CommandParameterProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ISwipeItemStatics_get_CommandParameterProperty("Microsoft.UI.Xaml.Controls.SwipeItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ISwipeItemStatics_get_CommandParameterProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ISwipeItemStatics__Impl.Stubs.get_CommandParameterProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ISwipeItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BehaviorOnInvokedProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_BehaviorOnInvokedProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ISwipeItemStatics_get_BehaviorOnInvokedProperty("Microsoft.UI.Xaml.Controls.SwipeItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ISwipeItemStatics_get_BehaviorOnInvokedProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ISwipeItemStatics__Impl.Stubs.get_BehaviorOnInvokedProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ISwipeItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public SwipeItem(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ISwipeItemInvokedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SwipeItemInvokedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.ISwipeItemInvokedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SwipeControl")]
		public global::Microsoft.UI.Xaml.Controls.SwipeControl get_SwipeControl()
		{
			global::Microsoft.UI.Xaml.Controls.SwipeControl __retVal = global::Microsoft.UI.Xaml.Controls.ISwipeItemInvokedEventArgs__Impl.Stubs.get_SwipeControl(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public SwipeItemInvokedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ISymbolIconSource))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class SymbolIconSource : global::Microsoft.UI.Xaml.Controls.IconSource, global::Microsoft.UI.Xaml.Controls.ISymbolIconSource
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public SymbolIconSource() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ISymbolIconSourceFactory_CreateInstance("Microsoft.UI.Xaml.Controls.SymbolIconSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__ISymbolIconSourceFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.SymbolIconSource).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.ISymbolIconSourceFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ISymbolIconSourceFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.ISymbolIconSourceFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ISymbolIconSourceFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Symbol")]
		public virtual global::Windows.UI.Xaml.Controls.Symbol get_Symbol()
		{
			global::Windows.UI.Xaml.Controls.Symbol __retVal = global::Microsoft.UI.Xaml.Controls.ISymbolIconSource__Impl.Stubs.get_Symbol(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Symbol")]
		public virtual void put_Symbol(global::Windows.UI.Xaml.Controls.Symbol value)
		{
			global::Microsoft.UI.Xaml.Controls.ISymbolIconSource__Impl.Stubs.put_Symbol(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SymbolProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SymbolProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ISymbolIconSourceStatics_get_SymbolProperty("Microsoft.UI.Xaml.Controls.SymbolIconSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ISymbolIconSourceStatics_get_SymbolProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ISymbolIconSourceStatics__Impl.Stubs.get_SymbolProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ISymbolIconSourceStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public SymbolIconSource(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITextCommandBarFlyout))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class TextCommandBarFlyout : global::Microsoft.UI.Xaml.Controls.CommandBarFlyout, global::Microsoft.UI.Xaml.Controls.ITextCommandBarFlyout
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public TextCommandBarFlyout() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITextCommandBarFlyoutFactory_CreateInstance("Microsoft.UI.Xaml.Controls.TextCommandBarFlyout");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__ITextCommandBarFlyoutFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.TextCommandBarFlyout).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.ITextCommandBarFlyoutFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITextCommandBarFlyoutFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.ITextCommandBarFlyoutFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITextCommandBarFlyoutFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public TextCommandBarFlyout(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITreeView))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITreeView2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class TreeView : global::Windows.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.ITreeView, global::Microsoft.UI.Xaml.Controls.ITreeView2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public TreeView() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewFactory_CreateInstance("Microsoft.UI.Xaml.Controls.TreeView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__ITreeViewFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.TreeView).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.ITreeViewFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.ITreeViewFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RootNodes")]
		public virtual global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode> get_RootNodes()
		{
			global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode> __retVal = global::Microsoft.UI.Xaml.Controls.ITreeView__Impl.Stubs.get_RootNodes(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionMode")]
		public virtual global::Microsoft.UI.Xaml.Controls.TreeViewSelectionMode get_SelectionMode()
		{
			global::Microsoft.UI.Xaml.Controls.TreeViewSelectionMode __retVal = global::Microsoft.UI.Xaml.Controls.ITreeView__Impl.Stubs.get_SelectionMode(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectionMode")]
		public virtual void put_SelectionMode(global::Microsoft.UI.Xaml.Controls.TreeViewSelectionMode value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeView__Impl.Stubs.put_SelectionMode(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedNodes")]
		public virtual global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode> get_SelectedNodes()
		{
			global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode> __retVal = global::Microsoft.UI.Xaml.Controls.ITreeView__Impl.Stubs.get_SelectedNodes(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual void Expand(global::Microsoft.UI.Xaml.Controls.TreeViewNode value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeView__Impl.Stubs.Expand(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void Collapse(global::Microsoft.UI.Xaml.Controls.TreeViewNode value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeView__Impl.Stubs.Collapse(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void SelectAll()
		{
			global::Microsoft.UI.Xaml.Controls.ITreeView__Impl.Stubs.SelectAll(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ItemInvoked")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ItemInvoked(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ITreeView__Impl.Stubs.add_ItemInvoked(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ItemInvoked")]
		public virtual void remove_ItemInvoked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeView__Impl.Stubs.remove_ItemInvoked(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Expanding")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Expanding(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ITreeView__Impl.Stubs.add_Expanding(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Expanding")]
		public virtual void remove_Expanding(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeView__Impl.Stubs.remove_Expanding(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Collapsed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Collapsed(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ITreeView__Impl.Stubs.add_Collapsed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Collapsed")]
		public virtual void remove_Collapsed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeView__Impl.Stubs.remove_Collapsed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual global::Microsoft.UI.Xaml.Controls.TreeViewNode NodeFromContainer(global::Windows.UI.Xaml.DependencyObject container)
		{
			global::Microsoft.UI.Xaml.Controls.TreeViewNode __retVal = global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.NodeFromContainer(
								this, 
								container
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual global::Windows.UI.Xaml.DependencyObject ContainerFromNode(global::Microsoft.UI.Xaml.Controls.TreeViewNode node)
		{
			global::Windows.UI.Xaml.DependencyObject __retVal = global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.ContainerFromNode(
								this, 
								node
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual object ItemFromContainer(global::Windows.UI.Xaml.DependencyObject container)
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.ItemFromContainer(
								this, 
								container
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual global::Windows.UI.Xaml.DependencyObject ContainerFromItem(object item)
		{
			global::Windows.UI.Xaml.DependencyObject __retVal = global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.ContainerFromItem(
								this, 
								item
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanDragItems")]
		public virtual bool get_CanDragItems()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.get_CanDragItems(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CanDragItems")]
		public virtual void put_CanDragItems(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.put_CanDragItems(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanReorderItems")]
		public virtual bool get_CanReorderItems()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.get_CanReorderItems(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CanReorderItems")]
		public virtual void put_CanReorderItems(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.put_CanReorderItems(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemTemplate")]
		public virtual global::Windows.UI.Xaml.DataTemplate get_ItemTemplate()
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.get_ItemTemplate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemTemplate")]
		public virtual void put_ItemTemplate(global::Windows.UI.Xaml.DataTemplate value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.put_ItemTemplate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemTemplateSelector")]
		public virtual global::Windows.UI.Xaml.Controls.DataTemplateSelector get_ItemTemplateSelector()
		{
			global::Windows.UI.Xaml.Controls.DataTemplateSelector __retVal = global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.get_ItemTemplateSelector(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemTemplateSelector")]
		public virtual void put_ItemTemplateSelector(global::Windows.UI.Xaml.Controls.DataTemplateSelector value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.put_ItemTemplateSelector(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemContainerStyle")]
		public virtual global::Windows.UI.Xaml.Style get_ItemContainerStyle()
		{
			global::Windows.UI.Xaml.Style __retVal = global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.get_ItemContainerStyle(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemContainerStyle")]
		public virtual void put_ItemContainerStyle(global::Windows.UI.Xaml.Style value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.put_ItemContainerStyle(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemContainerStyleSelector")]
		public virtual global::Windows.UI.Xaml.Controls.StyleSelector get_ItemContainerStyleSelector()
		{
			global::Windows.UI.Xaml.Controls.StyleSelector __retVal = global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.get_ItemContainerStyleSelector(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemContainerStyleSelector")]
		public virtual void put_ItemContainerStyleSelector(global::Windows.UI.Xaml.Controls.StyleSelector value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.put_ItemContainerStyleSelector(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemContainerTransitions")]
		public virtual global::Windows.UI.Xaml.Media.Animation.TransitionCollection get_ItemContainerTransitions()
		{
			global::Windows.UI.Xaml.Media.Animation.TransitionCollection __retVal = global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.get_ItemContainerTransitions(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemContainerTransitions")]
		public virtual void put_ItemContainerTransitions(global::Windows.UI.Xaml.Media.Animation.TransitionCollection value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.put_ItemContainerTransitions(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSource")]
		public virtual object get_ItemsSource()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.get_ItemsSource(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemsSource")]
		public virtual void put_ItemsSource(object value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.put_ItemsSource(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragItemsStarting")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragItemsStarting(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.add_DragItemsStarting(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragItemsStarting")]
		public virtual void remove_DragItemsStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.remove_DragItemsStarting(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragItemsCompleted")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragItemsCompleted(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.add_DragItemsCompleted(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragItemsCompleted")]
		public virtual void remove_DragItemsCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.remove_DragItemsCompleted(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedNode")]
		public virtual global::Microsoft.UI.Xaml.Controls.TreeViewNode get_SelectedNode()
		{
			global::Microsoft.UI.Xaml.Controls.TreeViewNode __retVal = global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.get_SelectedNode(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectedNode")]
		public virtual void put_SelectedNode(global::Microsoft.UI.Xaml.Controls.TreeViewNode value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.put_SelectedNode(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedItem")]
		public virtual object get_SelectedItem()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.get_SelectedItem(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectedItem")]
		public virtual void put_SelectedItem(object value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.put_SelectedItem(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedItems")]
		public virtual global::System.Collections.Generic.IList<object> get_SelectedItems()
		{
			global::System.Collections.Generic.IList<object> __retVal = global::Microsoft.UI.Xaml.Controls.ITreeView2__Impl.Stubs.get_SelectedItems(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanDragItemsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CanDragItemsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewStatics2_get_CanDragItemsProperty("Microsoft.UI.Xaml.Controls.TreeView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewStatics2_get_CanDragItemsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewStatics2__Impl.Stubs.get_CanDragItemsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanReorderItemsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CanReorderItemsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewStatics2_get_CanReorderItemsProperty("Microsoft.UI.Xaml.Controls.TreeView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewStatics2_get_CanReorderItemsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewStatics2__Impl.Stubs.get_CanReorderItemsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemTemplateProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ItemTemplateProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewStatics2_get_ItemTemplateProperty("Microsoft.UI.Xaml.Controls.TreeView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewStatics2_get_ItemTemplateProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewStatics2__Impl.Stubs.get_ItemTemplateProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemTemplateSelectorProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ItemTemplateSelectorProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewStatics2_get_ItemTemplateSelectorProperty("Microsoft.UI.Xaml.Controls.TreeView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewStatics2_get_ItemTemplateSelectorProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewStatics2__Impl.Stubs.get_ItemTemplateSelectorProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemContainerStyleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ItemContainerStyleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewStatics2_get_ItemContainerStyleProperty("Microsoft.UI.Xaml.Controls.TreeView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewStatics2_get_ItemContainerStyleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewStatics2__Impl.Stubs.get_ItemContainerStyleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemContainerStyleSelectorProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ItemContainerStyleSelectorProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewStatics2_get_ItemContainerStyleSelectorProperty("Microsoft.UI.Xaml.Controls.TreeView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewStatics2_get_ItemContainerStyleSelectorProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewStatics2__Impl.Stubs.get_ItemContainerStyleSelectorProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemContainerTransitionsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ItemContainerTransitionsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewStatics2_get_ItemContainerTransitionsProperty("Microsoft.UI.Xaml.Controls.TreeView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewStatics2_get_ItemContainerTransitionsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewStatics2__Impl.Stubs.get_ItemContainerTransitionsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ItemsSourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewStatics2_get_ItemsSourceProperty("Microsoft.UI.Xaml.Controls.TreeView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewStatics2_get_ItemsSourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewStatics2__Impl.Stubs.get_ItemsSourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedItemProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SelectedItemProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewStatics_get_SelectedItemProperty("Microsoft.UI.Xaml.Controls.TreeView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewStatics_get_SelectedItemProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewStatics__Impl.Stubs.get_SelectedItemProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionModeProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SelectionModeProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewStatics_get_SelectionModeProperty("Microsoft.UI.Xaml.Controls.TreeView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewStatics_get_SelectionModeProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewStatics__Impl.Stubs.get_SelectionModeProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public TreeView(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewNode))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class TreeViewNode : global::Windows.UI.Xaml.DependencyObject, global::Microsoft.UI.Xaml.Controls.ITreeViewNode
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public TreeViewNode() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewNodeFactory_CreateInstance("Microsoft.UI.Xaml.Controls.TreeViewNode");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__ITreeViewNodeFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.ITreeViewNodeFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewNodeFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.ITreeViewNodeFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewNodeFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		public virtual object get_Content()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewNode__Impl.Stubs.get_Content(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		public virtual void put_Content(object value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeViewNode__Impl.Stubs.put_Content(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Parent")]
		public virtual global::Microsoft.UI.Xaml.Controls.TreeViewNode get_Parent()
		{
			global::Microsoft.UI.Xaml.Controls.TreeViewNode __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewNode__Impl.Stubs.get_Parent(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsExpanded")]
		public virtual bool get_IsExpanded()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewNode__Impl.Stubs.get_IsExpanded(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsExpanded")]
		public virtual void put_IsExpanded(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeViewNode__Impl.Stubs.put_IsExpanded(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasChildren")]
		public virtual bool get_HasChildren()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewNode__Impl.Stubs.get_HasChildren(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Depth")]
		public virtual int get_Depth()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewNode__Impl.Stubs.get_Depth(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasUnrealizedChildren")]
		public virtual bool get_HasUnrealizedChildren()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewNode__Impl.Stubs.get_HasUnrealizedChildren(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HasUnrealizedChildren")]
		public virtual void put_HasUnrealizedChildren(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeViewNode__Impl.Stubs.put_HasUnrealizedChildren(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Children")]
		public virtual global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode> get_Children()
		{
			global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode> __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewNode__Impl.Stubs.get_Children(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ContentProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewNodeStatics_get_ContentProperty("Microsoft.UI.Xaml.Controls.TreeViewNode");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewNodeStatics_get_ContentProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewNodeStatics__Impl.Stubs.get_ContentProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewNodeStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DepthProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_DepthProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewNodeStatics_get_DepthProperty("Microsoft.UI.Xaml.Controls.TreeViewNode");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewNodeStatics_get_DepthProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewNodeStatics__Impl.Stubs.get_DepthProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewNodeStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsExpandedProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsExpandedProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewNodeStatics_get_IsExpandedProperty("Microsoft.UI.Xaml.Controls.TreeViewNode");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewNodeStatics_get_IsExpandedProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewNodeStatics__Impl.Stubs.get_IsExpandedProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewNodeStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasChildrenProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HasChildrenProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITreeViewNodeStatics_get_HasChildrenProperty("Microsoft.UI.Xaml.Controls.TreeViewNode");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITreeViewNodeStatics_get_HasChildrenProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITreeViewNodeStatics__Impl.Stubs.get_HasChildrenProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewNodeStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public TreeViewNode(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewItemInvokedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TreeViewItemInvokedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.ITreeViewItemInvokedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InvokedItem")]
		public object get_InvokedItem()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItemInvokedEventArgs__Impl.Stubs.get_InvokedItem(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Handled")]
		public void put_Handled(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeViewItemInvokedEventArgs__Impl.Stubs.put_Handled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Handled")]
		public bool get_Handled()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewItemInvokedEventArgs__Impl.Stubs.get_Handled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public TreeViewItemInvokedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewExpandingEventArgs))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewExpandingEventArgs2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TreeViewExpandingEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.ITreeViewExpandingEventArgs, global::Microsoft.UI.Xaml.Controls.ITreeViewExpandingEventArgs2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Node")]
		public global::Microsoft.UI.Xaml.Controls.TreeViewNode get_Node()
		{
			global::Microsoft.UI.Xaml.Controls.TreeViewNode __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewExpandingEventArgs__Impl.Stubs.get_Node(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Item")]
		public object get_Item()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewExpandingEventArgs2__Impl.Stubs.get_Item(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public TreeViewExpandingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewCollapsedEventArgs))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewCollapsedEventArgs2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TreeViewCollapsedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.ITreeViewCollapsedEventArgs, global::Microsoft.UI.Xaml.Controls.ITreeViewCollapsedEventArgs2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Node")]
		public global::Microsoft.UI.Xaml.Controls.TreeViewNode get_Node()
		{
			global::Microsoft.UI.Xaml.Controls.TreeViewNode __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewCollapsedEventArgs__Impl.Stubs.get_Node(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Item")]
		public object get_Item()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewCollapsedEventArgs2__Impl.Stubs.get_Item(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public TreeViewCollapsedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewDragItemsStartingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TreeViewDragItemsStartingEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.ITreeViewDragItemsStartingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cancel")]
		public bool get_Cancel()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewDragItemsStartingEventArgs__Impl.Stubs.get_Cancel(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Cancel")]
		public void put_Cancel(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.ITreeViewDragItemsStartingEventArgs__Impl.Stubs.put_Cancel(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Data")]
		public global::Windows.ApplicationModel.DataTransfer.DataPackage get_Data()
		{
			global::Windows.ApplicationModel.DataTransfer.DataPackage __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewDragItemsStartingEventArgs__Impl.Stubs.get_Data(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Items")]
		public global::System.Collections.Generic.IList<object> get_Items()
		{
			global::System.Collections.Generic.IList<object> __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewDragItemsStartingEventArgs__Impl.Stubs.get_Items(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public TreeViewDragItemsStartingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewDragItemsCompletedEventArgs))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITreeViewDragItemsCompletedEventArgs2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TreeViewDragItemsCompletedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.ITreeViewDragItemsCompletedEventArgs, global::Microsoft.UI.Xaml.Controls.ITreeViewDragItemsCompletedEventArgs2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DropResult")]
		public global::Windows.ApplicationModel.DataTransfer.DataPackageOperation get_DropResult()
		{
			global::Windows.ApplicationModel.DataTransfer.DataPackageOperation __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewDragItemsCompletedEventArgs__Impl.Stubs.get_DropResult(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Items")]
		public global::System.Collections.Generic.IReadOnlyList<object> get_Items()
		{
			global::System.Collections.Generic.IReadOnlyList<object> __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewDragItemsCompletedEventArgs__Impl.Stubs.get_Items(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NewParentItem")]
		public object get_NewParentItem()
		{
			object __retVal = global::Microsoft.UI.Xaml.Controls.ITreeViewDragItemsCompletedEventArgs2__Impl.Stubs.get_NewParentItem(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public TreeViewDragItemsCompletedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ITwoPaneView))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class TwoPaneView : global::Windows.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.ITwoPaneView
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public TwoPaneView() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITwoPaneViewFactory_CreateInstance("Microsoft.UI.Xaml.Controls.TwoPaneView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__ITwoPaneViewFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.TwoPaneView).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.ITwoPaneViewFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITwoPaneViewFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.ITwoPaneViewFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.ITwoPaneViewFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Pane1")]
		public virtual global::Windows.UI.Xaml.UIElement get_Pane1()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.ITwoPaneView__Impl.Stubs.get_Pane1(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Pane1")]
		public virtual void put_Pane1(global::Windows.UI.Xaml.UIElement value)
		{
			global::Microsoft.UI.Xaml.Controls.ITwoPaneView__Impl.Stubs.put_Pane1(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Pane2")]
		public virtual global::Windows.UI.Xaml.UIElement get_Pane2()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.ITwoPaneView__Impl.Stubs.get_Pane2(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Pane2")]
		public virtual void put_Pane2(global::Windows.UI.Xaml.UIElement value)
		{
			global::Microsoft.UI.Xaml.Controls.ITwoPaneView__Impl.Stubs.put_Pane2(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Pane1Length")]
		public virtual global::Windows.UI.Xaml.GridLength get_Pane1Length()
		{
			global::Windows.UI.Xaml.GridLength __retVal = global::Microsoft.UI.Xaml.Controls.ITwoPaneView__Impl.Stubs.get_Pane1Length(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Pane1Length")]
		public virtual void put_Pane1Length(global::Windows.UI.Xaml.GridLength value)
		{
			global::Microsoft.UI.Xaml.Controls.ITwoPaneView__Impl.Stubs.put_Pane1Length(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Pane2Length")]
		public virtual global::Windows.UI.Xaml.GridLength get_Pane2Length()
		{
			global::Windows.UI.Xaml.GridLength __retVal = global::Microsoft.UI.Xaml.Controls.ITwoPaneView__Impl.Stubs.get_Pane2Length(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Pane2Length")]
		public virtual void put_Pane2Length(global::Windows.UI.Xaml.GridLength value)
		{
			global::Microsoft.UI.Xaml.Controls.ITwoPaneView__Impl.Stubs.put_Pane2Length(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PanePriority")]
		public virtual global::Microsoft.UI.Xaml.Controls.TwoPaneViewPriority get_PanePriority()
		{
			global::Microsoft.UI.Xaml.Controls.TwoPaneViewPriority __retVal = global::Microsoft.UI.Xaml.Controls.ITwoPaneView__Impl.Stubs.get_PanePriority(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PanePriority")]
		public virtual void put_PanePriority(global::Microsoft.UI.Xaml.Controls.TwoPaneViewPriority value)
		{
			global::Microsoft.UI.Xaml.Controls.ITwoPaneView__Impl.Stubs.put_PanePriority(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Mode")]
		public virtual global::Microsoft.UI.Xaml.Controls.TwoPaneViewMode get_Mode()
		{
			global::Microsoft.UI.Xaml.Controls.TwoPaneViewMode __retVal = global::Microsoft.UI.Xaml.Controls.ITwoPaneView__Impl.Stubs.get_Mode(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WideModeConfiguration")]
		public virtual global::Microsoft.UI.Xaml.Controls.TwoPaneViewWideModeConfiguration get_WideModeConfiguration()
		{
			global::Microsoft.UI.Xaml.Controls.TwoPaneViewWideModeConfiguration __retVal = global::Microsoft.UI.Xaml.Controls.ITwoPaneView__Impl.Stubs.get_WideModeConfiguration(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "WideModeConfiguration")]
		public virtual void put_WideModeConfiguration(global::Microsoft.UI.Xaml.Controls.TwoPaneViewWideModeConfiguration value)
		{
			global::Microsoft.UI.Xaml.Controls.ITwoPaneView__Impl.Stubs.put_WideModeConfiguration(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TallModeConfiguration")]
		public virtual global::Microsoft.UI.Xaml.Controls.TwoPaneViewTallModeConfiguration get_TallModeConfiguration()
		{
			global::Microsoft.UI.Xaml.Controls.TwoPaneViewTallModeConfiguration __retVal = global::Microsoft.UI.Xaml.Controls.ITwoPaneView__Impl.Stubs.get_TallModeConfiguration(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TallModeConfiguration")]
		public virtual void put_TallModeConfiguration(global::Microsoft.UI.Xaml.Controls.TwoPaneViewTallModeConfiguration value)
		{
			global::Microsoft.UI.Xaml.Controls.ITwoPaneView__Impl.Stubs.put_TallModeConfiguration(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinWideModeWidth")]
		public virtual double get_MinWideModeWidth()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.ITwoPaneView__Impl.Stubs.get_MinWideModeWidth(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinWideModeWidth")]
		public virtual void put_MinWideModeWidth(double value)
		{
			global::Microsoft.UI.Xaml.Controls.ITwoPaneView__Impl.Stubs.put_MinWideModeWidth(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinTallModeHeight")]
		public virtual double get_MinTallModeHeight()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.ITwoPaneView__Impl.Stubs.get_MinTallModeHeight(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinTallModeHeight")]
		public virtual void put_MinTallModeHeight(double value)
		{
			global::Microsoft.UI.Xaml.Controls.ITwoPaneView__Impl.Stubs.put_MinTallModeHeight(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ModeChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ModeChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TwoPaneView, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.ITwoPaneView__Impl.Stubs.add_ModeChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ModeChanged")]
		public virtual void remove_ModeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.ITwoPaneView__Impl.Stubs.remove_ModeChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Pane1Property")]
		public static global::Windows.UI.Xaml.DependencyProperty get_Pane1Property()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITwoPaneViewStatics_get_Pane1Property("Microsoft.UI.Xaml.Controls.TwoPaneView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITwoPaneViewStatics_get_Pane1Property(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics__Impl.Stubs.get_Pane1Property(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Pane2Property")]
		public static global::Windows.UI.Xaml.DependencyProperty get_Pane2Property()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITwoPaneViewStatics_get_Pane2Property("Microsoft.UI.Xaml.Controls.TwoPaneView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITwoPaneViewStatics_get_Pane2Property(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics__Impl.Stubs.get_Pane2Property(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Pane1LengthProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_Pane1LengthProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITwoPaneViewStatics_get_Pane1LengthProperty("Microsoft.UI.Xaml.Controls.TwoPaneView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITwoPaneViewStatics_get_Pane1LengthProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics__Impl.Stubs.get_Pane1LengthProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Pane2LengthProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_Pane2LengthProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITwoPaneViewStatics_get_Pane2LengthProperty("Microsoft.UI.Xaml.Controls.TwoPaneView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITwoPaneViewStatics_get_Pane2LengthProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics__Impl.Stubs.get_Pane2LengthProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PanePriorityProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_PanePriorityProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITwoPaneViewStatics_get_PanePriorityProperty("Microsoft.UI.Xaml.Controls.TwoPaneView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITwoPaneViewStatics_get_PanePriorityProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics__Impl.Stubs.get_PanePriorityProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ModeProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ModeProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITwoPaneViewStatics_get_ModeProperty("Microsoft.UI.Xaml.Controls.TwoPaneView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITwoPaneViewStatics_get_ModeProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics__Impl.Stubs.get_ModeProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WideModeConfigurationProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_WideModeConfigurationProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITwoPaneViewStatics_get_WideModeConfigurationProperty("Microsoft.UI.Xaml.Controls.TwoPaneView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITwoPaneViewStatics_get_WideModeConfigurationProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics__Impl.Stubs.get_WideModeConfigurationProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TallModeConfigurationProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TallModeConfigurationProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITwoPaneViewStatics_get_TallModeConfigurationProperty("Microsoft.UI.Xaml.Controls.TwoPaneView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITwoPaneViewStatics_get_TallModeConfigurationProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics__Impl.Stubs.get_TallModeConfigurationProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinWideModeWidthProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MinWideModeWidthProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITwoPaneViewStatics_get_MinWideModeWidthProperty("Microsoft.UI.Xaml.Controls.TwoPaneView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITwoPaneViewStatics_get_MinWideModeWidthProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics__Impl.Stubs.get_MinWideModeWidthProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinTallModeHeightProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MinTallModeHeightProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__ITwoPaneViewStatics_get_MinTallModeHeightProperty("Microsoft.UI.Xaml.Controls.TwoPaneView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__ITwoPaneViewStatics_get_MinTallModeHeightProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics__Impl.Stubs.get_MinTallModeHeightProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.ITwoPaneViewStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public TwoPaneView(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IUniformGridLayout))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class UniformGridLayout : global::Microsoft.UI.Xaml.Controls.VirtualizingLayout, global::Microsoft.UI.Xaml.Controls.IUniformGridLayout
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public UniformGridLayout() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IUniformGridLayoutFactory_CreateInstance("Microsoft.UI.Xaml.Controls.UniformGridLayout");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IUniformGridLayoutFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.UniformGridLayout).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IUniformGridLayoutFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IUniformGridLayoutFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IUniformGridLayoutFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IUniformGridLayoutFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Orientation")]
		public virtual global::Windows.UI.Xaml.Controls.Orientation get_Orientation()
		{
			global::Windows.UI.Xaml.Controls.Orientation __retVal = global::Microsoft.UI.Xaml.Controls.IUniformGridLayout__Impl.Stubs.get_Orientation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Orientation")]
		public virtual void put_Orientation(global::Windows.UI.Xaml.Controls.Orientation value)
		{
			global::Microsoft.UI.Xaml.Controls.IUniformGridLayout__Impl.Stubs.put_Orientation(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinItemWidth")]
		public virtual double get_MinItemWidth()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IUniformGridLayout__Impl.Stubs.get_MinItemWidth(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinItemWidth")]
		public virtual void put_MinItemWidth(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IUniformGridLayout__Impl.Stubs.put_MinItemWidth(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinItemHeight")]
		public virtual double get_MinItemHeight()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IUniformGridLayout__Impl.Stubs.get_MinItemHeight(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinItemHeight")]
		public virtual void put_MinItemHeight(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IUniformGridLayout__Impl.Stubs.put_MinItemHeight(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinRowSpacing")]
		public virtual double get_MinRowSpacing()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IUniformGridLayout__Impl.Stubs.get_MinRowSpacing(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinRowSpacing")]
		public virtual void put_MinRowSpacing(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IUniformGridLayout__Impl.Stubs.put_MinRowSpacing(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinColumnSpacing")]
		public virtual double get_MinColumnSpacing()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.IUniformGridLayout__Impl.Stubs.get_MinColumnSpacing(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinColumnSpacing")]
		public virtual void put_MinColumnSpacing(double value)
		{
			global::Microsoft.UI.Xaml.Controls.IUniformGridLayout__Impl.Stubs.put_MinColumnSpacing(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsJustification")]
		public virtual global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification get_ItemsJustification()
		{
			global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification __retVal = global::Microsoft.UI.Xaml.Controls.IUniformGridLayout__Impl.Stubs.get_ItemsJustification(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemsJustification")]
		public virtual void put_ItemsJustification(global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification value)
		{
			global::Microsoft.UI.Xaml.Controls.IUniformGridLayout__Impl.Stubs.put_ItemsJustification(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsStretch")]
		public virtual global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch get_ItemsStretch()
		{
			global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch __retVal = global::Microsoft.UI.Xaml.Controls.IUniformGridLayout__Impl.Stubs.get_ItemsStretch(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemsStretch")]
		public virtual void put_ItemsStretch(global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch value)
		{
			global::Microsoft.UI.Xaml.Controls.IUniformGridLayout__Impl.Stubs.put_ItemsStretch(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaximumRowsOrColumns")]
		public virtual int get_MaximumRowsOrColumns()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.IUniformGridLayout__Impl.Stubs.get_MaximumRowsOrColumns(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaximumRowsOrColumns")]
		public virtual void put_MaximumRowsOrColumns(int value)
		{
			global::Microsoft.UI.Xaml.Controls.IUniformGridLayout__Impl.Stubs.put_MaximumRowsOrColumns(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OrientationProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_OrientationProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IUniformGridLayoutStatics_get_OrientationProperty("Microsoft.UI.Xaml.Controls.UniformGridLayout");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IUniformGridLayoutStatics_get_OrientationProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IUniformGridLayoutStatics__Impl.Stubs.get_OrientationProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IUniformGridLayoutStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinItemWidthProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MinItemWidthProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IUniformGridLayoutStatics_get_MinItemWidthProperty("Microsoft.UI.Xaml.Controls.UniformGridLayout");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IUniformGridLayoutStatics_get_MinItemWidthProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IUniformGridLayoutStatics__Impl.Stubs.get_MinItemWidthProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IUniformGridLayoutStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinItemHeightProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MinItemHeightProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IUniformGridLayoutStatics_get_MinItemHeightProperty("Microsoft.UI.Xaml.Controls.UniformGridLayout");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IUniformGridLayoutStatics_get_MinItemHeightProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IUniformGridLayoutStatics__Impl.Stubs.get_MinItemHeightProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IUniformGridLayoutStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinRowSpacingProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MinRowSpacingProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IUniformGridLayoutStatics_get_MinRowSpacingProperty("Microsoft.UI.Xaml.Controls.UniformGridLayout");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IUniformGridLayoutStatics_get_MinRowSpacingProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IUniformGridLayoutStatics__Impl.Stubs.get_MinRowSpacingProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IUniformGridLayoutStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinColumnSpacingProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MinColumnSpacingProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IUniformGridLayoutStatics_get_MinColumnSpacingProperty("Microsoft.UI.Xaml.Controls.UniformGridLayout");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IUniformGridLayoutStatics_get_MinColumnSpacingProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IUniformGridLayoutStatics__Impl.Stubs.get_MinColumnSpacingProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IUniformGridLayoutStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsJustificationProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ItemsJustificationProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IUniformGridLayoutStatics_get_ItemsJustificationProperty("Microsoft.UI.Xaml.Controls.UniformGridLayout");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IUniformGridLayoutStatics_get_ItemsJustificationProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IUniformGridLayoutStatics__Impl.Stubs.get_ItemsJustificationProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IUniformGridLayoutStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsStretchProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ItemsStretchProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IUniformGridLayoutStatics_get_ItemsStretchProperty("Microsoft.UI.Xaml.Controls.UniformGridLayout");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IUniformGridLayoutStatics_get_ItemsStretchProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IUniformGridLayoutStatics__Impl.Stubs.get_ItemsStretchProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IUniformGridLayoutStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaximumRowsOrColumnsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MaximumRowsOrColumnsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IUniformGridLayoutStatics_get_MaximumRowsOrColumnsProperty("Microsoft.UI.Xaml.Controls.UniformGridLayout");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IUniformGridLayoutStatics_get_MaximumRowsOrColumnsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IUniformGridLayoutStatics__Impl.Stubs.get_MaximumRowsOrColumnsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IUniformGridLayoutStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public UniformGridLayout(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IWebView2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class WebView2 : global::Windows.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.IWebView2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public WebView2() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IWebView2Factory_CreateInstance("Microsoft.UI.Xaml.Controls.WebView2");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls__IWebView2Factory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.WebView2).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.IWebView2Factory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IWebView2Factory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.IWebView2Factory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.IWebView2Factory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CoreWebView2")]
		public virtual global::Microsoft.Web.WebView2.Core.CoreWebView2 get_CoreWebView2()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2 __retVal = global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.get_CoreWebView2(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual global::Windows.Foundation.IAsyncAction EnsureCoreWebView2Async()
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.EnsureCoreWebView2Async(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual global::Windows.Foundation.IAsyncOperation<string> ExecuteScriptAsync(string javascriptCode)
		{
			global::Windows.Foundation.IAsyncOperation<string> __retVal = global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.ExecuteScriptAsync(
								this, 
								javascriptCode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		public virtual global::System.Uri get_Source()
		{
			global::System.Uri __retVal = global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.get_Source(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Source")]
		public virtual void put_Source(global::System.Uri value)
		{
			global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.put_Source(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanGoForward")]
		public virtual bool get_CanGoForward()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.get_CanGoForward(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CanGoForward")]
		public virtual void put_CanGoForward(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.put_CanGoForward(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanGoBack")]
		public virtual bool get_CanGoBack()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.get_CanGoBack(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CanGoBack")]
		public virtual void put_CanGoBack(bool value)
		{
			global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.put_CanGoBack(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void Reload()
		{
			global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.Reload(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void GoForward()
		{
			global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.GoForward(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void GoBack()
		{
			global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.GoBack(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void NavigateToString(string htmlContent)
		{
			global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.NavigateToString(
								this, 
								htmlContent
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void Close()
		{
			global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.Close(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationCompleted")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationCompleted(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.add_NavigationCompleted(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationCompleted")]
		public virtual void remove_NavigationCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.remove_NavigationCompleted(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "WebMessageReceived")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_WebMessageReceived(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.add_WebMessageReceived(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "WebMessageReceived")]
		public virtual void remove_WebMessageReceived(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.remove_WebMessageReceived(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationStarting")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationStarting(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.add_NavigationStarting(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationStarting")]
		public virtual void remove_NavigationStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.remove_NavigationStarting(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CoreProcessFailed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CoreProcessFailed(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.add_CoreProcessFailed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CoreProcessFailed")]
		public virtual void remove_CoreProcessFailed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.remove_CoreProcessFailed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CoreWebView2Initialized")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CoreWebView2Initialized(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.UI.Xaml.Controls.CoreWebView2InitializedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.add_CoreWebView2Initialized(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CoreWebView2Initialized")]
		public virtual void remove_CoreWebView2Initialized(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.IWebView2__Impl.Stubs.remove_CoreWebView2Initialized(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IWebView2Statics_get_SourceProperty("Microsoft.UI.Xaml.Controls.WebView2");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IWebView2Statics_get_SourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IWebView2Statics__Impl.Stubs.get_SourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IWebView2Statics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanGoForwardProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CanGoForwardProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IWebView2Statics_get_CanGoForwardProperty("Microsoft.UI.Xaml.Controls.WebView2");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IWebView2Statics_get_CanGoForwardProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IWebView2Statics__Impl.Stubs.get_CanGoForwardProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IWebView2Statics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanGoBackProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CanGoBackProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls__IWebView2Statics_get_CanGoBackProperty("Microsoft.UI.Xaml.Controls.WebView2");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls__IWebView2Statics_get_CanGoBackProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.IWebView2Statics__Impl.Stubs.get_CanGoBackProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.IWebView2Statics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public WebView2(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.ICoreWebView2InitializedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CoreWebView2InitializedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.ICoreWebView2InitializedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Exception")]
		public global::System.Exception get_Exception()
		{
			global::System.Exception __retVal = global::Microsoft.UI.Xaml.Controls.ICoreWebView2InitializedEventArgs__Impl.Stubs.get_Exception(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2InitializedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IRefreshInteractionRatioChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class RefreshInteractionRatioChangedEventArgs : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IRefreshInteractionRatioChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InteractionRatio")]
		public double get_InteractionRatio()
		{
			global::__Interop.McgHelpers.FailFastForReducedMethod();
			return 0;
		}

		public RefreshInteractionRatioChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IXamlControlsResourcesStatics3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ControlsResourcesVersionProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ControlsResourcesVersionProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IXamlControlsResourcesStatics
	{
		void EnsureRevealLights(global::Windows.UI.Xaml.UIElement element);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IXamlControlsResources
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IXamlControlsResources3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ControlsResourcesVersion")]
		global::Microsoft.UI.Xaml.Controls.ControlsResourcesVersion get_ControlsResourcesVersion();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ControlsResourcesVersion")]
		void put_ControlsResourcesVersion(global::Microsoft.UI.Xaml.Controls.ControlsResourcesVersion value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimatedIconStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StateProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_StateProperty();

		void SetState(
					global::Windows.UI.Xaml.DependencyObject @object, 
					string value);

		string GetState(global::Windows.UI.Xaml.DependencyObject @object);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SourceProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FallbackIconSourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_FallbackIconSourceProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MirroredWhenRightToLeftProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MirroredWhenRightToLeftProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimatedIconFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimatedIcon
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2 get_Source();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Source")]
		void put_Source(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2 value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FallbackIconSource")]
		global::Microsoft.UI.Xaml.Controls.IconSource get_FallbackIconSource();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FallbackIconSource")]
		void put_FallbackIconSource(global::Microsoft.UI.Xaml.Controls.IconSource value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MirroredWhenRightToLeft")]
		bool get_MirroredWhenRightToLeft();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MirroredWhenRightToLeft")]
		void put_MirroredWhenRightToLeft(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimatedVisualSource2 : global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Markers")]
		global::System.Collections.Generic.IReadOnlyDictionary<string, double> get_Markers();

		void SetColorProperty(
					string propertyName, 
					global::Windows.UI.Color value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimatedVisualSource
	{
		global::Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(
					global::Windows.UI.Composition.Compositor compositor, 
					out object diagnostics);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimatedVisual : global::System.IDisposable
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RootVisual")]
		global::Windows.UI.Composition.Visual get_RootVisual();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Size")]
		global::System.Numerics.Vector2 get_Size();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Duration")]
		global::System.TimeSpan get_Duration();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IIconSourceStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ForegroundProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ForegroundProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IIconSource
	{
		global::Windows.UI.Xaml.Controls.IconElement CreateIconElement();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Foreground")]
		global::Windows.UI.Xaml.Media.Brush get_Foreground();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Foreground")]
		void put_Foreground(global::Windows.UI.Xaml.Media.Brush value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBackdropMaterialStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ApplyToRootOrPageBackgroundProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ApplyToRootOrPageBackgroundProperty();

		void SetApplyToRootOrPageBackground(
					global::Windows.UI.Xaml.Controls.Control element, 
					bool value);

		bool GetApplyToRootOrPageBackground(global::Windows.UI.Xaml.Controls.Control element);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBackdropMaterial
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISplitButtonFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISplitButtonStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FlyoutProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_FlyoutProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CommandProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CommandProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CommandParameterProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CommandParameterProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISplitButton
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Flyout")]
		global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase get_Flyout();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Flyout")]
		void put_Flyout(global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Command")]
		global::System.Windows.Input.ICommand get_Command();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Command")]
		void put_Command(global::System.Windows.Input.ICommand value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CommandParameter")]
		object get_CommandParameter();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CommandParameter")]
		void put_CommandParameter(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Click")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Click(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SplitButton, global::Microsoft.UI.Xaml.Controls.SplitButtonClickEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Click")]
		void remove_Click(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISplitButtonClickEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMenuBarFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMenuBarStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ItemsProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMenuBar
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Items")]
		global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.MenuBarItem> get_Items();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMenuBarItemFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMenuBarItemStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TitleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TitleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ItemsProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMenuBarItem
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Title")]
		string get_Title();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Title")]
		void put_Title(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Items")]
		global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.MenuFlyoutItemBase> get_Items();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimatedVisualPlayerFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimatedVisualPlayerStatics2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AnimationOptimizationProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_AnimationOptimizationProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimatedVisualPlayerStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AutoPlayProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_AutoPlayProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DiagnosticsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_DiagnosticsProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DurationProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_DurationProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FallbackContentProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_FallbackContentProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAnimatedVisualLoadedProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsAnimatedVisualLoadedProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPlayingProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsPlayingProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlaybackRateProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PlaybackRateProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SourceProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StretchProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_StretchProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimatedVisualPlayer
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Diagnostics")]
		object get_Diagnostics();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Duration")]
		global::System.TimeSpan get_Duration();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource get_Source();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Source")]
		void put_Source(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FallbackContent")]
		global::Windows.UI.Xaml.DataTemplate get_FallbackContent();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FallbackContent")]
		void put_FallbackContent(global::Windows.UI.Xaml.DataTemplate value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AutoPlay")]
		bool get_AutoPlay();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AutoPlay")]
		void put_AutoPlay(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAnimatedVisualLoaded")]
		bool get_IsAnimatedVisualLoaded();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPlaying")]
		bool get_IsPlaying();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlaybackRate")]
		double get_PlaybackRate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PlaybackRate")]
		void put_PlaybackRate(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ProgressObject")]
		global::Windows.UI.Composition.CompositionObject get_ProgressObject();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Stretch")]
		global::Windows.UI.Xaml.Media.Stretch get_Stretch();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Stretch")]
		void put_Stretch(global::Windows.UI.Xaml.Media.Stretch value);

		void Pause();

		global::Windows.Foundation.IAsyncAction PlayAsync(
					double fromProgress, 
					double toProgress, 
					bool looped);

		void Resume();

		void SetProgress(double progress);

		void Stop();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimatedVisualPlayer2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AnimationOptimization")]
		global::Microsoft.UI.Xaml.Controls.PlayerAnimationOptimization get_AnimationOptimization();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AnimationOptimization")]
		void put_AnimationOptimization(global::Microsoft.UI.Xaml.Controls.PlayerAnimationOptimization value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBreadcrumbBarItemFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBreadcrumbBarItem
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColorChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OldColor")]
		global::Windows.UI.Color get_OldColor();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NewColor")]
		global::Windows.UI.Color get_NewColor();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDropDownButtonFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDropDownButton
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IExpanderFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IExpanderStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HeaderProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplateProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HeaderTemplateProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplateSelectorProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HeaderTemplateSelectorProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsExpandedProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsExpandedProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandDirectionProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ExpandDirectionProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IExpander
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Header")]
		object get_Header();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Header")]
		void put_Header(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplate")]
		global::Windows.UI.Xaml.DataTemplate get_HeaderTemplate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderTemplate")]
		void put_HeaderTemplate(global::Windows.UI.Xaml.DataTemplate value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplateSelector")]
		global::Windows.UI.Xaml.Controls.DataTemplateSelector get_HeaderTemplateSelector();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderTemplateSelector")]
		void put_HeaderTemplateSelector(global::Windows.UI.Xaml.Controls.DataTemplateSelector value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsExpanded")]
		bool get_IsExpanded();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsExpanded")]
		void put_IsExpanded(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandDirection")]
		global::Microsoft.UI.Xaml.Controls.ExpandDirection get_ExpandDirection();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ExpandDirection")]
		void put_ExpandDirection(global::Microsoft.UI.Xaml.Controls.ExpandDirection value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Expanding")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Expanding(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Expander, global::Microsoft.UI.Xaml.Controls.ExpanderExpandingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Expanding")]
		void remove_Expanding(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Collapsed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Collapsed(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Expander, global::Microsoft.UI.Xaml.Controls.ExpanderCollapsedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Collapsed")]
		void remove_Collapsed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettings")]
		global::Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings get_TemplateSettings();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IExpanderExpandingEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IExpanderCollapsedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IExpanderTemplateSettings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentHeight")]
		double get_ContentHeight();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NegativeContentHeight")]
		double get_NegativeContentHeight();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInfoBarFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInfoBarStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsOpenProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsOpenProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TitleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TitleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MessageProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MessageProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SeverityProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SeverityProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconSourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IconSourceProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsIconVisibleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsIconVisibleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsClosableProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsClosableProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonStyleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CloseButtonStyleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonCommandProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CloseButtonCommandProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonCommandParameterProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CloseButtonCommandParameterProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActionButtonProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ActionButtonProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ContentProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentTemplateProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ContentTemplateProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettingsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TemplateSettingsProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInfoBar
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsOpen")]
		bool get_IsOpen();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsOpen")]
		void put_IsOpen(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Title")]
		string get_Title();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Title")]
		void put_Title(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Message")]
		string get_Message();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Message")]
		void put_Message(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Severity")]
		global::Microsoft.UI.Xaml.Controls.InfoBarSeverity get_Severity();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Severity")]
		void put_Severity(global::Microsoft.UI.Xaml.Controls.InfoBarSeverity value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconSource")]
		global::Microsoft.UI.Xaml.Controls.IconSource get_IconSource();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IconSource")]
		void put_IconSource(global::Microsoft.UI.Xaml.Controls.IconSource value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsIconVisible")]
		bool get_IsIconVisible();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsIconVisible")]
		void put_IsIconVisible(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsClosable")]
		bool get_IsClosable();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsClosable")]
		void put_IsClosable(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonStyle")]
		global::Windows.UI.Xaml.Style get_CloseButtonStyle();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CloseButtonStyle")]
		void put_CloseButtonStyle(global::Windows.UI.Xaml.Style value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonCommand")]
		global::System.Windows.Input.ICommand get_CloseButtonCommand();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CloseButtonCommand")]
		void put_CloseButtonCommand(global::System.Windows.Input.ICommand value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonCommandParameter")]
		object get_CloseButtonCommandParameter();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CloseButtonCommandParameter")]
		void put_CloseButtonCommandParameter(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActionButton")]
		global::Windows.UI.Xaml.Controls.Primitives.ButtonBase get_ActionButton();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ActionButton")]
		void put_ActionButton(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		object get_Content();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		void put_Content(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentTemplate")]
		global::Windows.UI.Xaml.DataTemplate get_ContentTemplate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContentTemplate")]
		void put_ContentTemplate(global::Windows.UI.Xaml.DataTemplate value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettings")]
		global::Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings get_TemplateSettings();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CloseButtonClick")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CloseButtonClick(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CloseButtonClick")]
		void remove_CloseButtonClick(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closing")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closing(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, global::Microsoft.UI.Xaml.Controls.InfoBarClosingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closing")]
		void remove_Closing(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closed(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.InfoBar, global::Microsoft.UI.Xaml.Controls.InfoBarClosedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closed")]
		void remove_Closed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInfoBarTemplateSettingsFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInfoBarTemplateSettingsStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconElementProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IconElementProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInfoBarTemplateSettings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconElement")]
		global::Windows.UI.Xaml.Controls.IconElement get_IconElement();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IconElement")]
		void put_IconElement(global::Windows.UI.Xaml.Controls.IconElement value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInfoBarClosingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Reason")]
		global::Microsoft.UI.Xaml.Controls.InfoBarCloseReason get_Reason();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cancel")]
		bool get_Cancel();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Cancel")]
		void put_Cancel(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInfoBarClosedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Reason")]
		global::Microsoft.UI.Xaml.Controls.InfoBarCloseReason get_Reason();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewStatics2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsBackButtonVisibleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsBackButtonVisibleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsBackEnabledProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsBackEnabledProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneTitleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PaneTitleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneDisplayModeProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PaneDisplayModeProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneHeaderProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PaneHeaderProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneCustomContentProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PaneCustomContentProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentOverlayProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ContentOverlayProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPaneVisibleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsPaneVisibleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionFollowsFocusProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SelectionFollowsFocusProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettingsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TemplateSettingsProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShoulderNavigationEnabledProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ShoulderNavigationEnabledProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OverflowLabelModeProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_OverflowLabelModeProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPaneOpenProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsPaneOpenProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CompactModeThresholdWidthProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CompactModeThresholdWidthProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandedModeThresholdWidthProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ExpandedModeThresholdWidthProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FooterMenuItemsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_FooterMenuItemsProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FooterMenuItemsSourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_FooterMenuItemsSourceProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneFooterProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PaneFooterProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HeaderProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplateProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HeaderTemplateProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayModeProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_DisplayModeProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSettingsVisibleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsSettingsVisibleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPaneToggleButtonVisibleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsPaneToggleButtonVisibleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AlwaysShowHeaderProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_AlwaysShowHeaderProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CompactPaneLengthProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CompactPaneLengthProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OpenPaneLengthProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_OpenPaneLengthProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneToggleButtonStyleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PaneToggleButtonStyleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MenuItemsProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemsSourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MenuItemsSourceProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedItemProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SelectedItemProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SettingsItemProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SettingsItemProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AutoSuggestBoxProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_AutoSuggestBoxProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemTemplateProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MenuItemTemplateProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemTemplateSelectorProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MenuItemTemplateSelectorProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemContainerStyleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MenuItemContainerStyleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemContainerStyleSelectorProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MenuItemContainerStyleSelectorProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsTitleBarAutoPaddingEnabledProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsTitleBarAutoPaddingEnabledProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationView
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPaneOpen")]
		bool get_IsPaneOpen();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsPaneOpen")]
		void put_IsPaneOpen(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CompactModeThresholdWidth")]
		double get_CompactModeThresholdWidth();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CompactModeThresholdWidth")]
		void put_CompactModeThresholdWidth(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandedModeThresholdWidth")]
		double get_ExpandedModeThresholdWidth();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ExpandedModeThresholdWidth")]
		void put_ExpandedModeThresholdWidth(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FooterMenuItems")]
		global::System.Collections.Generic.IList<object> get_FooterMenuItems();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FooterMenuItemsSource")]
		object get_FooterMenuItemsSource();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FooterMenuItemsSource")]
		void put_FooterMenuItemsSource(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneFooter")]
		global::Windows.UI.Xaml.UIElement get_PaneFooter();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PaneFooter")]
		void put_PaneFooter(global::Windows.UI.Xaml.UIElement value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Header")]
		object get_Header();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Header")]
		void put_Header(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplate")]
		global::Windows.UI.Xaml.DataTemplate get_HeaderTemplate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderTemplate")]
		void put_HeaderTemplate(global::Windows.UI.Xaml.DataTemplate value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayMode")]
		global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode get_DisplayMode();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSettingsVisible")]
		bool get_IsSettingsVisible();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsSettingsVisible")]
		void put_IsSettingsVisible(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPaneToggleButtonVisible")]
		bool get_IsPaneToggleButtonVisible();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsPaneToggleButtonVisible")]
		void put_IsPaneToggleButtonVisible(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AlwaysShowHeader")]
		bool get_AlwaysShowHeader();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AlwaysShowHeader")]
		void put_AlwaysShowHeader(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CompactPaneLength")]
		double get_CompactPaneLength();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CompactPaneLength")]
		void put_CompactPaneLength(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OpenPaneLength")]
		double get_OpenPaneLength();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "OpenPaneLength")]
		void put_OpenPaneLength(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneToggleButtonStyle")]
		global::Windows.UI.Xaml.Style get_PaneToggleButtonStyle();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PaneToggleButtonStyle")]
		void put_PaneToggleButtonStyle(global::Windows.UI.Xaml.Style value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedItem")]
		object get_SelectedItem();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectedItem")]
		void put_SelectedItem(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItems")]
		global::System.Collections.Generic.IList<object> get_MenuItems();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemsSource")]
		object get_MenuItemsSource();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MenuItemsSource")]
		void put_MenuItemsSource(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SettingsItem")]
		object get_SettingsItem();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AutoSuggestBox")]
		global::Windows.UI.Xaml.Controls.AutoSuggestBox get_AutoSuggestBox();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AutoSuggestBox")]
		void put_AutoSuggestBox(global::Windows.UI.Xaml.Controls.AutoSuggestBox value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemTemplate")]
		global::Windows.UI.Xaml.DataTemplate get_MenuItemTemplate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MenuItemTemplate")]
		void put_MenuItemTemplate(global::Windows.UI.Xaml.DataTemplate value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemTemplateSelector")]
		global::Windows.UI.Xaml.Controls.DataTemplateSelector get_MenuItemTemplateSelector();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MenuItemTemplateSelector")]
		void put_MenuItemTemplateSelector(global::Windows.UI.Xaml.Controls.DataTemplateSelector value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemContainerStyle")]
		global::Windows.UI.Xaml.Style get_MenuItemContainerStyle();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MenuItemContainerStyle")]
		void put_MenuItemContainerStyle(global::Windows.UI.Xaml.Style value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemContainerStyleSelector")]
		global::Windows.UI.Xaml.Controls.StyleSelector get_MenuItemContainerStyleSelector();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MenuItemContainerStyleSelector")]
		void put_MenuItemContainerStyleSelector(global::Windows.UI.Xaml.Controls.StyleSelector value);

		object MenuItemFromContainer(global::Windows.UI.Xaml.DependencyObject container);

		global::Windows.UI.Xaml.DependencyObject ContainerFromMenuItem(object item);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SelectionChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SelectionChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SelectionChanged")]
		void remove_SelectionChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ItemInvoked")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ItemInvoked(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ItemInvoked")]
		void remove_ItemInvoked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DisplayModeChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DisplayModeChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayModeChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DisplayModeChanged")]
		void remove_DisplayModeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsTitleBarAutoPaddingEnabled")]
		bool get_IsTitleBarAutoPaddingEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsTitleBarAutoPaddingEnabled")]
		void put_IsTitleBarAutoPaddingEnabled(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewSelectionChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedItem")]
		object get_SelectedItem();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSettingsSelected")]
		bool get_IsSettingsSelected();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewSelectionChangedEventArgs2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedItemContainer")]
		global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase get_SelectedItemContainer();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RecommendedNavigationTransitionInfo")]
		global::Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo get_RecommendedNavigationTransitionInfo();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemBaseStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSelectedProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsSelectedProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemBase
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemBase2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSelected")]
		bool get_IsSelected();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsSelected")]
		void put_IsSelected(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemInvokedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InvokedItem")]
		object get_InvokedItem();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSettingsInvoked")]
		bool get_IsSettingsInvoked();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemInvokedEventArgs2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InvokedItemContainer")]
		global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase get_InvokedItemContainer();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RecommendedNavigationTransitionInfo")]
		global::Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo get_RecommendedNavigationTransitionInfo();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewDisplayModeChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayMode")]
		global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode get_DisplayMode();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationView2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsBackButtonVisible")]
		global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible get_IsBackButtonVisible();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsBackButtonVisible")]
		void put_IsBackButtonVisible(global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsBackEnabled")]
		bool get_IsBackEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsBackEnabled")]
		void put_IsBackEnabled(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneTitle")]
		string get_PaneTitle();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PaneTitle")]
		void put_PaneTitle(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "BackRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_BackRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewBackRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "BackRequested")]
		void remove_BackRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PaneClosed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PaneClosed(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PaneClosed")]
		void remove_PaneClosed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PaneClosing")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PaneClosing(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewPaneClosingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PaneClosing")]
		void remove_PaneClosing(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PaneOpened")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PaneOpened(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PaneOpened")]
		void remove_PaneOpened(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PaneOpening")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PaneOpening(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PaneOpening")]
		void remove_PaneOpening(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneDisplayMode")]
		global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode get_PaneDisplayMode();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PaneDisplayMode")]
		void put_PaneDisplayMode(global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneHeader")]
		global::Windows.UI.Xaml.UIElement get_PaneHeader();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PaneHeader")]
		void put_PaneHeader(global::Windows.UI.Xaml.UIElement value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneCustomContent")]
		global::Windows.UI.Xaml.UIElement get_PaneCustomContent();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PaneCustomContent")]
		void put_PaneCustomContent(global::Windows.UI.Xaml.UIElement value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentOverlay")]
		global::Windows.UI.Xaml.UIElement get_ContentOverlay();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContentOverlay")]
		void put_ContentOverlay(global::Windows.UI.Xaml.UIElement value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPaneVisible")]
		bool get_IsPaneVisible();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsPaneVisible")]
		void put_IsPaneVisible(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionFollowsFocus")]
		global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus get_SelectionFollowsFocus();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectionFollowsFocus")]
		void put_SelectionFollowsFocus(global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettings")]
		global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings get_TemplateSettings();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShoulderNavigationEnabled")]
		global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled get_ShoulderNavigationEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ShoulderNavigationEnabled")]
		void put_ShoulderNavigationEnabled(global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OverflowLabelMode")]
		global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode get_OverflowLabelMode();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "OverflowLabelMode")]
		void put_OverflowLabelMode(global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Expanding")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Expanding(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemExpandingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Expanding")]
		void remove_Expanding(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Collapsed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Collapsed(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NavigationView, global::Microsoft.UI.Xaml.Controls.NavigationViewItemCollapsedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Collapsed")]
		void remove_Collapsed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		void Expand(global::Microsoft.UI.Xaml.Controls.NavigationViewItem item);

		void Collapse(global::Microsoft.UI.Xaml.Controls.NavigationViewItem item);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewBackRequestedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewPaneClosingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cancel")]
		bool get_Cancel();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Cancel")]
		void put_Cancel(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewTemplateSettingsFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewTemplateSettingsStatics2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OpenPaneLengthProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_OpenPaneLengthProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewTemplateSettingsStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TopPaddingProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TopPaddingProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OverflowButtonVisibilityProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_OverflowButtonVisibilityProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneToggleButtonVisibilityProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PaneToggleButtonVisibilityProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BackButtonVisibilityProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_BackButtonVisibilityProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TopPaneVisibilityProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TopPaneVisibilityProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LeftPaneVisibilityProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_LeftPaneVisibilityProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SingleSelectionFollowsFocusProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SingleSelectionFollowsFocusProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneToggleButtonWidthProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PaneToggleButtonWidthProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SmallerPaneToggleButtonWidthProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SmallerPaneToggleButtonWidthProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewTemplateSettings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TopPadding")]
		double get_TopPadding();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OverflowButtonVisibility")]
		global::Windows.UI.Xaml.Visibility get_OverflowButtonVisibility();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneToggleButtonVisibility")]
		global::Windows.UI.Xaml.Visibility get_PaneToggleButtonVisibility();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BackButtonVisibility")]
		global::Windows.UI.Xaml.Visibility get_BackButtonVisibility();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TopPaneVisibility")]
		global::Windows.UI.Xaml.Visibility get_TopPaneVisibility();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LeftPaneVisibility")]
		global::Windows.UI.Xaml.Visibility get_LeftPaneVisibility();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SingleSelectionFollowsFocus")]
		bool get_SingleSelectionFollowsFocus();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaneToggleButtonWidth")]
		double get_PaneToggleButtonWidth();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SmallerPaneToggleButtonWidth")]
		double get_SmallerPaneToggleButtonWidth();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewTemplateSettings2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OpenPaneLength")]
		double get_OpenPaneLength();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemExpandingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandingItemContainer")]
		global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase get_ExpandingItemContainer();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandingItem")]
		object get_ExpandingItem();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemCollapsedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CollapsedItemContainer")]
		global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase get_CollapsedItemContainer();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CollapsedItem")]
		object get_CollapsedItem();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemStatics2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectsOnInvokedProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SelectsOnInvokedProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsExpandedProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsExpandedProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasUnrealizedChildrenProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HasUnrealizedChildrenProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsChildSelectedProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsChildSelectedProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MenuItemsProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemsSourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MenuItemsSourceProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IconProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CompactPaneLengthProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CompactPaneLengthProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemStatics3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InfoBadgeProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_InfoBadgeProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItem
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Icon")]
		global::Windows.UI.Xaml.Controls.IconElement get_Icon();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Icon")]
		void put_Icon(global::Windows.UI.Xaml.Controls.IconElement value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CompactPaneLength")]
		double get_CompactPaneLength();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItem2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectsOnInvoked")]
		bool get_SelectsOnInvoked();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectsOnInvoked")]
		void put_SelectsOnInvoked(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsExpanded")]
		bool get_IsExpanded();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsExpanded")]
		void put_IsExpanded(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasUnrealizedChildren")]
		bool get_HasUnrealizedChildren();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HasUnrealizedChildren")]
		void put_HasUnrealizedChildren(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsChildSelected")]
		bool get_IsChildSelected();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsChildSelected")]
		void put_IsChildSelected(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItems")]
		global::System.Collections.Generic.IList<object> get_MenuItems();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItemsSource")]
		object get_MenuItemsSource();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MenuItemsSource")]
		void put_MenuItemsSource(object value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItem3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InfoBadge")]
		global::Microsoft.UI.Xaml.Controls.InfoBadge get_InfoBadge();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "InfoBadge")]
		void put_InfoBadge(global::Microsoft.UI.Xaml.Controls.InfoBadge value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInfoBadgeFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInfoBadgeStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValueProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ValueProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconSourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IconSourceProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettingsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TemplateSettingsProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInfoBadge
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Value")]
		int get_Value();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Value")]
		void put_Value(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconSource")]
		global::Microsoft.UI.Xaml.Controls.IconSource get_IconSource();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IconSource")]
		void put_IconSource(global::Microsoft.UI.Xaml.Controls.IconSource value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettings")]
		global::Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings get_TemplateSettings();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInfoBadgeTemplateSettingsFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInfoBadgeTemplateSettingsStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InfoBadgeCornerRadiusProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_InfoBadgeCornerRadiusProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconElementProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IconElementProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInfoBadgeTemplateSettings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InfoBadgeCornerRadius")]
		global::Windows.UI.Xaml.CornerRadius get_InfoBadgeCornerRadius();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "InfoBadgeCornerRadius")]
		void put_InfoBadgeCornerRadius(global::Windows.UI.Xaml.CornerRadius value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconElement")]
		global::Windows.UI.Xaml.Controls.IconElement get_IconElement();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IconElement")]
		void put_IconElement(global::Windows.UI.Xaml.Controls.IconElement value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INumberBoxFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INumberBoxStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinimumProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MinimumProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaximumProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MaximumProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValueProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ValueProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SmallChangeProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SmallChangeProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LargeChangeProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_LargeChangeProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TextProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TextProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HeaderProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplateProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HeaderTemplateProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlaceholderTextProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PlaceholderTextProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionFlyoutProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SelectionFlyoutProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionHighlightColorProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SelectionHighlightColorProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TextReadingOrderProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TextReadingOrderProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreventKeyboardDisplayOnProgrammaticFocusProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PreventKeyboardDisplayOnProgrammaticFocusProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DescriptionProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_DescriptionProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValidationModeProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ValidationModeProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SpinButtonPlacementModeProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SpinButtonPlacementModeProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsWrapEnabledProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsWrapEnabledProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AcceptsExpressionProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_AcceptsExpressionProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NumberFormatterProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_NumberFormatterProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INumberBox
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Minimum")]
		double get_Minimum();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Minimum")]
		void put_Minimum(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Maximum")]
		double get_Maximum();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Maximum")]
		void put_Maximum(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Value")]
		double get_Value();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Value")]
		void put_Value(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SmallChange")]
		double get_SmallChange();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SmallChange")]
		void put_SmallChange(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LargeChange")]
		double get_LargeChange();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "LargeChange")]
		void put_LargeChange(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Text")]
		string get_Text();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Text")]
		void put_Text(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Header")]
		object get_Header();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Header")]
		void put_Header(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplate")]
		global::Windows.UI.Xaml.DataTemplate get_HeaderTemplate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderTemplate")]
		void put_HeaderTemplate(global::Windows.UI.Xaml.DataTemplate value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlaceholderText")]
		string get_PlaceholderText();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PlaceholderText")]
		void put_PlaceholderText(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionFlyout")]
		global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase get_SelectionFlyout();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectionFlyout")]
		void put_SelectionFlyout(global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionHighlightColor")]
		global::Windows.UI.Xaml.Media.SolidColorBrush get_SelectionHighlightColor();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectionHighlightColor")]
		void put_SelectionHighlightColor(global::Windows.UI.Xaml.Media.SolidColorBrush value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TextReadingOrder")]
		global::Windows.UI.Xaml.TextReadingOrder get_TextReadingOrder();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TextReadingOrder")]
		void put_TextReadingOrder(global::Windows.UI.Xaml.TextReadingOrder value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreventKeyboardDisplayOnProgrammaticFocus")]
		bool get_PreventKeyboardDisplayOnProgrammaticFocus();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PreventKeyboardDisplayOnProgrammaticFocus")]
		void put_PreventKeyboardDisplayOnProgrammaticFocus(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Description")]
		object get_Description();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Description")]
		void put_Description(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValidationMode")]
		global::Microsoft.UI.Xaml.Controls.NumberBoxValidationMode get_ValidationMode();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ValidationMode")]
		void put_ValidationMode(global::Microsoft.UI.Xaml.Controls.NumberBoxValidationMode value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SpinButtonPlacementMode")]
		global::Microsoft.UI.Xaml.Controls.NumberBoxSpinButtonPlacementMode get_SpinButtonPlacementMode();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SpinButtonPlacementMode")]
		void put_SpinButtonPlacementMode(global::Microsoft.UI.Xaml.Controls.NumberBoxSpinButtonPlacementMode value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsWrapEnabled")]
		bool get_IsWrapEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsWrapEnabled")]
		void put_IsWrapEnabled(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AcceptsExpression")]
		bool get_AcceptsExpression();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AcceptsExpression")]
		void put_AcceptsExpression(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NumberFormatter")]
		global::Windows.Globalization.NumberFormatting.INumberFormatter2 get_NumberFormatter();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "NumberFormatter")]
		void put_NumberFormatter(global::Windows.Globalization.NumberFormatting.INumberFormatter2 value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ValueChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ValueChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.NumberBox, global::Microsoft.UI.Xaml.Controls.NumberBoxValueChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ValueChanged")]
		void remove_ValueChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INumberBoxValueChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OldValue")]
		double get_OldValue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NewValue")]
		double get_NewValue();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPersonPictureFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPersonPictureStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BadgeNumberProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_BadgeNumberProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BadgeGlyphProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_BadgeGlyphProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BadgeImageSourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_BadgeImageSourceProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BadgeTextProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_BadgeTextProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsGroupProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsGroupProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContactProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ContactProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayNameProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_DisplayNameProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InitialsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_InitialsProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreferSmallImageProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PreferSmallImageProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ProfilePictureProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ProfilePictureProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPersonPicture
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BadgeNumber")]
		int get_BadgeNumber();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BadgeNumber")]
		void put_BadgeNumber(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BadgeGlyph")]
		string get_BadgeGlyph();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BadgeGlyph")]
		void put_BadgeGlyph(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BadgeImageSource")]
		global::Windows.UI.Xaml.Media.ImageSource get_BadgeImageSource();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BadgeImageSource")]
		void put_BadgeImageSource(global::Windows.UI.Xaml.Media.ImageSource value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BadgeText")]
		string get_BadgeText();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BadgeText")]
		void put_BadgeText(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsGroup")]
		bool get_IsGroup();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsGroup")]
		void put_IsGroup(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Contact")]
		global::Windows.ApplicationModel.Contacts.Contact get_Contact();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Contact")]
		void put_Contact(global::Windows.ApplicationModel.Contacts.Contact value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		string get_DisplayName();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DisplayName")]
		void put_DisplayName(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Initials")]
		string get_Initials();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Initials")]
		void put_Initials(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreferSmallImage")]
		bool get_PreferSmallImage();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PreferSmallImage")]
		void put_PreferSmallImage(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ProfilePicture")]
		global::Windows.UI.Xaml.Media.ImageSource get_ProfilePicture();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ProfilePicture")]
		void put_ProfilePicture(global::Windows.UI.Xaml.Media.ImageSource value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettings")]
		global::Microsoft.UI.Xaml.Controls.PersonPictureTemplateSettings get_TemplateSettings();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPersonPictureTemplateSettings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActualInitials")]
		string get_ActualInitials();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActualImageBrush")]
		global::Windows.UI.Xaml.Media.ImageBrush get_ActualImageBrush();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPipsPagerFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPipsPagerStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NumberOfPagesProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_NumberOfPagesProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedPageIndexProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SelectedPageIndexProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxVisiblePipsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MaxVisiblePipsProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OrientationProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_OrientationProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousButtonVisibilityProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PreviousButtonVisibilityProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NextButtonVisibilityProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_NextButtonVisibilityProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousButtonStyleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PreviousButtonStyleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NextButtonStyleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_NextButtonStyleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedPipStyleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SelectedPipStyleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NormalPipStyleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_NormalPipStyleProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPipsPager
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NumberOfPages")]
		int get_NumberOfPages();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "NumberOfPages")]
		void put_NumberOfPages(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedPageIndex")]
		int get_SelectedPageIndex();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectedPageIndex")]
		void put_SelectedPageIndex(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxVisiblePips")]
		int get_MaxVisiblePips();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxVisiblePips")]
		void put_MaxVisiblePips(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Orientation")]
		global::Windows.UI.Xaml.Controls.Orientation get_Orientation();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Orientation")]
		void put_Orientation(global::Windows.UI.Xaml.Controls.Orientation value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousButtonVisibility")]
		global::Microsoft.UI.Xaml.Controls.PipsPagerButtonVisibility get_PreviousButtonVisibility();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PreviousButtonVisibility")]
		void put_PreviousButtonVisibility(global::Microsoft.UI.Xaml.Controls.PipsPagerButtonVisibility value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NextButtonVisibility")]
		global::Microsoft.UI.Xaml.Controls.PipsPagerButtonVisibility get_NextButtonVisibility();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "NextButtonVisibility")]
		void put_NextButtonVisibility(global::Microsoft.UI.Xaml.Controls.PipsPagerButtonVisibility value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousButtonStyle")]
		global::Windows.UI.Xaml.Style get_PreviousButtonStyle();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PreviousButtonStyle")]
		void put_PreviousButtonStyle(global::Windows.UI.Xaml.Style value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NextButtonStyle")]
		global::Windows.UI.Xaml.Style get_NextButtonStyle();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "NextButtonStyle")]
		void put_NextButtonStyle(global::Windows.UI.Xaml.Style value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedPipStyle")]
		global::Windows.UI.Xaml.Style get_SelectedPipStyle();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectedPipStyle")]
		void put_SelectedPipStyle(global::Windows.UI.Xaml.Style value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NormalPipStyle")]
		global::Windows.UI.Xaml.Style get_NormalPipStyle();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "NormalPipStyle")]
		void put_NormalPipStyle(global::Windows.UI.Xaml.Style value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SelectedIndexChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SelectedIndexChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.PipsPager, global::Microsoft.UI.Xaml.Controls.PipsPagerSelectedIndexChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SelectedIndexChanged")]
		void remove_SelectedIndexChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettings")]
		global::Microsoft.UI.Xaml.Controls.PipsPagerTemplateSettings get_TemplateSettings();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPipsPagerSelectedIndexChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPipsPagerTemplateSettings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PipsPagerItems")]
		global::System.Collections.Generic.IList<int> get_PipsPagerItems();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IProgressBarFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IProgressBarStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsIndeterminateProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsIndeterminateProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShowErrorProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ShowErrorProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShowPausedProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ShowPausedProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IProgressBar
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsIndeterminate")]
		bool get_IsIndeterminate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsIndeterminate")]
		void put_IsIndeterminate(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShowError")]
		bool get_ShowError();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ShowError")]
		void put_ShowError(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShowPaused")]
		bool get_ShowPaused();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ShowPaused")]
		void put_ShowPaused(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettings")]
		global::Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings get_TemplateSettings();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IProgressBarTemplateSettings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContainerAnimationStartPosition")]
		double get_ContainerAnimationStartPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContainerAnimationEndPosition")]
		double get_ContainerAnimationEndPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Container2AnimationStartPosition")]
		double get_Container2AnimationStartPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Container2AnimationEndPosition")]
		double get_Container2AnimationEndPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContainerAnimationMidPosition")]
		double get_ContainerAnimationMidPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IndicatorLengthDelta")]
		double get_IndicatorLengthDelta();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ClipRect")]
		global::Windows.UI.Xaml.Media.RectangleGeometry get_ClipRect();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "EllipseAnimationEndPosition")]
		double get_EllipseAnimationEndPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "EllipseAnimationWellPosition")]
		double get_EllipseAnimationWellPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "EllipseDiameter")]
		double get_EllipseDiameter();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "EllipseOffset")]
		double get_EllipseOffset();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IProgressRingFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IProgressRingStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsActiveProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsActiveProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsIndeterminateProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsIndeterminateProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValueProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ValueProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinimumProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MinimumProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaximumProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MaximumProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IProgressRing
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsActive")]
		bool get_IsActive();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsActive")]
		void put_IsActive(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsIndeterminate")]
		bool get_IsIndeterminate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsIndeterminate")]
		void put_IsIndeterminate(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettings")]
		global::Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings get_TemplateSettings();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Value")]
		double get_Value();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Value")]
		void put_Value(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Minimum")]
		double get_Minimum();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Minimum")]
		void put_Minimum(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Maximum")]
		double get_Maximum();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Maximum")]
		void put_Maximum(double value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IProgressRingTemplateSettings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "EllipseDiameter")]
		double get_EllipseDiameter();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "EllipseOffset")]
		global::Windows.UI.Xaml.Thickness get_EllipseOffset();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxSideLength")]
		double get_MaxSideLength();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRadioButtonsFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRadioButtonsStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ItemsSourceProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ItemsProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemTemplateProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ItemTemplateProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedIndexProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SelectedIndexProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedItemProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SelectedItemProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxColumnsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MaxColumnsProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HeaderProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplateProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HeaderTemplateProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRadioButtons
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSource")]
		object get_ItemsSource();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemsSource")]
		void put_ItemsSource(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Items")]
		global::System.Collections.Generic.IList<object> get_Items();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemTemplate")]
		object get_ItemTemplate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemTemplate")]
		void put_ItemTemplate(object value);

		global::Windows.UI.Xaml.UIElement ContainerFromIndex(int index);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedIndex")]
		int get_SelectedIndex();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectedIndex")]
		void put_SelectedIndex(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedItem")]
		object get_SelectedItem();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectedItem")]
		void put_SelectedItem(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SelectionChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SelectionChanged(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SelectionChanged")]
		void remove_SelectionChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxColumns")]
		int get_MaxColumns();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxColumns")]
		void put_MaxColumns(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Header")]
		object get_Header();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Header")]
		void put_Header(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplate")]
		global::Windows.UI.Xaml.DataTemplate get_HeaderTemplate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderTemplate")]
		void put_HeaderTemplate(global::Windows.UI.Xaml.DataTemplate value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRatingControlFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRatingControlStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CaptionProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CaptionProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InitialSetValueProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_InitialSetValueProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsClearEnabledProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsClearEnabledProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsReadOnlyProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsReadOnlyProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxRatingProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MaxRatingProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlaceholderValueProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PlaceholderValueProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemInfoProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ItemInfoProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValueProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ValueProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRatingControl
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Caption")]
		string get_Caption();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Caption")]
		void put_Caption(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InitialSetValue")]
		int get_InitialSetValue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "InitialSetValue")]
		void put_InitialSetValue(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsClearEnabled")]
		bool get_IsClearEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsClearEnabled")]
		void put_IsClearEnabled(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsReadOnly")]
		bool get_IsReadOnly();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsReadOnly")]
		void put_IsReadOnly(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxRating")]
		int get_MaxRating();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxRating")]
		void put_MaxRating(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlaceholderValue")]
		double get_PlaceholderValue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PlaceholderValue")]
		void put_PlaceholderValue(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemInfo")]
		global::Microsoft.UI.Xaml.Controls.RatingItemInfo get_ItemInfo();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemInfo")]
		void put_ItemInfo(global::Microsoft.UI.Xaml.Controls.RatingItemInfo value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Value")]
		double get_Value();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Value")]
		void put_Value(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ValueChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ValueChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RatingControl, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ValueChanged")]
		void remove_ValueChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRatingItemInfoFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRatingItemInfo
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IItemsRepeaterFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IItemsRepeaterStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ItemsSourceProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemTemplateProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ItemTemplateProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LayoutProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_LayoutProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalCacheLengthProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HorizontalCacheLengthProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalCacheLengthProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_VerticalCacheLengthProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BackgroundProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_BackgroundProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IItemsRepeater
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSource")]
		object get_ItemsSource();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemsSource")]
		void put_ItemsSource(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSourceView")]
		global::Microsoft.UI.Xaml.Controls.ItemsSourceView get_ItemsSourceView();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemTemplate")]
		object get_ItemTemplate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemTemplate")]
		void put_ItemTemplate(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Layout")]
		global::Microsoft.UI.Xaml.Controls.Layout get_Layout();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Layout")]
		void put_Layout(global::Microsoft.UI.Xaml.Controls.Layout value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalCacheLength")]
		double get_HorizontalCacheLength();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalCacheLength")]
		void put_HorizontalCacheLength(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalCacheLength")]
		double get_VerticalCacheLength();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalCacheLength")]
		void put_VerticalCacheLength(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Background")]
		global::Windows.UI.Xaml.Media.Brush get_Background();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Background")]
		void put_Background(global::Windows.UI.Xaml.Media.Brush value);

		int GetElementIndex(global::Windows.UI.Xaml.UIElement element);

		global::Windows.UI.Xaml.UIElement TryGetElement(int index);

		global::Windows.UI.Xaml.UIElement GetOrCreateElement(int index);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ElementPrepared")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ElementPrepared(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementPreparedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ElementPrepared")]
		void remove_ElementPrepared(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ElementClearing")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ElementClearing(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementClearingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ElementClearing")]
		void remove_ElementClearing(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ElementIndexChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ElementIndexChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ItemsRepeater, global::Microsoft.UI.Xaml.Controls.ItemsRepeaterElementIndexChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ElementIndexChanged")]
		void remove_ElementIndexChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IItemsSourceViewFactory
	{
		global::System.IntPtr CreateInstance(
					object source, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IItemsSourceView
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Count")]
		int get_Count();

		object GetAt(int index);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasKeyIndexMapping")]
		bool get_HasKeyIndexMapping();

		string KeyFromIndex(int index);

		int IndexFromKey(string key);

		int IndexOf(object item);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILayout
	{
		void InitializeForContext(global::Microsoft.UI.Xaml.Controls.LayoutContext context);

		void UninitializeForContext(global::Microsoft.UI.Xaml.Controls.LayoutContext context);

		global::Windows.Foundation.Size Measure(
					global::Microsoft.UI.Xaml.Controls.LayoutContext context, 
					global::Windows.Foundation.Size availableSize);

		global::Windows.Foundation.Size Arrange(
					global::Microsoft.UI.Xaml.Controls.LayoutContext context, 
					global::Windows.Foundation.Size finalSize);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "MeasureInvalidated")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_MeasureInvalidated(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Layout, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "MeasureInvalidated")]
		void remove_MeasureInvalidated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ArrangeInvalidated")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ArrangeInvalidated(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Layout, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ArrangeInvalidated")]
		void remove_ArrangeInvalidated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILayoutContext
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LayoutState")]
		object get_LayoutState();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "LayoutState")]
		void put_LayoutState(object value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILayoutContextOverrides
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LayoutStateCore")]
		object get_LayoutStateCore();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "LayoutStateCore")]
		void put_LayoutStateCore(object value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILayoutProtected
	{
		void InvalidateMeasure();

		void InvalidateArrange();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IItemsRepeaterElementPreparedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Element")]
		global::Windows.UI.Xaml.UIElement get_Element();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Index")]
		int get_Index();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IItemsRepeaterElementClearingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Element")]
		global::Windows.UI.Xaml.UIElement get_Element();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IItemsRepeaterElementIndexChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Element")]
		global::Windows.UI.Xaml.UIElement get_Element();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OldIndex")]
		int get_OldIndex();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NewIndex")]
		int get_NewIndex();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITabViewFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITabViewStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabWidthModeProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TabWidthModeProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabStripHeaderProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TabStripHeaderProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabStripHeaderTemplateProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TabStripHeaderTemplateProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabStripFooterProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TabStripFooterProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabStripFooterTemplateProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TabStripFooterTemplateProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAddTabButtonVisibleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsAddTabButtonVisibleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AddTabButtonCommandProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_AddTabButtonCommandProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AddTabButtonCommandParameterProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_AddTabButtonCommandParameterProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabItemsSourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TabItemsSourceProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabItemsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TabItemsProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabItemTemplateProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TabItemTemplateProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabItemTemplateSelectorProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TabItemTemplateSelectorProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonOverlayModeProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CloseButtonOverlayModeProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanDragTabsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CanDragTabsProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanReorderTabsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CanReorderTabsProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AllowDropTabsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_AllowDropTabsProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedIndexProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SelectedIndexProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedItemProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SelectedItemProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITabView
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabWidthMode")]
		global::Microsoft.UI.Xaml.Controls.TabViewWidthMode get_TabWidthMode();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TabWidthMode")]
		void put_TabWidthMode(global::Microsoft.UI.Xaml.Controls.TabViewWidthMode value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonOverlayMode")]
		global::Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode get_CloseButtonOverlayMode();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CloseButtonOverlayMode")]
		void put_CloseButtonOverlayMode(global::Microsoft.UI.Xaml.Controls.TabViewCloseButtonOverlayMode value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabStripHeader")]
		object get_TabStripHeader();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TabStripHeader")]
		void put_TabStripHeader(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabStripHeaderTemplate")]
		global::Windows.UI.Xaml.DataTemplate get_TabStripHeaderTemplate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TabStripHeaderTemplate")]
		void put_TabStripHeaderTemplate(global::Windows.UI.Xaml.DataTemplate value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabStripFooter")]
		object get_TabStripFooter();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TabStripFooter")]
		void put_TabStripFooter(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabStripFooterTemplate")]
		global::Windows.UI.Xaml.DataTemplate get_TabStripFooterTemplate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TabStripFooterTemplate")]
		void put_TabStripFooterTemplate(global::Windows.UI.Xaml.DataTemplate value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAddTabButtonVisible")]
		bool get_IsAddTabButtonVisible();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsAddTabButtonVisible")]
		void put_IsAddTabButtonVisible(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AddTabButtonCommand")]
		global::System.Windows.Input.ICommand get_AddTabButtonCommand();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AddTabButtonCommand")]
		void put_AddTabButtonCommand(global::System.Windows.Input.ICommand value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AddTabButtonCommandParameter")]
		object get_AddTabButtonCommandParameter();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AddTabButtonCommandParameter")]
		void put_AddTabButtonCommandParameter(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TabCloseRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TabCloseRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TabCloseRequested")]
		void remove_TabCloseRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TabDroppedOutside")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TabDroppedOutside(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDroppedOutsideEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TabDroppedOutside")]
		void remove_TabDroppedOutside(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AddTabButtonClick")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AddTabButtonClick(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AddTabButtonClick")]
		void remove_AddTabButtonClick(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TabItemsChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TabItemsChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Windows.Foundation.Collections.IVectorChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TabItemsChanged")]
		void remove_TabItemsChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabItemsSource")]
		object get_TabItemsSource();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TabItemsSource")]
		void put_TabItemsSource(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabItems")]
		global::System.Collections.Generic.IList<object> get_TabItems();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabItemTemplate")]
		global::Windows.UI.Xaml.DataTemplate get_TabItemTemplate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TabItemTemplate")]
		void put_TabItemTemplate(global::Windows.UI.Xaml.DataTemplate value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabItemTemplateSelector")]
		global::Windows.UI.Xaml.Controls.DataTemplateSelector get_TabItemTemplateSelector();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TabItemTemplateSelector")]
		void put_TabItemTemplateSelector(global::Windows.UI.Xaml.Controls.DataTemplateSelector value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanDragTabs")]
		bool get_CanDragTabs();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CanDragTabs")]
		void put_CanDragTabs(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanReorderTabs")]
		bool get_CanReorderTabs();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CanReorderTabs")]
		void put_CanReorderTabs(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AllowDropTabs")]
		bool get_AllowDropTabs();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AllowDropTabs")]
		void put_AllowDropTabs(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedIndex")]
		int get_SelectedIndex();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectedIndex")]
		void put_SelectedIndex(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedItem")]
		object get_SelectedItem();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectedItem")]
		void put_SelectedItem(object value);

		global::Windows.UI.Xaml.DependencyObject ContainerFromItem(object item);

		global::Windows.UI.Xaml.DependencyObject ContainerFromIndex(int index);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SelectionChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SelectionChanged(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SelectionChanged")]
		void remove_SelectionChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TabDragStarting")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TabDragStarting(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDragStartingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TabDragStarting")]
		void remove_TabDragStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TabDragCompleted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TabDragCompleted(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabView, global::Microsoft.UI.Xaml.Controls.TabViewTabDragCompletedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TabDragCompleted")]
		void remove_TabDragCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TabStripDragOver")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TabStripDragOver(global::Windows.UI.Xaml.DragEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TabStripDragOver")]
		void remove_TabStripDragOver(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TabStripDrop")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TabStripDrop(global::Windows.UI.Xaml.DragEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TabStripDrop")]
		void remove_TabStripDrop(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITabViewTabCloseRequestedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Item")]
		object get_Item();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Tab")]
		global::Microsoft.UI.Xaml.Controls.TabViewItem get_Tab();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITabViewItemFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITabViewItemStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HeaderProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplateProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HeaderTemplateProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconSourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IconSourceProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsClosableProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsClosableProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabViewTemplateSettingsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TabViewTemplateSettingsProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITabViewItem
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Header")]
		object get_Header();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Header")]
		void put_Header(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplate")]
		global::Windows.UI.Xaml.DataTemplate get_HeaderTemplate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderTemplate")]
		void put_HeaderTemplate(global::Windows.UI.Xaml.DataTemplate value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconSource")]
		global::Microsoft.UI.Xaml.Controls.IconSource get_IconSource();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IconSource")]
		void put_IconSource(global::Microsoft.UI.Xaml.Controls.IconSource value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsClosable")]
		bool get_IsClosable();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsClosable")]
		void put_IsClosable(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabViewTemplateSettings")]
		global::Microsoft.UI.Xaml.Controls.TabViewItemTemplateSettings get_TabViewTemplateSettings();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CloseRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CloseRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TabViewItem, global::Microsoft.UI.Xaml.Controls.TabViewTabCloseRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CloseRequested")]
		void remove_CloseRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITabViewItemTemplateSettingsFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITabViewItemTemplateSettingsStatics2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabGeometryProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TabGeometryProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITabViewItemTemplateSettingsStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconElementProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IconElementProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITabViewItemTemplateSettings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconElement")]
		global::Windows.UI.Xaml.Controls.IconElement get_IconElement();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IconElement")]
		void put_IconElement(global::Windows.UI.Xaml.Controls.IconElement value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITabViewItemTemplateSettings2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TabGeometry")]
		global::Windows.UI.Xaml.Media.Geometry get_TabGeometry();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TabGeometry")]
		void put_TabGeometry(global::Windows.UI.Xaml.Media.Geometry value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITabViewTabDroppedOutsideEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Item")]
		object get_Item();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Tab")]
		global::Microsoft.UI.Xaml.Controls.TabViewItem get_Tab();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITabViewTabDragStartingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cancel")]
		bool get_Cancel();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Cancel")]
		void put_Cancel(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Data")]
		global::Windows.ApplicationModel.DataTransfer.DataPackage get_Data();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Item")]
		object get_Item();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Tab")]
		global::Microsoft.UI.Xaml.Controls.TabViewItem get_Tab();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITabViewTabDragCompletedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DropResult")]
		global::Windows.ApplicationModel.DataTransfer.DataPackageOperation get_DropResult();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Item")]
		object get_Item();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Tab")]
		global::Microsoft.UI.Xaml.Controls.TabViewItem get_Tab();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITeachingTipFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITeachingTipStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsOpenProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsOpenProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TargetProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TargetProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TailVisibilityProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TailVisibilityProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TitleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TitleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SubtitleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SubtitleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActionButtonContentProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ActionButtonContentProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActionButtonStyleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ActionButtonStyleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActionButtonCommandProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ActionButtonCommandProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActionButtonCommandParameterProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ActionButtonCommandParameterProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonContentProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CloseButtonContentProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonStyleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CloseButtonStyleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonCommandProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CloseButtonCommandProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonCommandParameterProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CloseButtonCommandParameterProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlacementMarginProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PlacementMarginProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShouldConstrainToRootBoundsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ShouldConstrainToRootBoundsProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsLightDismissEnabledProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsLightDismissEnabledProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreferredPlacementProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PreferredPlacementProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeroContentPlacementProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HeroContentPlacementProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeroContentProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HeroContentProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconSourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IconSourceProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettingsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TemplateSettingsProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITeachingTip
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Title")]
		string get_Title();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Title")]
		void put_Title(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Subtitle")]
		string get_Subtitle();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Subtitle")]
		void put_Subtitle(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsOpen")]
		bool get_IsOpen();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsOpen")]
		void put_IsOpen(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Target")]
		global::Windows.UI.Xaml.FrameworkElement get_Target();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Target")]
		void put_Target(global::Windows.UI.Xaml.FrameworkElement value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TailVisibility")]
		global::Microsoft.UI.Xaml.Controls.TeachingTipTailVisibility get_TailVisibility();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TailVisibility")]
		void put_TailVisibility(global::Microsoft.UI.Xaml.Controls.TeachingTipTailVisibility value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActionButtonContent")]
		object get_ActionButtonContent();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ActionButtonContent")]
		void put_ActionButtonContent(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActionButtonStyle")]
		global::Windows.UI.Xaml.Style get_ActionButtonStyle();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ActionButtonStyle")]
		void put_ActionButtonStyle(global::Windows.UI.Xaml.Style value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActionButtonCommand")]
		global::System.Windows.Input.ICommand get_ActionButtonCommand();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ActionButtonCommand")]
		void put_ActionButtonCommand(global::System.Windows.Input.ICommand value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActionButtonCommandParameter")]
		object get_ActionButtonCommandParameter();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ActionButtonCommandParameter")]
		void put_ActionButtonCommandParameter(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonContent")]
		object get_CloseButtonContent();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CloseButtonContent")]
		void put_CloseButtonContent(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonStyle")]
		global::Windows.UI.Xaml.Style get_CloseButtonStyle();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CloseButtonStyle")]
		void put_CloseButtonStyle(global::Windows.UI.Xaml.Style value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonCommand")]
		global::System.Windows.Input.ICommand get_CloseButtonCommand();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CloseButtonCommand")]
		void put_CloseButtonCommand(global::System.Windows.Input.ICommand value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseButtonCommandParameter")]
		object get_CloseButtonCommandParameter();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CloseButtonCommandParameter")]
		void put_CloseButtonCommandParameter(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlacementMargin")]
		global::Windows.UI.Xaml.Thickness get_PlacementMargin();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PlacementMargin")]
		void put_PlacementMargin(global::Windows.UI.Xaml.Thickness value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShouldConstrainToRootBounds")]
		bool get_ShouldConstrainToRootBounds();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ShouldConstrainToRootBounds")]
		void put_ShouldConstrainToRootBounds(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsLightDismissEnabled")]
		bool get_IsLightDismissEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsLightDismissEnabled")]
		void put_IsLightDismissEnabled(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreferredPlacement")]
		global::Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode get_PreferredPlacement();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PreferredPlacement")]
		void put_PreferredPlacement(global::Microsoft.UI.Xaml.Controls.TeachingTipPlacementMode value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeroContentPlacement")]
		global::Microsoft.UI.Xaml.Controls.TeachingTipHeroContentPlacementMode get_HeroContentPlacement();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeroContentPlacement")]
		void put_HeroContentPlacement(global::Microsoft.UI.Xaml.Controls.TeachingTipHeroContentPlacementMode value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeroContent")]
		global::Windows.UI.Xaml.UIElement get_HeroContent();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeroContent")]
		void put_HeroContent(global::Windows.UI.Xaml.UIElement value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconSource")]
		global::Microsoft.UI.Xaml.Controls.IconSource get_IconSource();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IconSource")]
		void put_IconSource(global::Microsoft.UI.Xaml.Controls.IconSource value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettings")]
		global::Microsoft.UI.Xaml.Controls.TeachingTipTemplateSettings get_TemplateSettings();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ActionButtonClick")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ActionButtonClick(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ActionButtonClick")]
		void remove_ActionButtonClick(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CloseButtonClick")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CloseButtonClick(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CloseButtonClick")]
		void remove_CloseButtonClick(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closing")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closing(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, global::Microsoft.UI.Xaml.Controls.TeachingTipClosingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closing")]
		void remove_Closing(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closed(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TeachingTip, global::Microsoft.UI.Xaml.Controls.TeachingTipClosedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closed")]
		void remove_Closed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITeachingTipTemplateSettingsFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITeachingTipTemplateSettingsStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TopRightHighlightMarginProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TopRightHighlightMarginProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TopLeftHighlightMarginProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TopLeftHighlightMarginProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconElementProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IconElementProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITeachingTipTemplateSettings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TopRightHighlightMargin")]
		global::Windows.UI.Xaml.Thickness get_TopRightHighlightMargin();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TopRightHighlightMargin")]
		void put_TopRightHighlightMargin(global::Windows.UI.Xaml.Thickness value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TopLeftHighlightMargin")]
		global::Windows.UI.Xaml.Thickness get_TopLeftHighlightMargin();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TopLeftHighlightMargin")]
		void put_TopLeftHighlightMargin(global::Windows.UI.Xaml.Thickness value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconElement")]
		global::Windows.UI.Xaml.Controls.IconElement get_IconElement();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IconElement")]
		void put_IconElement(global::Windows.UI.Xaml.Controls.IconElement value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITeachingTipClosingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Reason")]
		global::Microsoft.UI.Xaml.Controls.TeachingTipCloseReason get_Reason();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cancel")]
		bool get_Cancel();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Cancel")]
		void put_Cancel(bool value);

		global::Windows.Foundation.Deferral GetDeferral();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITeachingTipClosedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Reason")]
		global::Microsoft.UI.Xaml.Controls.TeachingTipCloseReason get_Reason();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IToggleSplitButtonFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IToggleSplitButtonStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsCheckedProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsCheckedProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IToggleSplitButton
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsChecked")]
		bool get_IsChecked();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsChecked")]
		void put_IsChecked(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "IsCheckedChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_IsCheckedChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ToggleSplitButton, global::Microsoft.UI.Xaml.Controls.ToggleSplitButtonIsCheckedChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "IsCheckedChanged")]
		void remove_IsCheckedChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IToggleSplitButtonIsCheckedChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewItemFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewItemStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GlyphOpacityProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_GlyphOpacityProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GlyphBrushProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_GlyphBrushProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandedGlyphProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ExpandedGlyphProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CollapsedGlyphProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CollapsedGlyphProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GlyphSizeProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_GlyphSizeProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsExpandedProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsExpandedProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TreeViewItemTemplateSettingsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TreeViewItemTemplateSettingsProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewItemStatics2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasUnrealizedChildrenProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HasUnrealizedChildrenProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ItemsSourceProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewItem
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GlyphOpacity")]
		double get_GlyphOpacity();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "GlyphOpacity")]
		void put_GlyphOpacity(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GlyphBrush")]
		global::Windows.UI.Xaml.Media.Brush get_GlyphBrush();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "GlyphBrush")]
		void put_GlyphBrush(global::Windows.UI.Xaml.Media.Brush value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandedGlyph")]
		string get_ExpandedGlyph();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ExpandedGlyph")]
		void put_ExpandedGlyph(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CollapsedGlyph")]
		string get_CollapsedGlyph();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CollapsedGlyph")]
		void put_CollapsedGlyph(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GlyphSize")]
		double get_GlyphSize();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "GlyphSize")]
		void put_GlyphSize(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsExpanded")]
		bool get_IsExpanded();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsExpanded")]
		void put_IsExpanded(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TreeViewItemTemplateSettings")]
		global::Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings get_TreeViewItemTemplateSettings();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewItemTemplateSettingsFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewItemTemplateSettingsStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandedGlyphVisibilityProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ExpandedGlyphVisibilityProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CollapsedGlyphVisibilityProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CollapsedGlyphVisibilityProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IndentationProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IndentationProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DragItemsCountProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_DragItemsCountProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewItemTemplateSettings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandedGlyphVisibility")]
		global::Windows.UI.Xaml.Visibility get_ExpandedGlyphVisibility();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CollapsedGlyphVisibility")]
		global::Windows.UI.Xaml.Visibility get_CollapsedGlyphVisibility();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Indentation")]
		global::Windows.UI.Xaml.Thickness get_Indentation();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DragItemsCount")]
		int get_DragItemsCount();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewItem2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasUnrealizedChildren")]
		bool get_HasUnrealizedChildren();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HasUnrealizedChildren")]
		void put_HasUnrealizedChildren(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSource")]
		object get_ItemsSource();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemsSource")]
		void put_ItemsSource(object value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewListFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewList
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimatedIconSourceFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimatedIconSourceStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SourceProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FallbackIconSourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_FallbackIconSourceProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MirroredWhenRightToLeftProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MirroredWhenRightToLeftProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimatedIconSource
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2 get_Source();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Source")]
		void put_Source(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2 value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FallbackIconSource")]
		global::Microsoft.UI.Xaml.Controls.IconSource get_FallbackIconSource();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FallbackIconSource")]
		void put_FallbackIconSource(global::Microsoft.UI.Xaml.Controls.IconSource value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MirroredWhenRightToLeft")]
		bool get_MirroredWhenRightToLeft();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MirroredWhenRightToLeft")]
		void put_MirroredWhenRightToLeft(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBitmapIconSourceFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBitmapIconSourceStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UriSourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_UriSourceProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShowAsMonochromeProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ShowAsMonochromeProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBitmapIconSource
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UriSource")]
		global::System.Uri get_UriSource();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UriSource")]
		void put_UriSource(global::System.Uri value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShowAsMonochrome")]
		bool get_ShowAsMonochrome();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ShowAsMonochrome")]
		void put_ShowAsMonochrome(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBreadcrumbBarFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBreadcrumbBarStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ItemsSourceProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemTemplateProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ItemTemplateProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBreadcrumbBar
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSource")]
		object get_ItemsSource();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemsSource")]
		void put_ItemsSource(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemTemplate")]
		object get_ItemTemplate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemTemplate")]
		void put_ItemTemplate(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ItemClicked")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ItemClicked(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.BreadcrumbBar, global::Microsoft.UI.Xaml.Controls.BreadcrumbBarItemClickedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ItemClicked")]
		void remove_ItemClicked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBreadcrumbBarItemClickedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Index")]
		int get_Index();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Item")]
		object get_Item();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColorPickerFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColorPickerStatics2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OrientationProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_OrientationProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColorPickerStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColorProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ColorProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousColorProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PreviousColorProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAlphaEnabledProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsAlphaEnabledProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsColorSpectrumVisibleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsColorSpectrumVisibleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsColorPreviewVisibleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsColorPreviewVisibleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsColorSliderVisibleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsColorSliderVisibleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAlphaSliderVisibleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsAlphaSliderVisibleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsMoreButtonVisibleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsMoreButtonVisibleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsColorChannelTextInputVisibleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsColorChannelTextInputVisibleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAlphaTextInputVisibleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsAlphaTextInputVisibleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsHexInputVisibleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsHexInputVisibleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinHueProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MinHueProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxHueProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MaxHueProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinSaturationProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MinSaturationProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxSaturationProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MaxSaturationProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinValueProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MinValueProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxValueProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MaxValueProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColorSpectrumShapeProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ColorSpectrumShapeProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColorSpectrumComponentsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ColorSpectrumComponentsProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColorPicker
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Color")]
		global::Windows.UI.Color get_Color();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Color")]
		void put_Color(global::Windows.UI.Color value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousColor")]
		global::System.Nullable<global::Windows.UI.Color> get_PreviousColor();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PreviousColor")]
		void put_PreviousColor(global::System.Nullable<global::Windows.UI.Color> value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAlphaEnabled")]
		bool get_IsAlphaEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsAlphaEnabled")]
		void put_IsAlphaEnabled(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsColorSpectrumVisible")]
		bool get_IsColorSpectrumVisible();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsColorSpectrumVisible")]
		void put_IsColorSpectrumVisible(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsColorPreviewVisible")]
		bool get_IsColorPreviewVisible();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsColorPreviewVisible")]
		void put_IsColorPreviewVisible(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsColorSliderVisible")]
		bool get_IsColorSliderVisible();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsColorSliderVisible")]
		void put_IsColorSliderVisible(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAlphaSliderVisible")]
		bool get_IsAlphaSliderVisible();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsAlphaSliderVisible")]
		void put_IsAlphaSliderVisible(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsMoreButtonVisible")]
		bool get_IsMoreButtonVisible();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsMoreButtonVisible")]
		void put_IsMoreButtonVisible(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsColorChannelTextInputVisible")]
		bool get_IsColorChannelTextInputVisible();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsColorChannelTextInputVisible")]
		void put_IsColorChannelTextInputVisible(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAlphaTextInputVisible")]
		bool get_IsAlphaTextInputVisible();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsAlphaTextInputVisible")]
		void put_IsAlphaTextInputVisible(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsHexInputVisible")]
		bool get_IsHexInputVisible();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsHexInputVisible")]
		void put_IsHexInputVisible(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinHue")]
		int get_MinHue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinHue")]
		void put_MinHue(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxHue")]
		int get_MaxHue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxHue")]
		void put_MaxHue(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinSaturation")]
		int get_MinSaturation();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinSaturation")]
		void put_MinSaturation(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxSaturation")]
		int get_MaxSaturation();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxSaturation")]
		void put_MaxSaturation(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinValue")]
		int get_MinValue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinValue")]
		void put_MinValue(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxValue")]
		int get_MaxValue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxValue")]
		void put_MaxValue(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColorSpectrumShape")]
		global::Microsoft.UI.Xaml.Controls.ColorSpectrumShape get_ColorSpectrumShape();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ColorSpectrumShape")]
		void put_ColorSpectrumShape(global::Microsoft.UI.Xaml.Controls.ColorSpectrumShape value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColorSpectrumComponents")]
		global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents get_ColorSpectrumComponents();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ColorSpectrumComponents")]
		void put_ColorSpectrumComponents(global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ColorChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ColorChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.ColorPicker, global::Microsoft.UI.Xaml.Controls.ColorChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ColorChanged")]
		void remove_ColorChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColorPicker2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Orientation")]
		global::Windows.UI.Xaml.Controls.Orientation get_Orientation();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Orientation")]
		void put_Orientation(global::Windows.UI.Xaml.Controls.Orientation value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICommandBarFlyoutFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICommandBarFlyout
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PrimaryCommands")]
		global::Windows.Foundation.Collections.IObservableVector<global::Windows.UI.Xaml.Controls.ICommandBarElement> get_PrimaryCommands();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SecondaryCommands")]
		global::Windows.Foundation.Collections.IObservableVector<global::Windows.UI.Xaml.Controls.ICommandBarElement> get_SecondaryCommands();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICommandBarFlyout2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AlwaysExpanded")]
		bool get_AlwaysExpanded();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AlwaysExpanded")]
		void put_AlwaysExpanded(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IElementFactoryGetArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Data")]
		object get_Data();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Data")]
		void put_Data(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Parent")]
		global::Windows.UI.Xaml.UIElement get_Parent();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Parent")]
		void put_Parent(global::Windows.UI.Xaml.UIElement value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IElementFactoryRecycleArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Element")]
		global::Windows.UI.Xaml.UIElement get_Element();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Element")]
		void put_Element(global::Windows.UI.Xaml.UIElement value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Parent")]
		global::Windows.UI.Xaml.UIElement get_Parent();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Parent")]
		void put_Parent(global::Windows.UI.Xaml.UIElement value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFontIconSourceFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFontIconSourceStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GlyphProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_GlyphProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontSizeProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_FontSizeProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontFamilyProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_FontFamilyProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontWeightProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_FontWeightProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontStyleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_FontStyleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsTextScaleFactorEnabledProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsTextScaleFactorEnabledProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MirroredWhenRightToLeftProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MirroredWhenRightToLeftProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFontIconSource
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Glyph")]
		string get_Glyph();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Glyph")]
		void put_Glyph(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontSize")]
		double get_FontSize();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontSize")]
		void put_FontSize(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontFamily")]
		global::Windows.UI.Xaml.Media.FontFamily get_FontFamily();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontFamily")]
		void put_FontFamily(global::Windows.UI.Xaml.Media.FontFamily value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontWeight")]
		global::Windows.UI.Text.FontWeight get_FontWeight();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontWeight")]
		void put_FontWeight(global::Windows.UI.Text.FontWeight value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontStyle")]
		global::Windows.UI.Text.FontStyle get_FontStyle();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontStyle")]
		void put_FontStyle(global::Windows.UI.Text.FontStyle value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsTextScaleFactorEnabled")]
		bool get_IsTextScaleFactorEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsTextScaleFactorEnabled")]
		void put_IsTextScaleFactorEnabled(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MirroredWhenRightToLeft")]
		bool get_MirroredWhenRightToLeft();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MirroredWhenRightToLeft")]
		void put_MirroredWhenRightToLeft(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IImageIconFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IImageIconStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SourceProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IImageIcon
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		global::Windows.UI.Xaml.Media.ImageSource get_Source();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Source")]
		void put_Source(global::Windows.UI.Xaml.Media.ImageSource value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IImageIconSourceFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IImageIconSourceStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ImageSourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ImageSourceProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IImageIconSource
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ImageSource")]
		global::Windows.UI.Xaml.Media.ImageSource get_ImageSource();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ImageSource")]
		void put_ImageSource(global::Windows.UI.Xaml.Media.ImageSource value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IItemsRepeaterScrollHost
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ScrollViewer")]
		global::Windows.UI.Xaml.Controls.ScrollViewer get_ScrollViewer();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ScrollViewer")]
		void put_ScrollViewer(global::Windows.UI.Xaml.Controls.ScrollViewer value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CurrentAnchor")]
		global::Windows.UI.Xaml.UIElement get_CurrentAnchor();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalAnchorRatio")]
		double get_HorizontalAnchorRatio();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalAnchorRatio")]
		void put_HorizontalAnchorRatio(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalAnchorRatio")]
		double get_VerticalAnchorRatio();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalAnchorRatio")]
		void put_VerticalAnchorRatio(double value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMenuBarItemFlyoutFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMenuBarItemFlyout
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemHeaderFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemHeader
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemSeparatorFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemSeparator
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INonVirtualizingLayoutFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INonVirtualizingLayout
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INonVirtualizingLayoutOverrides
	{
		void InitializeForContextCore(global::Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext context);

		void UninitializeForContextCore(global::Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext context);

		global::Windows.Foundation.Size MeasureOverride(
					global::Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext context, 
					global::Windows.Foundation.Size availableSize);

		global::Windows.Foundation.Size ArrangeOverride(
					global::Microsoft.UI.Xaml.Controls.NonVirtualizingLayoutContext context, 
					global::Windows.Foundation.Size finalSize);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INonVirtualizingLayoutContextFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INonVirtualizingLayoutContext
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Children")]
		global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.UIElement> get_Children();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INonVirtualizingLayoutContextOverrides
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ChildrenCore")]
		global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.UIElement> get_ChildrenCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IParallaxViewFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IParallaxViewStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ChildProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ChildProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalSourceEndOffsetProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HorizontalSourceEndOffsetProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalSourceOffsetKindProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HorizontalSourceOffsetKindProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalSourceStartOffsetProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HorizontalSourceStartOffsetProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxHorizontalShiftRatioProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MaxHorizontalShiftRatioProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalShiftProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HorizontalShiftProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsHorizontalShiftClampedProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsHorizontalShiftClampedProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsVerticalShiftClampedProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsVerticalShiftClampedProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SourceProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalSourceEndOffsetProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_VerticalSourceEndOffsetProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalSourceOffsetKindProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_VerticalSourceOffsetKindProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalSourceStartOffsetProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_VerticalSourceStartOffsetProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxVerticalShiftRatioProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MaxVerticalShiftRatioProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalShiftProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_VerticalShiftProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IParallaxView
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Child")]
		global::Windows.UI.Xaml.UIElement get_Child();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Child")]
		void put_Child(global::Windows.UI.Xaml.UIElement value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalShift")]
		double get_HorizontalShift();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalShift")]
		void put_HorizontalShift(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalSourceEndOffset")]
		double get_HorizontalSourceEndOffset();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalSourceEndOffset")]
		void put_HorizontalSourceEndOffset(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalSourceOffsetKind")]
		global::Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind get_HorizontalSourceOffsetKind();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalSourceOffsetKind")]
		void put_HorizontalSourceOffsetKind(global::Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalSourceStartOffset")]
		double get_HorizontalSourceStartOffset();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalSourceStartOffset")]
		void put_HorizontalSourceStartOffset(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsHorizontalShiftClamped")]
		bool get_IsHorizontalShiftClamped();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsHorizontalShiftClamped")]
		void put_IsHorizontalShiftClamped(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsVerticalShiftClamped")]
		bool get_IsVerticalShiftClamped();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsVerticalShiftClamped")]
		void put_IsVerticalShiftClamped(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxHorizontalShiftRatio")]
		double get_MaxHorizontalShiftRatio();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxHorizontalShiftRatio")]
		void put_MaxHorizontalShiftRatio(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxVerticalShiftRatio")]
		double get_MaxVerticalShiftRatio();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxVerticalShiftRatio")]
		void put_MaxVerticalShiftRatio(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		global::Windows.UI.Xaml.UIElement get_Source();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Source")]
		void put_Source(global::Windows.UI.Xaml.UIElement value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalShift")]
		double get_VerticalShift();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalShift")]
		void put_VerticalShift(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalSourceEndOffset")]
		double get_VerticalSourceEndOffset();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalSourceEndOffset")]
		void put_VerticalSourceEndOffset(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalSourceOffsetKind")]
		global::Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind get_VerticalSourceOffsetKind();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalSourceOffsetKind")]
		void put_VerticalSourceOffsetKind(global::Microsoft.UI.Xaml.Controls.ParallaxSourceOffsetKind value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalSourceStartOffset")]
		double get_VerticalSourceStartOffset();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalSourceStartOffset")]
		void put_VerticalSourceStartOffset(double value);

		void RefreshAutomaticHorizontalOffsets();

		void RefreshAutomaticVerticalOffsets();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPathIconSourceFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPathIconSourceStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DataProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_DataProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPathIconSource
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Data")]
		global::Windows.UI.Xaml.Media.Geometry get_Data();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Data")]
		void put_Data(global::Windows.UI.Xaml.Media.Geometry value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRadioMenuFlyoutItemFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRadioMenuFlyoutItemStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsCheckedProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsCheckedProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GroupNameProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_GroupNameProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRadioMenuFlyoutItemStatics2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AreCheckStatesEnabledProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_AreCheckStatesEnabledProperty();

		void SetAreCheckStatesEnabled(
					global::Windows.UI.Xaml.Controls.MenuFlyoutSubItem @object, 
					bool value);

		bool GetAreCheckStatesEnabled(global::Windows.UI.Xaml.Controls.MenuFlyoutSubItem @object);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRadioMenuFlyoutItem
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsChecked")]
		bool get_IsChecked();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsChecked")]
		void put_IsChecked(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GroupName")]
		string get_GroupName();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "GroupName")]
		void put_GroupName(string value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRatingItemFontInfoFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRatingItemFontInfoStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisabledGlyphProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_DisabledGlyphProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GlyphProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_GlyphProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlaceholderGlyphProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PlaceholderGlyphProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerOverGlyphProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PointerOverGlyphProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerOverPlaceholderGlyphProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PointerOverPlaceholderGlyphProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UnsetGlyphProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_UnsetGlyphProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRatingItemFontInfo
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisabledGlyph")]
		string get_DisabledGlyph();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DisabledGlyph")]
		void put_DisabledGlyph(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Glyph")]
		string get_Glyph();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Glyph")]
		void put_Glyph(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerOverGlyph")]
		string get_PointerOverGlyph();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PointerOverGlyph")]
		void put_PointerOverGlyph(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerOverPlaceholderGlyph")]
		string get_PointerOverPlaceholderGlyph();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PointerOverPlaceholderGlyph")]
		void put_PointerOverPlaceholderGlyph(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlaceholderGlyph")]
		string get_PlaceholderGlyph();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PlaceholderGlyph")]
		void put_PlaceholderGlyph(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UnsetGlyph")]
		string get_UnsetGlyph();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UnsetGlyph")]
		void put_UnsetGlyph(string value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRatingItemImageInfoFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRatingItemImageInfoStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisabledImageProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_DisabledImageProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ImageProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ImageProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlaceholderImageProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PlaceholderImageProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerOverImageProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PointerOverImageProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerOverPlaceholderImageProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PointerOverPlaceholderImageProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UnsetImageProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_UnsetImageProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRatingItemImageInfo
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisabledImage")]
		global::Windows.UI.Xaml.Media.ImageSource get_DisabledImage();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DisabledImage")]
		void put_DisabledImage(global::Windows.UI.Xaml.Media.ImageSource value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Image")]
		global::Windows.UI.Xaml.Media.ImageSource get_Image();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Image")]
		void put_Image(global::Windows.UI.Xaml.Media.ImageSource value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PlaceholderImage")]
		global::Windows.UI.Xaml.Media.ImageSource get_PlaceholderImage();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PlaceholderImage")]
		void put_PlaceholderImage(global::Windows.UI.Xaml.Media.ImageSource value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerOverImage")]
		global::Windows.UI.Xaml.Media.ImageSource get_PointerOverImage();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PointerOverImage")]
		void put_PointerOverImage(global::Windows.UI.Xaml.Media.ImageSource value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerOverPlaceholderImage")]
		global::Windows.UI.Xaml.Media.ImageSource get_PointerOverPlaceholderImage();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PointerOverPlaceholderImage")]
		void put_PointerOverPlaceholderImage(global::Windows.UI.Xaml.Media.ImageSource value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UnsetImage")]
		global::Windows.UI.Xaml.Media.ImageSource get_UnsetImage();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UnsetImage")]
		void put_UnsetImage(global::Windows.UI.Xaml.Media.ImageSource value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRefreshContainerFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRefreshContainerStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VisualizerProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_VisualizerProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PullDirectionProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PullDirectionProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRefreshContainer
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Visualizer")]
		global::Microsoft.UI.Xaml.Controls.RefreshVisualizer get_Visualizer();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Visualizer")]
		void put_Visualizer(global::Microsoft.UI.Xaml.Controls.RefreshVisualizer value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PullDirection")]
		global::Microsoft.UI.Xaml.Controls.RefreshPullDirection get_PullDirection();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PullDirection")]
		void put_PullDirection(global::Microsoft.UI.Xaml.Controls.RefreshPullDirection value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "RefreshRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_RefreshRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshContainer, global::Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "RefreshRequested")]
		void remove_RefreshRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		void RequestRefresh();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRefreshVisualizerFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRefreshVisualizerStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InfoProviderProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_InfoProviderProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OrientationProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_OrientationProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ContentProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StateProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_StateProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRefreshVisualizer
	{
		void RequestRefresh();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Orientation")]
		global::Microsoft.UI.Xaml.Controls.RefreshVisualizerOrientation get_Orientation();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Orientation")]
		void put_Orientation(global::Microsoft.UI.Xaml.Controls.RefreshVisualizerOrientation value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		global::Windows.UI.Xaml.UIElement get_Content();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		void put_Content(global::Windows.UI.Xaml.UIElement value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "State")]
		global::Microsoft.UI.Xaml.Controls.RefreshVisualizerState get_State();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "RefreshRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_RefreshRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshVisualizer, global::Microsoft.UI.Xaml.Controls.RefreshRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "RefreshRequested")]
		void remove_RefreshRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "RefreshStateChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_RefreshStateChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.RefreshVisualizer, global::Microsoft.UI.Xaml.Controls.RefreshStateChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "RefreshStateChanged")]
		void remove_RefreshStateChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRefreshRequestedEventArgs
	{
		global::Windows.Foundation.Deferral GetDeferral();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRefreshStateChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OldState")]
		global::Microsoft.UI.Xaml.Controls.RefreshVisualizerState get_OldState();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NewState")]
		global::Microsoft.UI.Xaml.Controls.RefreshVisualizerState get_NewState();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRevealListViewItemPresenterFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRevealListViewItemPresenter
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVirtualizingLayoutFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVirtualizingLayout
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVirtualizingLayoutOverrides
	{
		void InitializeForContextCore(global::Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext context);

		void UninitializeForContextCore(global::Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext context);

		global::Windows.Foundation.Size MeasureOverride(
					global::Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext context, 
					global::Windows.Foundation.Size availableSize);

		global::Windows.Foundation.Size ArrangeOverride(
					global::Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext context, 
					global::Windows.Foundation.Size finalSize);

		void OnItemsChangedCore(
					global::Microsoft.UI.Xaml.Controls.VirtualizingLayoutContext context, 
					object source, 
					global::System.Collections.Specialized.NotifyCollectionChangedEventArgs args);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVirtualizingLayoutContextFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVirtualizingLayoutContext
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemCount")]
		int get_ItemCount();

		object GetItemAt(int index);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RealizationRect")]
		global::Windows.Foundation.Rect get_RealizationRect();

		global::Windows.UI.Xaml.UIElement GetOrCreateElementAt(int index);

		global::Windows.UI.Xaml.UIElement GetOrCreateElementAt(
					int index, 
					global::Microsoft.UI.Xaml.Controls.ElementRealizationOptions options);

		void RecycleElement(global::Windows.UI.Xaml.UIElement element);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RecommendedAnchorIndex")]
		int get_RecommendedAnchorIndex();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LayoutOrigin")]
		global::Windows.Foundation.Point get_LayoutOrigin();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "LayoutOrigin")]
		void put_LayoutOrigin(global::Windows.Foundation.Point value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVirtualizingLayoutContextOverrides
	{
		int ItemCountCore();

		object GetItemAtCore(int index);

		global::Windows.Foundation.Rect RealizationRectCore();

		global::Windows.UI.Xaml.UIElement GetOrCreateElementAtCore(
					int index, 
					global::Microsoft.UI.Xaml.Controls.ElementRealizationOptions options);

		void RecycleElementCore(global::Windows.UI.Xaml.UIElement element);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RecommendedAnchorIndexCore")]
		int get_RecommendedAnchorIndexCore();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LayoutOriginCore")]
		global::Windows.Foundation.Point get_LayoutOriginCore();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "LayoutOriginCore")]
		void put_LayoutOriginCore(global::Windows.Foundation.Point value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStackLayoutFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStackLayoutStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OrientationProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_OrientationProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SpacingProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SpacingProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStackLayout
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Orientation")]
		global::Windows.UI.Xaml.Controls.Orientation get_Orientation();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Orientation")]
		void put_Orientation(global::Windows.UI.Xaml.Controls.Orientation value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Spacing")]
		double get_Spacing();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Spacing")]
		void put_Spacing(double value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISwipeControlFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISwipeControlStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LeftItemsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_LeftItemsProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RightItemsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_RightItemsProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TopItemsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TopItemsProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BottomItemsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_BottomItemsProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISwipeControl
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LeftItems")]
		global::Microsoft.UI.Xaml.Controls.SwipeItems get_LeftItems();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "LeftItems")]
		void put_LeftItems(global::Microsoft.UI.Xaml.Controls.SwipeItems value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RightItems")]
		global::Microsoft.UI.Xaml.Controls.SwipeItems get_RightItems();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "RightItems")]
		void put_RightItems(global::Microsoft.UI.Xaml.Controls.SwipeItems value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TopItems")]
		global::Microsoft.UI.Xaml.Controls.SwipeItems get_TopItems();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TopItems")]
		void put_TopItems(global::Microsoft.UI.Xaml.Controls.SwipeItems value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BottomItems")]
		global::Microsoft.UI.Xaml.Controls.SwipeItems get_BottomItems();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BottomItems")]
		void put_BottomItems(global::Microsoft.UI.Xaml.Controls.SwipeItems value);

		void Close();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISwipeItemsFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISwipeItemsStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ModeProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ModeProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISwipeItems
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Mode")]
		global::Microsoft.UI.Xaml.Controls.SwipeMode get_Mode();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Mode")]
		void put_Mode(global::Microsoft.UI.Xaml.Controls.SwipeMode value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISwipeItemFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISwipeItemStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconSourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IconSourceProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TextProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TextProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BackgroundProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_BackgroundProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ForegroundProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ForegroundProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CommandProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CommandProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CommandParameterProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CommandParameterProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BehaviorOnInvokedProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_BehaviorOnInvokedProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISwipeItem
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Text")]
		string get_Text();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Text")]
		void put_Text(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconSource")]
		global::Microsoft.UI.Xaml.Controls.IconSource get_IconSource();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IconSource")]
		void put_IconSource(global::Microsoft.UI.Xaml.Controls.IconSource value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Background")]
		global::Windows.UI.Xaml.Media.Brush get_Background();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Background")]
		void put_Background(global::Windows.UI.Xaml.Media.Brush value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Foreground")]
		global::Windows.UI.Xaml.Media.Brush get_Foreground();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Foreground")]
		void put_Foreground(global::Windows.UI.Xaml.Media.Brush value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Command")]
		global::System.Windows.Input.ICommand get_Command();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Command")]
		void put_Command(global::System.Windows.Input.ICommand value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CommandParameter")]
		object get_CommandParameter();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CommandParameter")]
		void put_CommandParameter(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BehaviorOnInvoked")]
		global::Microsoft.UI.Xaml.Controls.SwipeBehaviorOnInvoked get_BehaviorOnInvoked();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BehaviorOnInvoked")]
		void put_BehaviorOnInvoked(global::Microsoft.UI.Xaml.Controls.SwipeBehaviorOnInvoked value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Invoked")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Invoked(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.SwipeItem, global::Microsoft.UI.Xaml.Controls.SwipeItemInvokedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Invoked")]
		void remove_Invoked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISwipeItemInvokedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SwipeControl")]
		global::Microsoft.UI.Xaml.Controls.SwipeControl get_SwipeControl();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISymbolIconSourceFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISymbolIconSourceStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SymbolProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SymbolProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISymbolIconSource
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Symbol")]
		global::Windows.UI.Xaml.Controls.Symbol get_Symbol();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Symbol")]
		void put_Symbol(global::Windows.UI.Xaml.Controls.Symbol value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITextCommandBarFlyoutFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITextCommandBarFlyout
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewStatics2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanDragItemsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CanDragItemsProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanReorderItemsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CanReorderItemsProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemTemplateProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ItemTemplateProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemTemplateSelectorProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ItemTemplateSelectorProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemContainerStyleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ItemContainerStyleProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemContainerStyleSelectorProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ItemContainerStyleSelectorProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemContainerTransitionsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ItemContainerTransitionsProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ItemsSourceProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedItemProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SelectedItemProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionModeProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SelectionModeProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeView
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RootNodes")]
		global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode> get_RootNodes();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionMode")]
		global::Microsoft.UI.Xaml.Controls.TreeViewSelectionMode get_SelectionMode();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectionMode")]
		void put_SelectionMode(global::Microsoft.UI.Xaml.Controls.TreeViewSelectionMode value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedNodes")]
		global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode> get_SelectedNodes();

		void Expand(global::Microsoft.UI.Xaml.Controls.TreeViewNode value);

		void Collapse(global::Microsoft.UI.Xaml.Controls.TreeViewNode value);

		void SelectAll();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ItemInvoked")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ItemInvoked(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewItemInvokedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ItemInvoked")]
		void remove_ItemInvoked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Expanding")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Expanding(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewExpandingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Expanding")]
		void remove_Expanding(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Collapsed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Collapsed(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewCollapsedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Collapsed")]
		void remove_Collapsed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewNodeFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewNodeStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ContentProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DepthProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_DepthProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsExpandedProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsExpandedProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasChildrenProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HasChildrenProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewNode
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		object get_Content();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		void put_Content(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Parent")]
		global::Microsoft.UI.Xaml.Controls.TreeViewNode get_Parent();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsExpanded")]
		bool get_IsExpanded();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsExpanded")]
		void put_IsExpanded(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasChildren")]
		bool get_HasChildren();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Depth")]
		int get_Depth();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasUnrealizedChildren")]
		bool get_HasUnrealizedChildren();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HasUnrealizedChildren")]
		void put_HasUnrealizedChildren(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Children")]
		global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode> get_Children();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewItemInvokedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InvokedItem")]
		object get_InvokedItem();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Handled")]
		void put_Handled(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Handled")]
		bool get_Handled();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewExpandingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Node")]
		global::Microsoft.UI.Xaml.Controls.TreeViewNode get_Node();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewExpandingEventArgs2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Item")]
		object get_Item();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewCollapsedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Node")]
		global::Microsoft.UI.Xaml.Controls.TreeViewNode get_Node();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewCollapsedEventArgs2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Item")]
		object get_Item();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeView2
	{
		global::Microsoft.UI.Xaml.Controls.TreeViewNode NodeFromContainer(global::Windows.UI.Xaml.DependencyObject container);

		global::Windows.UI.Xaml.DependencyObject ContainerFromNode(global::Microsoft.UI.Xaml.Controls.TreeViewNode node);

		object ItemFromContainer(global::Windows.UI.Xaml.DependencyObject container);

		global::Windows.UI.Xaml.DependencyObject ContainerFromItem(object item);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanDragItems")]
		bool get_CanDragItems();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CanDragItems")]
		void put_CanDragItems(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanReorderItems")]
		bool get_CanReorderItems();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CanReorderItems")]
		void put_CanReorderItems(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemTemplate")]
		global::Windows.UI.Xaml.DataTemplate get_ItemTemplate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemTemplate")]
		void put_ItemTemplate(global::Windows.UI.Xaml.DataTemplate value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemTemplateSelector")]
		global::Windows.UI.Xaml.Controls.DataTemplateSelector get_ItemTemplateSelector();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemTemplateSelector")]
		void put_ItemTemplateSelector(global::Windows.UI.Xaml.Controls.DataTemplateSelector value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemContainerStyle")]
		global::Windows.UI.Xaml.Style get_ItemContainerStyle();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemContainerStyle")]
		void put_ItemContainerStyle(global::Windows.UI.Xaml.Style value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemContainerStyleSelector")]
		global::Windows.UI.Xaml.Controls.StyleSelector get_ItemContainerStyleSelector();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemContainerStyleSelector")]
		void put_ItemContainerStyleSelector(global::Windows.UI.Xaml.Controls.StyleSelector value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemContainerTransitions")]
		global::Windows.UI.Xaml.Media.Animation.TransitionCollection get_ItemContainerTransitions();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemContainerTransitions")]
		void put_ItemContainerTransitions(global::Windows.UI.Xaml.Media.Animation.TransitionCollection value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSource")]
		object get_ItemsSource();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemsSource")]
		void put_ItemsSource(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragItemsStarting")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragItemsStarting(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewDragItemsStartingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragItemsStarting")]
		void remove_DragItemsStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragItemsCompleted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragItemsCompleted(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TreeView, global::Microsoft.UI.Xaml.Controls.TreeViewDragItemsCompletedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragItemsCompleted")]
		void remove_DragItemsCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedNode")]
		global::Microsoft.UI.Xaml.Controls.TreeViewNode get_SelectedNode();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectedNode")]
		void put_SelectedNode(global::Microsoft.UI.Xaml.Controls.TreeViewNode value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedItem")]
		object get_SelectedItem();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectedItem")]
		void put_SelectedItem(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedItems")]
		global::System.Collections.Generic.IList<object> get_SelectedItems();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewDragItemsStartingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cancel")]
		bool get_Cancel();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Cancel")]
		void put_Cancel(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Data")]
		global::Windows.ApplicationModel.DataTransfer.DataPackage get_Data();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Items")]
		global::System.Collections.Generic.IList<object> get_Items();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewDragItemsCompletedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DropResult")]
		global::Windows.ApplicationModel.DataTransfer.DataPackageOperation get_DropResult();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Items")]
		global::System.Collections.Generic.IReadOnlyList<object> get_Items();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITreeViewDragItemsCompletedEventArgs2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NewParentItem")]
		object get_NewParentItem();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITwoPaneViewFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITwoPaneViewStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Pane1Property")]
		global::Windows.UI.Xaml.DependencyProperty get_Pane1Property();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Pane2Property")]
		global::Windows.UI.Xaml.DependencyProperty get_Pane2Property();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Pane1LengthProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_Pane1LengthProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Pane2LengthProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_Pane2LengthProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PanePriorityProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_PanePriorityProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ModeProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ModeProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WideModeConfigurationProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_WideModeConfigurationProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TallModeConfigurationProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TallModeConfigurationProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinWideModeWidthProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MinWideModeWidthProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinTallModeHeightProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MinTallModeHeightProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITwoPaneView
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Pane1")]
		global::Windows.UI.Xaml.UIElement get_Pane1();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Pane1")]
		void put_Pane1(global::Windows.UI.Xaml.UIElement value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Pane2")]
		global::Windows.UI.Xaml.UIElement get_Pane2();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Pane2")]
		void put_Pane2(global::Windows.UI.Xaml.UIElement value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Pane1Length")]
		global::Windows.UI.Xaml.GridLength get_Pane1Length();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Pane1Length")]
		void put_Pane1Length(global::Windows.UI.Xaml.GridLength value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Pane2Length")]
		global::Windows.UI.Xaml.GridLength get_Pane2Length();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Pane2Length")]
		void put_Pane2Length(global::Windows.UI.Xaml.GridLength value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PanePriority")]
		global::Microsoft.UI.Xaml.Controls.TwoPaneViewPriority get_PanePriority();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PanePriority")]
		void put_PanePriority(global::Microsoft.UI.Xaml.Controls.TwoPaneViewPriority value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Mode")]
		global::Microsoft.UI.Xaml.Controls.TwoPaneViewMode get_Mode();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WideModeConfiguration")]
		global::Microsoft.UI.Xaml.Controls.TwoPaneViewWideModeConfiguration get_WideModeConfiguration();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "WideModeConfiguration")]
		void put_WideModeConfiguration(global::Microsoft.UI.Xaml.Controls.TwoPaneViewWideModeConfiguration value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TallModeConfiguration")]
		global::Microsoft.UI.Xaml.Controls.TwoPaneViewTallModeConfiguration get_TallModeConfiguration();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TallModeConfiguration")]
		void put_TallModeConfiguration(global::Microsoft.UI.Xaml.Controls.TwoPaneViewTallModeConfiguration value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinWideModeWidth")]
		double get_MinWideModeWidth();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinWideModeWidth")]
		void put_MinWideModeWidth(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinTallModeHeight")]
		double get_MinTallModeHeight();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinTallModeHeight")]
		void put_MinTallModeHeight(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ModeChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ModeChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.TwoPaneView, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ModeChanged")]
		void remove_ModeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUniformGridLayoutFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUniformGridLayoutStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OrientationProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_OrientationProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinItemWidthProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MinItemWidthProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinItemHeightProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MinItemHeightProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinRowSpacingProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MinRowSpacingProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinColumnSpacingProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MinColumnSpacingProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsJustificationProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ItemsJustificationProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsStretchProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ItemsStretchProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaximumRowsOrColumnsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MaximumRowsOrColumnsProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUniformGridLayout
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Orientation")]
		global::Windows.UI.Xaml.Controls.Orientation get_Orientation();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Orientation")]
		void put_Orientation(global::Windows.UI.Xaml.Controls.Orientation value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinItemWidth")]
		double get_MinItemWidth();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinItemWidth")]
		void put_MinItemWidth(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinItemHeight")]
		double get_MinItemHeight();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinItemHeight")]
		void put_MinItemHeight(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinRowSpacing")]
		double get_MinRowSpacing();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinRowSpacing")]
		void put_MinRowSpacing(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinColumnSpacing")]
		double get_MinColumnSpacing();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinColumnSpacing")]
		void put_MinColumnSpacing(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsJustification")]
		global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification get_ItemsJustification();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemsJustification")]
		void put_ItemsJustification(global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsJustification value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsStretch")]
		global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch get_ItemsStretch();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemsStretch")]
		void put_ItemsStretch(global::Microsoft.UI.Xaml.Controls.UniformGridLayoutItemsStretch value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaximumRowsOrColumns")]
		int get_MaximumRowsOrColumns();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaximumRowsOrColumns")]
		void put_MaximumRowsOrColumns(int value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWebView2Factory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWebView2Statics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SourceProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanGoForwardProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CanGoForwardProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanGoBackProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CanGoBackProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWebView2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CoreWebView2")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2 get_CoreWebView2();

		global::Windows.Foundation.IAsyncAction EnsureCoreWebView2Async();

		global::Windows.Foundation.IAsyncOperation<string> ExecuteScriptAsync(string javascriptCode);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		global::System.Uri get_Source();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Source")]
		void put_Source(global::System.Uri value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanGoForward")]
		bool get_CanGoForward();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CanGoForward")]
		void put_CanGoForward(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanGoBack")]
		bool get_CanGoBack();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CanGoBack")]
		void put_CanGoBack(bool value);

		void Reload();

		void GoForward();

		void GoBack();

		void NavigateToString(string htmlContent);

		void Close();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationCompleted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationCompleted(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationCompleted")]
		void remove_NavigationCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "WebMessageReceived")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_WebMessageReceived(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "WebMessageReceived")]
		void remove_WebMessageReceived(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationStarting")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationStarting(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationStarting")]
		void remove_NavigationStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CoreProcessFailed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CoreProcessFailed(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CoreProcessFailed")]
		void remove_CoreProcessFailed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CoreWebView2Initialized")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CoreWebView2Initialized(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.WebView2, global::Microsoft.UI.Xaml.Controls.CoreWebView2InitializedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CoreWebView2Initialized")]
		void remove_CoreWebView2Initialized(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreWebView2InitializedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Exception")]
		global::System.Exception get_Exception();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimatedVisual2 : global::Microsoft.UI.Xaml.Controls.IAnimatedVisual, global::System.IDisposable
	{
		void CreateAnimations();

		void DestroyAnimations();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimatedVisualSource3
	{
		global::Microsoft.UI.Xaml.Controls.IAnimatedVisual2 TryCreateAnimatedVisual(
					global::Windows.UI.Composition.Compositor compositor, 
					out object diagnostics, 
					bool createAnimations);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDynamicAnimatedVisualSource : global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AnimatedVisualInvalidated")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AnimatedVisualInvalidated(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.IDynamicAnimatedVisualSource, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AnimatedVisualInvalidated")]
		void remove_AnimatedVisualInvalidated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IKeyIndexMapping
	{
		string KeyFromIndex(int index);

		int IndexFromKey(string key);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRefreshInteractionRatioChangedEventArgs
	{
		double get_InteractionRatio();
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ControlsResourcesVersion
	{
		Version1 = 1,
		Version2 = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum PlayerAnimationOptimization
	{
		Latency = 0,
		Resources = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ColorPickerHsvChannel
	{
		Hue = 0,
		Saturation = 1,
		Value = 2,
		Alpha = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ColorSpectrumShape
	{
		Box = 0,
		Ring = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ColorSpectrumComponents
	{
		HueValue = 0,
		ValueHue = 1,
		HueSaturation = 2,
		SaturationHue = 3,
		SaturationValue = 4,
		ValueSaturation = 5,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ExpandDirection
	{
		Down = 0,
		Up = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum InfoBarSeverity
	{
		Informational = 0,
		Success = 1,
		Warning = 2,
		Error = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum InfoBarCloseReason
	{
		CloseButton = 0,
		Programmatic = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum NavigationViewDisplayMode
	{
		Minimal = 0,
		Compact = 1,
		Expanded = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum NavigationViewBackButtonVisible
	{
		Collapsed = 0,
		Visible = 1,
		Auto = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum NavigationViewPaneDisplayMode
	{
		Auto = 0,
		Left = 1,
		Top = 2,
		LeftCompact = 3,
		LeftMinimal = 4,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum NavigationViewSelectionFollowsFocus
	{
		Disabled = 0,
		Enabled = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum NavigationViewShoulderNavigationEnabled
	{
		WhenSelectionFollowsFocus = 0,
		Always = 1,
		Never = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum NavigationViewOverflowLabelMode
	{
		MoreLabel = 0,
		NoLabel = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum NumberBoxValidationMode
	{
		InvalidInputOverwritten = 0,
		Disabled = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum NumberBoxSpinButtonPlacementMode
	{
		Hidden = 0,
		Compact = 1,
		Inline = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum PipsPagerButtonVisibility
	{
		Visible = 0,
		VisibleOnPointerOver = 1,
		Collapsed = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum TabViewWidthMode
	{
		Equal = 0,
		SizeToContent = 1,
		Compact = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum TabViewCloseButtonOverlayMode
	{
		Auto = 0,
		OnPointerOver = 1,
		Always = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum TeachingTipTailVisibility
	{
		Auto = 0,
		Visible = 1,
		Collapsed = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum TeachingTipPlacementMode
	{
		Auto = 0,
		Top = 1,
		Bottom = 2,
		Left = 3,
		Right = 4,
		TopRight = 5,
		TopLeft = 6,
		BottomRight = 7,
		BottomLeft = 8,
		LeftTop = 9,
		LeftBottom = 10,
		RightTop = 11,
		RightBottom = 12,
		Center = 13,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum TeachingTipHeroContentPlacementMode
	{
		Auto = 0,
		Top = 1,
		Bottom = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum TeachingTipCloseReason
	{
		CloseButton = 0,
		LightDismiss = 1,
		Programmatic = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ParallaxSourceOffsetKind
	{
		Absolute = 0,
		Relative = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum RefreshVisualizerOrientation
	{
		Auto = 0,
		Normal = 1,
		Rotate90DegreesCounterclockwise = 2,
		Rotate270DegreesCounterclockwise = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum RefreshVisualizerState
	{
		Idle = 0,
		Peeking = 1,
		Interacting = 2,
		Pending = 3,
		Refreshing = 4,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum RefreshPullDirection
	{
		LeftToRight = 0,
		TopToBottom = 1,
		RightToLeft = 2,
		BottomToTop = 3,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ElementRealizationOptions : uint
	{
		None = 0x0u,
		ForceCreate = 0x1u,
		SuppressAutoRecycle = 0x2u,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum SwipeMode
	{
		Reveal = 0,
		Execute = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum SwipeBehaviorOnInvoked
	{
		Auto = 0,
		Close = 1,
		RemainOpen = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum TreeViewSelectionMode
	{
		None = 0,
		Single = 1,
		Multiple = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum TwoPaneViewPriority
	{
		Pane1 = 0,
		Pane2 = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum TwoPaneViewMode
	{
		SinglePane = 0,
		Wide = 1,
		Tall = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum TwoPaneViewWideModeConfiguration
	{
		SinglePane = 0,
		LeftRight = 1,
		RightLeft = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum TwoPaneViewTallModeConfiguration
	{
		SinglePane = 0,
		TopBottom = 1,
		BottomTop = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum UniformGridLayoutItemsJustification
	{
		Start = 0,
		Center = 1,
		End = 2,
		SpaceAround = 3,
		SpaceBetween = 4,
		SpaceEvenly = 5,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum UniformGridLayoutItemsStretch
	{
		None = 0,
		Fill = 1,
		Uniform = 2,
	}
}

namespace Microsoft.UI.Xaml.Controls.AnimatedVisuals
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AnimatedAcceptVisualSource : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource, global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AnimatedAcceptVisualSource()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedAcceptVisualSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public global::Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(
					global::Windows.UI.Composition.Compositor compositor, 
					out object diagnostics)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisual __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource__Impl.Stubs.TryCreateAnimatedVisual(
								this, 
								compositor, 
								out diagnostics
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Markers")]
		public global::System.Collections.Generic.IReadOnlyDictionary<string, double> get_Markers()
		{
			global::System.Collections.Generic.IReadOnlyDictionary<string, double> __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2__Impl.Stubs.get_Markers(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public void SetColorProperty(
					string propertyName, 
					global::Windows.UI.Color value)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2__Impl.Stubs.SetColorProperty(
								this, 
								propertyName, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public AnimatedAcceptVisualSource(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AnimatedBackVisualSource : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource, global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AnimatedBackVisualSource()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedBackVisualSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public global::Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(
					global::Windows.UI.Composition.Compositor compositor, 
					out object diagnostics)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisual __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource__Impl.Stubs.TryCreateAnimatedVisual(
								this, 
								compositor, 
								out diagnostics
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Markers")]
		public global::System.Collections.Generic.IReadOnlyDictionary<string, double> get_Markers()
		{
			global::System.Collections.Generic.IReadOnlyDictionary<string, double> __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2__Impl.Stubs.get_Markers(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public void SetColorProperty(
					string propertyName, 
					global::Windows.UI.Color value)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2__Impl.Stubs.SetColorProperty(
								this, 
								propertyName, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public AnimatedBackVisualSource(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AnimatedChevronDownSmallVisualSource : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource, global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AnimatedChevronDownSmallVisualSource()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedChevronDownSmallVisualSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public global::Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(
					global::Windows.UI.Composition.Compositor compositor, 
					out object diagnostics)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisual __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource__Impl.Stubs.TryCreateAnimatedVisual(
								this, 
								compositor, 
								out diagnostics
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Markers")]
		public global::System.Collections.Generic.IReadOnlyDictionary<string, double> get_Markers()
		{
			global::System.Collections.Generic.IReadOnlyDictionary<string, double> __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2__Impl.Stubs.get_Markers(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public void SetColorProperty(
					string propertyName, 
					global::Windows.UI.Color value)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2__Impl.Stubs.SetColorProperty(
								this, 
								propertyName, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public AnimatedChevronDownSmallVisualSource(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AnimatedChevronRightDownSmallVisualSource : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource, global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AnimatedChevronRightDownSmallVisualSource()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedChevronRightDownSmallVisualSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public global::Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(
					global::Windows.UI.Composition.Compositor compositor, 
					out object diagnostics)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisual __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource__Impl.Stubs.TryCreateAnimatedVisual(
								this, 
								compositor, 
								out diagnostics
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Markers")]
		public global::System.Collections.Generic.IReadOnlyDictionary<string, double> get_Markers()
		{
			global::System.Collections.Generic.IReadOnlyDictionary<string, double> __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2__Impl.Stubs.get_Markers(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public void SetColorProperty(
					string propertyName, 
					global::Windows.UI.Color value)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2__Impl.Stubs.SetColorProperty(
								this, 
								propertyName, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public AnimatedChevronRightDownSmallVisualSource(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AnimatedChevronUpDownSmallVisualSource : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource, global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AnimatedChevronUpDownSmallVisualSource()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedChevronUpDownSmallVisualSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public global::Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(
					global::Windows.UI.Composition.Compositor compositor, 
					out object diagnostics)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisual __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource__Impl.Stubs.TryCreateAnimatedVisual(
								this, 
								compositor, 
								out diagnostics
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Markers")]
		public global::System.Collections.Generic.IReadOnlyDictionary<string, double> get_Markers()
		{
			global::System.Collections.Generic.IReadOnlyDictionary<string, double> __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2__Impl.Stubs.get_Markers(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public void SetColorProperty(
					string propertyName, 
					global::Windows.UI.Color value)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2__Impl.Stubs.SetColorProperty(
								this, 
								propertyName, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public AnimatedChevronUpDownSmallVisualSource(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AnimatedFindVisualSource : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource, global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AnimatedFindVisualSource()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedFindVisualSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public global::Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(
					global::Windows.UI.Composition.Compositor compositor, 
					out object diagnostics)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisual __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource__Impl.Stubs.TryCreateAnimatedVisual(
								this, 
								compositor, 
								out diagnostics
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Markers")]
		public global::System.Collections.Generic.IReadOnlyDictionary<string, double> get_Markers()
		{
			global::System.Collections.Generic.IReadOnlyDictionary<string, double> __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2__Impl.Stubs.get_Markers(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public void SetColorProperty(
					string propertyName, 
					global::Windows.UI.Color value)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2__Impl.Stubs.SetColorProperty(
								this, 
								propertyName, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public AnimatedFindVisualSource(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AnimatedGlobalNavigationButtonVisualSource : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource, global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AnimatedGlobalNavigationButtonVisualSource()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedGlobalNavigationButtonVisualSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public global::Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(
					global::Windows.UI.Composition.Compositor compositor, 
					out object diagnostics)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisual __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource__Impl.Stubs.TryCreateAnimatedVisual(
								this, 
								compositor, 
								out diagnostics
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Markers")]
		public global::System.Collections.Generic.IReadOnlyDictionary<string, double> get_Markers()
		{
			global::System.Collections.Generic.IReadOnlyDictionary<string, double> __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2__Impl.Stubs.get_Markers(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public void SetColorProperty(
					string propertyName, 
					global::Windows.UI.Color value)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2__Impl.Stubs.SetColorProperty(
								this, 
								propertyName, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public AnimatedGlobalNavigationButtonVisualSource(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AnimatedSettingsVisualSource : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource, global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AnimatedSettingsVisualSource()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedSettingsVisualSource");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public global::Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(
					global::Windows.UI.Composition.Compositor compositor, 
					out object diagnostics)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisual __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource__Impl.Stubs.TryCreateAnimatedVisual(
								this, 
								compositor, 
								out diagnostics
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Markers")]
		public global::System.Collections.Generic.IReadOnlyDictionary<string, double> get_Markers()
		{
			global::System.Collections.Generic.IReadOnlyDictionary<string, double> __retVal = global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2__Impl.Stubs.get_Markers(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public void SetColorProperty(
					string propertyName, 
					global::Windows.UI.Color value)
		{
			global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2__Impl.Stubs.SetColorProperty(
								this, 
								propertyName, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public AnimatedSettingsVisualSource(global::System.IntPtr dummy)
		{
		}
	}
}

namespace Microsoft.UI.Xaml.Controls.Primitives
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSlider))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ColorPickerSlider : global::Windows.UI.Xaml.Controls.Slider, global::Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSlider
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ColorPickerSlider() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorPickerSliderFactory_CreateInstance("Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorPickerSliderFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSliderFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSliderFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSliderFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSliderFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColorChannel")]
		public virtual global::Microsoft.UI.Xaml.Controls.ColorPickerHsvChannel get_ColorChannel()
		{
			global::Microsoft.UI.Xaml.Controls.ColorPickerHsvChannel __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSlider__Impl.Stubs.get_ColorChannel(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ColorChannel")]
		public virtual void put_ColorChannel(global::Microsoft.UI.Xaml.Controls.ColorPickerHsvChannel value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSlider__Impl.Stubs.put_ColorChannel(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColorChannelProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ColorChannelProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorPickerSliderStatics_get_ColorChannelProperty("Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorPickerSliderStatics_get_ColorChannelProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSliderStatics__Impl.Stubs.get_ColorChannelProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSliderStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public ColorPickerSlider(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ColorSpectrum : global::Windows.UI.Xaml.Controls.Control, global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ColorSpectrum() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorSpectrumFactory_CreateInstance("Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorSpectrumFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Color")]
		public virtual global::Windows.UI.Color get_Color()
		{
			global::Windows.UI.Color __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum__Impl.Stubs.get_Color(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Color")]
		public virtual void put_Color(global::Windows.UI.Color value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum__Impl.Stubs.put_Color(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HsvColor")]
		public virtual global::System.Numerics.Vector4 get_HsvColor()
		{
			global::System.Numerics.Vector4 __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum__Impl.Stubs.get_HsvColor(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HsvColor")]
		public virtual void put_HsvColor(global::System.Numerics.Vector4 value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum__Impl.Stubs.put_HsvColor(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinHue")]
		public virtual int get_MinHue()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum__Impl.Stubs.get_MinHue(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinHue")]
		public virtual void put_MinHue(int value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum__Impl.Stubs.put_MinHue(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxHue")]
		public virtual int get_MaxHue()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum__Impl.Stubs.get_MaxHue(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxHue")]
		public virtual void put_MaxHue(int value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum__Impl.Stubs.put_MaxHue(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinSaturation")]
		public virtual int get_MinSaturation()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum__Impl.Stubs.get_MinSaturation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinSaturation")]
		public virtual void put_MinSaturation(int value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum__Impl.Stubs.put_MinSaturation(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxSaturation")]
		public virtual int get_MaxSaturation()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum__Impl.Stubs.get_MaxSaturation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxSaturation")]
		public virtual void put_MaxSaturation(int value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum__Impl.Stubs.put_MaxSaturation(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinValue")]
		public virtual int get_MinValue()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum__Impl.Stubs.get_MinValue(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinValue")]
		public virtual void put_MinValue(int value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum__Impl.Stubs.put_MinValue(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxValue")]
		public virtual int get_MaxValue()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum__Impl.Stubs.get_MaxValue(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxValue")]
		public virtual void put_MaxValue(int value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum__Impl.Stubs.put_MaxValue(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Shape")]
		public virtual global::Microsoft.UI.Xaml.Controls.ColorSpectrumShape get_Shape()
		{
			global::Microsoft.UI.Xaml.Controls.ColorSpectrumShape __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum__Impl.Stubs.get_Shape(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Shape")]
		public virtual void put_Shape(global::Microsoft.UI.Xaml.Controls.ColorSpectrumShape value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum__Impl.Stubs.put_Shape(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Components")]
		public virtual global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents get_Components()
		{
			global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum__Impl.Stubs.get_Components(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Components")]
		public virtual void put_Components(global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum__Impl.Stubs.put_Components(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ColorChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ColorChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum, global::Microsoft.UI.Xaml.Controls.ColorChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum__Impl.Stubs.add_ColorChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ColorChanged")]
		public virtual void remove_ColorChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum__Impl.Stubs.remove_ColorChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColorProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ColorProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorSpectrumStatics_get_ColorProperty("Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorSpectrumStatics_get_ColorProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics__Impl.Stubs.get_ColorProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HsvColorProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HsvColorProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorSpectrumStatics_get_HsvColorProperty("Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorSpectrumStatics_get_HsvColorProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics__Impl.Stubs.get_HsvColorProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinHueProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MinHueProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorSpectrumStatics_get_MinHueProperty("Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorSpectrumStatics_get_MinHueProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics__Impl.Stubs.get_MinHueProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxHueProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MaxHueProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorSpectrumStatics_get_MaxHueProperty("Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorSpectrumStatics_get_MaxHueProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics__Impl.Stubs.get_MaxHueProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinSaturationProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MinSaturationProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorSpectrumStatics_get_MinSaturationProperty("Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorSpectrumStatics_get_MinSaturationProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics__Impl.Stubs.get_MinSaturationProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxSaturationProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MaxSaturationProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorSpectrumStatics_get_MaxSaturationProperty("Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorSpectrumStatics_get_MaxSaturationProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics__Impl.Stubs.get_MaxSaturationProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinValueProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MinValueProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorSpectrumStatics_get_MinValueProperty("Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorSpectrumStatics_get_MinValueProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics__Impl.Stubs.get_MinValueProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxValueProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MaxValueProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorSpectrumStatics_get_MaxValueProperty("Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorSpectrumStatics_get_MaxValueProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics__Impl.Stubs.get_MaxValueProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShapeProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ShapeProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorSpectrumStatics_get_ShapeProperty("Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorSpectrumStatics_get_ShapeProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics__Impl.Stubs.get_ShapeProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ComponentsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ComponentsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorSpectrumStatics_get_ComponentsProperty("Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColorSpectrumStatics_get_ComponentsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics__Impl.Stubs.get_ComponentsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public ColorSpectrum(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IAutoSuggestBoxHelper))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AutoSuggestBoxHelper : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.Primitives.IAutoSuggestBoxHelper
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "KeepInteriorCornersSquareProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_KeepInteriorCornersSquareProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IAutoSuggestBoxHelperStatics_get_KeepInteriorCornersSquareProperty("Microsoft.UI.Xaml.Controls.Primitives.AutoSuggestBoxHelper");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__IAutoSuggestBoxHelperStatics_get_KeepInteriorCornersSquareProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IAutoSuggestBoxHelperStatics__Impl.Stubs.get_KeepInteriorCornersSquareProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IAutoSuggestBoxHelperStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static void SetKeepInteriorCornersSquare(
					global::Windows.UI.Xaml.Controls.AutoSuggestBox autoSuggestBox, 
					bool value)
		{
			__Factory_Microsoft_UI_Xaml_Controls_Primitives__IAutoSuggestBoxHelperStatics_SetKeepInteriorCornersSquare(
								"Microsoft.UI.Xaml.Controls.Primitives.AutoSuggestBoxHelper", 
								autoSuggestBox, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Microsoft_UI_Xaml_Controls_Primitives__IAutoSuggestBoxHelperStatics_SetKeepInteriorCornersSquare(
					string typeName, 
					global::Windows.UI.Xaml.Controls.AutoSuggestBox autoSuggestBox, 
					bool value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.IAutoSuggestBoxHelperStatics__Impl.Stubs.SetKeepInteriorCornersSquare(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IAutoSuggestBoxHelperStatics).TypeHandle
												), 
								autoSuggestBox, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static bool GetKeepInteriorCornersSquare(global::Windows.UI.Xaml.Controls.AutoSuggestBox autoSuggestBox)
		{
			bool retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IAutoSuggestBoxHelperStatics_GetKeepInteriorCornersSquare(
								"Microsoft.UI.Xaml.Controls.Primitives.AutoSuggestBoxHelper", 
								autoSuggestBox
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static bool __Factory_Microsoft_UI_Xaml_Controls_Primitives__IAutoSuggestBoxHelperStatics_GetKeepInteriorCornersSquare(
					string typeName, 
					global::Windows.UI.Xaml.Controls.AutoSuggestBox autoSuggestBox)
		{
			bool __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IAutoSuggestBoxHelperStatics__Impl.Stubs.GetKeepInteriorCornersSquare(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IAutoSuggestBoxHelperStatics).TypeHandle
												), 
								autoSuggestBox
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public AutoSuggestBoxHelper(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayout))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ColumnMajorUniformToLargestGridLayout : global::Microsoft.UI.Xaml.Controls.NonVirtualizingLayout, global::Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayout
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ColumnMajorUniformToLargestGridLayout() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColumnMajorUniformToLargestGridLayoutFactory_CreateInstance("Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColumnMajorUniformToLargestGridLayoutFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayoutFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayoutFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayoutFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayoutFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxColumns")]
		public virtual int get_MaxColumns()
		{
			int __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayout__Impl.Stubs.get_MaxColumns(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxColumns")]
		public virtual void put_MaxColumns(int value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayout__Impl.Stubs.put_MaxColumns(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColumnSpacing")]
		public virtual double get_ColumnSpacing()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayout__Impl.Stubs.get_ColumnSpacing(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ColumnSpacing")]
		public virtual void put_ColumnSpacing(double value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayout__Impl.Stubs.put_ColumnSpacing(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RowSpacing")]
		public virtual double get_RowSpacing()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayout__Impl.Stubs.get_RowSpacing(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "RowSpacing")]
		public virtual void put_RowSpacing(double value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayout__Impl.Stubs.put_RowSpacing(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxColumnsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MaxColumnsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColumnMajorUniformToLargestGridLayoutStatics_get_MaxColumnsProperty("Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColumnMajorUniformToLargestGridLayoutStatics_get_MaxColumnsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayoutStatics__Impl.Stubs.get_MaxColumnsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayoutStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColumnSpacingProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ColumnSpacingProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColumnMajorUniformToLargestGridLayoutStatics_get_ColumnSpacingProperty("Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColumnMajorUniformToLargestGridLayoutStatics_get_ColumnSpacingProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayoutStatics__Impl.Stubs.get_ColumnSpacingProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayoutStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RowSpacingProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_RowSpacingProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColumnMajorUniformToLargestGridLayoutStatics_get_RowSpacingProperty("Microsoft.UI.Xaml.Controls.Primitives.ColumnMajorUniformToLargestGridLayout");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__IColumnMajorUniformToLargestGridLayoutStatics_get_RowSpacingProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayoutStatics__Impl.Stubs.get_RowSpacingProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IColumnMajorUniformToLargestGridLayoutStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public ColumnMajorUniformToLargestGridLayout(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IComboBoxHelper))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ComboBoxHelper : global::System.__ComObject, global::Microsoft.UI.Xaml.Controls.Primitives.IComboBoxHelper
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "KeepInteriorCornersSquareProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_KeepInteriorCornersSquareProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IComboBoxHelperStatics_get_KeepInteriorCornersSquareProperty("Microsoft.UI.Xaml.Controls.Primitives.ComboBoxHelper");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__IComboBoxHelperStatics_get_KeepInteriorCornersSquareProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IComboBoxHelperStatics__Impl.Stubs.get_KeepInteriorCornersSquareProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IComboBoxHelperStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static void SetKeepInteriorCornersSquare(
					global::Windows.UI.Xaml.Controls.ComboBox comboBox, 
					bool value)
		{
			__Factory_Microsoft_UI_Xaml_Controls_Primitives__IComboBoxHelperStatics_SetKeepInteriorCornersSquare(
								"Microsoft.UI.Xaml.Controls.Primitives.ComboBoxHelper", 
								comboBox, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Microsoft_UI_Xaml_Controls_Primitives__IComboBoxHelperStatics_SetKeepInteriorCornersSquare(
					string typeName, 
					global::Windows.UI.Xaml.Controls.ComboBox comboBox, 
					bool value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.IComboBoxHelperStatics__Impl.Stubs.SetKeepInteriorCornersSquare(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IComboBoxHelperStatics).TypeHandle
												), 
								comboBox, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static bool GetKeepInteriorCornersSquare(global::Windows.UI.Xaml.Controls.ComboBox comboBox)
		{
			bool retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IComboBoxHelperStatics_GetKeepInteriorCornersSquare(
								"Microsoft.UI.Xaml.Controls.Primitives.ComboBoxHelper", 
								comboBox
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static bool __Factory_Microsoft_UI_Xaml_Controls_Primitives__IComboBoxHelperStatics_GetKeepInteriorCornersSquare(
					string typeName, 
					global::Windows.UI.Xaml.Controls.ComboBox comboBox)
		{
			bool __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IComboBoxHelperStatics__Impl.Stubs.GetKeepInteriorCornersSquare(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IComboBoxHelperStatics).TypeHandle
												), 
								comboBox
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public ComboBoxHelper(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBar))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class CommandBarFlyoutCommandBar : global::Windows.UI.Xaml.Controls.CommandBar, global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBar
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public CommandBarFlyoutCommandBar() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__ICommandBarFlyoutCommandBarFactory_CreateInstance("Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls_Primitives__ICommandBarFlyoutCommandBarFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FlyoutTemplateSettings")]
		public virtual global::Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings get_FlyoutTemplateSettings()
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBar__Impl.Stubs.get_FlyoutTemplateSettings(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CommandBarFlyoutCommandBar(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CommandBarFlyoutCommandBarTemplateSettings : global::Windows.UI.Xaml.DependencyObject, global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OpenAnimationStartPosition")]
		public double get_OpenAnimationStartPosition()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings__Impl.Stubs.get_OpenAnimationStartPosition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OpenAnimationEndPosition")]
		public double get_OpenAnimationEndPosition()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings__Impl.Stubs.get_OpenAnimationEndPosition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseAnimationEndPosition")]
		public double get_CloseAnimationEndPosition()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings__Impl.Stubs.get_CloseAnimationEndPosition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CurrentWidth")]
		public double get_CurrentWidth()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings__Impl.Stubs.get_CurrentWidth(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandedWidth")]
		public double get_ExpandedWidth()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings__Impl.Stubs.get_ExpandedWidth(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WidthExpansionDelta")]
		public double get_WidthExpansionDelta()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings__Impl.Stubs.get_WidthExpansionDelta(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WidthExpansionAnimationStartPosition")]
		public double get_WidthExpansionAnimationStartPosition()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings__Impl.Stubs.get_WidthExpansionAnimationStartPosition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WidthExpansionAnimationEndPosition")]
		public double get_WidthExpansionAnimationEndPosition()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings__Impl.Stubs.get_WidthExpansionAnimationEndPosition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WidthExpansionMoreButtonAnimationStartPosition")]
		public double get_WidthExpansionMoreButtonAnimationStartPosition()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings__Impl.Stubs.get_WidthExpansionMoreButtonAnimationStartPosition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WidthExpansionMoreButtonAnimationEndPosition")]
		public double get_WidthExpansionMoreButtonAnimationEndPosition()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings__Impl.Stubs.get_WidthExpansionMoreButtonAnimationEndPosition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandUpOverflowVerticalPosition")]
		public double get_ExpandUpOverflowVerticalPosition()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings__Impl.Stubs.get_ExpandUpOverflowVerticalPosition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandDownOverflowVerticalPosition")]
		public double get_ExpandDownOverflowVerticalPosition()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings__Impl.Stubs.get_ExpandDownOverflowVerticalPosition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandUpAnimationStartPosition")]
		public double get_ExpandUpAnimationStartPosition()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings__Impl.Stubs.get_ExpandUpAnimationStartPosition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandUpAnimationEndPosition")]
		public double get_ExpandUpAnimationEndPosition()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings__Impl.Stubs.get_ExpandUpAnimationEndPosition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandUpAnimationHoldPosition")]
		public double get_ExpandUpAnimationHoldPosition()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings__Impl.Stubs.get_ExpandUpAnimationHoldPosition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandDownAnimationStartPosition")]
		public double get_ExpandDownAnimationStartPosition()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings__Impl.Stubs.get_ExpandDownAnimationStartPosition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandDownAnimationEndPosition")]
		public double get_ExpandDownAnimationEndPosition()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings__Impl.Stubs.get_ExpandDownAnimationEndPosition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandDownAnimationHoldPosition")]
		public double get_ExpandDownAnimationHoldPosition()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings__Impl.Stubs.get_ExpandDownAnimationHoldPosition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentClipRect")]
		public global::Windows.Foundation.Rect get_ContentClipRect()
		{
			global::Windows.Foundation.Rect __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings__Impl.Stubs.get_ContentClipRect(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OverflowContentClipRect")]
		public global::Windows.Foundation.Rect get_OverflowContentClipRect()
		{
			global::Windows.Foundation.Rect __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings__Impl.Stubs.get_OverflowContentClipRect(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CommandBarFlyoutCommandBarTemplateSettings(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CommandBarFlyoutCommandBarAutomationProperties : global::System.__ComObject
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ControlTypeProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ControlTypeProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__ICommandBarFlyoutCommandBarAutomationPropertiesStatics_get_ControlTypeProperty("Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarAutomationProperties");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__ICommandBarFlyoutCommandBarAutomationPropertiesStatics_get_ControlTypeProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarAutomationPropertiesStatics__Impl.Stubs.get_ControlTypeProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarAutomationPropertiesStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static global::Windows.UI.Xaml.Automation.Peers.AutomationControlType GetControlType(global::Windows.UI.Xaml.UIElement element)
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationControlType retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__ICommandBarFlyoutCommandBarAutomationPropertiesStatics_GetControlType(
								"Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarAutomationProperties", 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.Automation.Peers.AutomationControlType __Factory_Microsoft_UI_Xaml_Controls_Primitives__ICommandBarFlyoutCommandBarAutomationPropertiesStatics_GetControlType(
					string typeName, 
					global::Windows.UI.Xaml.UIElement element)
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationControlType __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarAutomationPropertiesStatics__Impl.Stubs.GetControlType(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarAutomationPropertiesStatics).TypeHandle
												), 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static void SetControlType(
					global::Windows.UI.Xaml.UIElement element, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationControlType value)
		{
			__Factory_Microsoft_UI_Xaml_Controls_Primitives__ICommandBarFlyoutCommandBarAutomationPropertiesStatics_SetControlType(
								"Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarAutomationProperties", 
								element, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Microsoft_UI_Xaml_Controls_Primitives__ICommandBarFlyoutCommandBarAutomationPropertiesStatics_SetControlType(
					string typeName, 
					global::Windows.UI.Xaml.UIElement element, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationControlType value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarAutomationPropertiesStatics__Impl.Stubs.SetControlType(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarAutomationPropertiesStatics).TypeHandle
												), 
								element, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public CommandBarFlyoutCommandBarAutomationProperties(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusFilterConverter))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CornerRadiusFilterConverter : global::Windows.UI.Xaml.DependencyObject, global::Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusFilterConverter, global::Windows.UI.Xaml.Data.IValueConverter
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public CornerRadiusFilterConverter() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterConverter");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Filter")]
		public global::Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterKind get_Filter()
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterKind __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusFilterConverter__Impl.Stubs.get_Filter(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Filter")]
		public void put_Filter(global::Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterKind value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusFilterConverter__Impl.Stubs.put_Filter(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Scale")]
		public double get_Scale()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusFilterConverter__Impl.Stubs.get_Scale(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Scale")]
		public void put_Scale(double value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusFilterConverter__Impl.Stubs.put_Scale(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public object Convert(
					object value, 
					global::System.Type targetType, 
					object parameter, 
					string language)
		{
			object __retVal = global::Windows.UI.Xaml.Data.IValueConverter__Impl.Stubs.Convert(
								this, 
								value, 
								targetType, 
								parameter, 
								language
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public object ConvertBack(
					object value, 
					global::System.Type targetType, 
					object parameter, 
					string language)
		{
			object __retVal = global::Windows.UI.Xaml.Data.IValueConverter__Impl.Stubs.ConvertBack(
								this, 
								value, 
								targetType, 
								parameter, 
								language
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FilterProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_FilterProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__ICornerRadiusFilterConverterStatics_get_FilterProperty("Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterConverter");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__ICornerRadiusFilterConverterStatics_get_FilterProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusFilterConverterStatics__Impl.Stubs.get_FilterProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusFilterConverterStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ScaleProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ScaleProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__ICornerRadiusFilterConverterStatics_get_ScaleProperty("Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterConverter");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__ICornerRadiusFilterConverterStatics_get_ScaleProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusFilterConverterStatics__Impl.Stubs.get_ScaleProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusFilterConverterStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public CornerRadiusFilterConverter(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusToThicknessConverter))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Data.IValueConverter))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CornerRadiusToThicknessConverter : global::Windows.UI.Xaml.DependencyObject, global::Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusToThicknessConverter, global::Windows.UI.Xaml.Data.IValueConverter
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public CornerRadiusToThicknessConverter() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverter");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ConversionKind")]
		public global::Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverterKind get_ConversionKind()
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverterKind __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusToThicknessConverter__Impl.Stubs.get_ConversionKind(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ConversionKind")]
		public void put_ConversionKind(global::Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverterKind value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusToThicknessConverter__Impl.Stubs.put_ConversionKind(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Multiplier")]
		public double get_Multiplier()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusToThicknessConverter__Impl.Stubs.get_Multiplier(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Multiplier")]
		public void put_Multiplier(double value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusToThicknessConverter__Impl.Stubs.put_Multiplier(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public object Convert(
					object value, 
					global::System.Type targetType, 
					object parameter, 
					string language)
		{
			object __retVal = global::Windows.UI.Xaml.Data.IValueConverter__Impl.Stubs.Convert(
								this, 
								value, 
								targetType, 
								parameter, 
								language
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public object ConvertBack(
					object value, 
					global::System.Type targetType, 
					object parameter, 
					string language)
		{
			object __retVal = global::Windows.UI.Xaml.Data.IValueConverter__Impl.Stubs.ConvertBack(
								this, 
								value, 
								targetType, 
								parameter, 
								language
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ConversionKindProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ConversionKindProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__ICornerRadiusToThicknessConverterStatics_get_ConversionKindProperty("Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverter");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__ICornerRadiusToThicknessConverterStatics_get_ConversionKindProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusToThicknessConverterStatics__Impl.Stubs.get_ConversionKindProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusToThicknessConverterStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MultiplierProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MultiplierProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__ICornerRadiusToThicknessConverterStatics_get_MultiplierProperty("Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverter");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__ICornerRadiusToThicknessConverterStatics_get_MultiplierProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusToThicknessConverterStatics__Impl.Stubs.get_MultiplierProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ICornerRadiusToThicknessConverterStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public CornerRadiusToThicknessConverter(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanel))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class InfoBarPanel : global::Windows.UI.Xaml.Controls.Panel, global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanel
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public InfoBarPanel() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IInfoBarPanelFactory_CreateInstance("Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls_Primitives__IInfoBarPanelFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalOrientationPadding")]
		public virtual global::Windows.UI.Xaml.Thickness get_HorizontalOrientationPadding()
		{
			global::Windows.UI.Xaml.Thickness __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanel__Impl.Stubs.get_HorizontalOrientationPadding(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalOrientationPadding")]
		public virtual void put_HorizontalOrientationPadding(global::Windows.UI.Xaml.Thickness value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanel__Impl.Stubs.put_HorizontalOrientationPadding(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalOrientationPadding")]
		public virtual global::Windows.UI.Xaml.Thickness get_VerticalOrientationPadding()
		{
			global::Windows.UI.Xaml.Thickness __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanel__Impl.Stubs.get_VerticalOrientationPadding(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalOrientationPadding")]
		public virtual void put_VerticalOrientationPadding(global::Windows.UI.Xaml.Thickness value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanel__Impl.Stubs.put_VerticalOrientationPadding(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalOrientationPaddingProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HorizontalOrientationPaddingProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IInfoBarPanelStatics_get_HorizontalOrientationPaddingProperty("Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__IInfoBarPanelStatics_get_HorizontalOrientationPaddingProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelStatics__Impl.Stubs.get_HorizontalOrientationPaddingProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalOrientationPaddingProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_VerticalOrientationPaddingProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IInfoBarPanelStatics_get_VerticalOrientationPaddingProperty("Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__IInfoBarPanelStatics_get_VerticalOrientationPaddingProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelStatics__Impl.Stubs.get_VerticalOrientationPaddingProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static void SetHorizontalOrientationMargin(
					global::Windows.UI.Xaml.DependencyObject @object, 
					global::Windows.UI.Xaml.Thickness value)
		{
			__Factory_Microsoft_UI_Xaml_Controls_Primitives__IInfoBarPanelStatics_SetHorizontalOrientationMargin(
								"Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel", 
								@object, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Microsoft_UI_Xaml_Controls_Primitives__IInfoBarPanelStatics_SetHorizontalOrientationMargin(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject @object, 
					global::Windows.UI.Xaml.Thickness value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelStatics__Impl.Stubs.SetHorizontalOrientationMargin(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelStatics).TypeHandle
												), 
								@object, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static global::Windows.UI.Xaml.Thickness GetHorizontalOrientationMargin(global::Windows.UI.Xaml.DependencyObject @object)
		{
			global::Windows.UI.Xaml.Thickness retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IInfoBarPanelStatics_GetHorizontalOrientationMargin(
								"Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel", 
								@object
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.Thickness __Factory_Microsoft_UI_Xaml_Controls_Primitives__IInfoBarPanelStatics_GetHorizontalOrientationMargin(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject @object)
		{
			global::Windows.UI.Xaml.Thickness __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelStatics__Impl.Stubs.GetHorizontalOrientationMargin(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelStatics).TypeHandle
												), 
								@object
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalOrientationMarginProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_HorizontalOrientationMarginProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IInfoBarPanelStatics_get_HorizontalOrientationMarginProperty("Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__IInfoBarPanelStatics_get_HorizontalOrientationMarginProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelStatics__Impl.Stubs.get_HorizontalOrientationMarginProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static void SetVerticalOrientationMargin(
					global::Windows.UI.Xaml.DependencyObject @object, 
					global::Windows.UI.Xaml.Thickness value)
		{
			__Factory_Microsoft_UI_Xaml_Controls_Primitives__IInfoBarPanelStatics_SetVerticalOrientationMargin(
								"Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel", 
								@object, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Microsoft_UI_Xaml_Controls_Primitives__IInfoBarPanelStatics_SetVerticalOrientationMargin(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject @object, 
					global::Windows.UI.Xaml.Thickness value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelStatics__Impl.Stubs.SetVerticalOrientationMargin(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelStatics).TypeHandle
												), 
								@object, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static global::Windows.UI.Xaml.Thickness GetVerticalOrientationMargin(global::Windows.UI.Xaml.DependencyObject @object)
		{
			global::Windows.UI.Xaml.Thickness retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IInfoBarPanelStatics_GetVerticalOrientationMargin(
								"Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel", 
								@object
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.Thickness __Factory_Microsoft_UI_Xaml_Controls_Primitives__IInfoBarPanelStatics_GetVerticalOrientationMargin(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject @object)
		{
			global::Windows.UI.Xaml.Thickness __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelStatics__Impl.Stubs.GetVerticalOrientationMargin(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelStatics).TypeHandle
												), 
								@object
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalOrientationMarginProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_VerticalOrientationMarginProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IInfoBarPanelStatics_get_VerticalOrientationMarginProperty("Microsoft.UI.Xaml.Controls.Primitives.InfoBarPanel");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__IInfoBarPanelStatics_get_VerticalOrientationMarginProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelStatics__Impl.Stubs.get_VerticalOrientationMarginProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IInfoBarPanelStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public InfoBarPanel(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenter))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class MonochromaticOverlayPresenter : global::Windows.UI.Xaml.Controls.Grid, global::Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenter
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public MonochromaticOverlayPresenter() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IMonochromaticOverlayPresenterFactory_CreateInstance("Microsoft.UI.Xaml.Controls.Primitives.MonochromaticOverlayPresenter");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls_Primitives__IMonochromaticOverlayPresenterFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.Primitives.MonochromaticOverlayPresenter).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenterFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenterFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenterFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenterFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourceElement")]
		public virtual global::Windows.UI.Xaml.UIElement get_SourceElement()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenter__Impl.Stubs.get_SourceElement(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SourceElement")]
		public virtual void put_SourceElement(global::Windows.UI.Xaml.UIElement value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenter__Impl.Stubs.put_SourceElement(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ReplacementColor")]
		public virtual global::Windows.UI.Color get_ReplacementColor()
		{
			global::Windows.UI.Color __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenter__Impl.Stubs.get_ReplacementColor(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ReplacementColor")]
		public virtual void put_ReplacementColor(global::Windows.UI.Color value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenter__Impl.Stubs.put_ReplacementColor(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourceElementProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SourceElementProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IMonochromaticOverlayPresenterStatics_get_SourceElementProperty("Microsoft.UI.Xaml.Controls.Primitives.MonochromaticOverlayPresenter");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__IMonochromaticOverlayPresenterStatics_get_SourceElementProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenterStatics__Impl.Stubs.get_SourceElementProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenterStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ReplacementColorProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ReplacementColorProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__IMonochromaticOverlayPresenterStatics_get_ReplacementColorProperty("Microsoft.UI.Xaml.Controls.Primitives.MonochromaticOverlayPresenter");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__IMonochromaticOverlayPresenterStatics_get_ReplacementColorProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenterStatics__Impl.Stubs.get_ReplacementColorProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.IMonochromaticOverlayPresenterStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public MonochromaticOverlayPresenter(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(131072)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class NavigationViewItemPresenter : global::Windows.UI.Xaml.Controls.ContentControl, global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter, global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public NavigationViewItemPresenter() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__INavigationViewItemPresenterFactory_CreateInstance("Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls_Primitives__INavigationViewItemPresenterFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Icon")]
		public virtual global::Windows.UI.Xaml.Controls.IconElement get_Icon()
		{
			global::Windows.UI.Xaml.Controls.IconElement __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter__Impl.Stubs.get_Icon(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Icon")]
		public virtual void put_Icon(global::Windows.UI.Xaml.Controls.IconElement value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter__Impl.Stubs.put_Icon(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettings")]
		public virtual global::Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenterTemplateSettings get_TemplateSettings()
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenterTemplateSettings __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter__Impl.Stubs.get_TemplateSettings(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InfoBadge")]
		public virtual global::Microsoft.UI.Xaml.Controls.InfoBadge get_InfoBadge()
		{
			global::Microsoft.UI.Xaml.Controls.InfoBadge __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter2__Impl.Stubs.get_InfoBadge(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "InfoBadge")]
		public virtual void put_InfoBadge(global::Microsoft.UI.Xaml.Controls.InfoBadge value)
		{
			global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter2__Impl.Stubs.put_InfoBadge(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InfoBadgeProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_InfoBadgeProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__INavigationViewItemPresenterStatics2_get_InfoBadgeProperty("Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__INavigationViewItemPresenterStatics2_get_InfoBadgeProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterStatics2__Impl.Stubs.get_InfoBadgeProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IconProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__INavigationViewItemPresenterStatics_get_IconProperty("Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__INavigationViewItemPresenterStatics_get_IconProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterStatics__Impl.Stubs.get_IconProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettingsProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TemplateSettingsProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__INavigationViewItemPresenterStatics_get_TemplateSettingsProperty("Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__INavigationViewItemPresenterStatics_get_TemplateSettingsProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterStatics__Impl.Stubs.get_TemplateSettingsProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public NavigationViewItemPresenter(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettings))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class NavigationViewItemPresenterTemplateSettings : global::Windows.UI.Xaml.DependencyObject, global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettings
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public NavigationViewItemPresenterTemplateSettings() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__INavigationViewItemPresenterTemplateSettingsFactory_CreateInstance("Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenterTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls_Primitives__INavigationViewItemPresenterTemplateSettingsFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenterTemplateSettings).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettingsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettingsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettingsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettingsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconWidth")]
		public virtual double get_IconWidth()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettings__Impl.Stubs.get_IconWidth(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SmallerIconWidth")]
		public virtual double get_SmallerIconWidth()
		{
			double __retVal = global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettings__Impl.Stubs.get_SmallerIconWidth(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconWidthProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IconWidthProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__INavigationViewItemPresenterTemplateSettingsStatics_get_IconWidthProperty("Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenterTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__INavigationViewItemPresenterTemplateSettingsStatics_get_IconWidthProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettingsStatics__Impl.Stubs.get_IconWidthProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettingsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SmallerIconWidthProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SmallerIconWidthProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__INavigationViewItemPresenterTemplateSettingsStatics_get_SmallerIconWidthProperty("Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenterTemplateSettings");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Controls_Primitives__INavigationViewItemPresenterTemplateSettingsStatics_get_SmallerIconWidthProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettingsStatics__Impl.Stubs.get_SmallerIconWidthProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterTemplateSettingsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public NavigationViewItemPresenterTemplateSettings(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ITabViewListView))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class TabViewListView : global::Windows.UI.Xaml.Controls.ListView, global::Microsoft.UI.Xaml.Controls.Primitives.ITabViewListView
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public TabViewListView() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Controls_Primitives__ITabViewListViewFactory_CreateInstance("Microsoft.UI.Xaml.Controls.Primitives.TabViewListView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Controls_Primitives__ITabViewListViewFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Controls.Primitives.TabViewListView).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Controls.Primitives.ITabViewListViewFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ITabViewListViewFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Controls.Primitives.ITabViewListViewFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ITabViewListViewFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public TabViewListView(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColorPickerSliderFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColorPickerSliderStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColorChannelProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ColorChannelProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColorPickerSlider
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColorChannel")]
		global::Microsoft.UI.Xaml.Controls.ColorPickerHsvChannel get_ColorChannel();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ColorChannel")]
		void put_ColorChannel(global::Microsoft.UI.Xaml.Controls.ColorPickerHsvChannel value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColorSpectrumFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColorSpectrumStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColorProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ColorProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HsvColorProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HsvColorProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinHueProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MinHueProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxHueProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MaxHueProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinSaturationProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MinSaturationProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxSaturationProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MaxSaturationProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinValueProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MinValueProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxValueProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MaxValueProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShapeProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ShapeProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ComponentsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ComponentsProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColorSpectrum
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Color")]
		global::Windows.UI.Color get_Color();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Color")]
		void put_Color(global::Windows.UI.Color value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HsvColor")]
		global::System.Numerics.Vector4 get_HsvColor();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HsvColor")]
		void put_HsvColor(global::System.Numerics.Vector4 value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinHue")]
		int get_MinHue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinHue")]
		void put_MinHue(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxHue")]
		int get_MaxHue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxHue")]
		void put_MaxHue(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinSaturation")]
		int get_MinSaturation();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinSaturation")]
		void put_MinSaturation(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxSaturation")]
		int get_MaxSaturation();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxSaturation")]
		void put_MaxSaturation(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinValue")]
		int get_MinValue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinValue")]
		void put_MinValue(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxValue")]
		int get_MaxValue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxValue")]
		void put_MaxValue(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Shape")]
		global::Microsoft.UI.Xaml.Controls.ColorSpectrumShape get_Shape();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Shape")]
		void put_Shape(global::Microsoft.UI.Xaml.Controls.ColorSpectrumShape value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Components")]
		global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents get_Components();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Components")]
		void put_Components(global::Microsoft.UI.Xaml.Controls.ColorSpectrumComponents value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ColorChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ColorChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum, global::Microsoft.UI.Xaml.Controls.ColorChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ColorChanged")]
		void remove_ColorChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutoSuggestBoxHelperStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "KeepInteriorCornersSquareProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_KeepInteriorCornersSquareProperty();

		void SetKeepInteriorCornersSquare(
					global::Windows.UI.Xaml.Controls.AutoSuggestBox autoSuggestBox, 
					bool value);

		bool GetKeepInteriorCornersSquare(global::Windows.UI.Xaml.Controls.AutoSuggestBox autoSuggestBox);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutoSuggestBoxHelper
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColumnMajorUniformToLargestGridLayoutFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColumnMajorUniformToLargestGridLayoutStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxColumnsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MaxColumnsProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColumnSpacingProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ColumnSpacingProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RowSpacingProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_RowSpacingProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColumnMajorUniformToLargestGridLayout
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxColumns")]
		int get_MaxColumns();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxColumns")]
		void put_MaxColumns(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColumnSpacing")]
		double get_ColumnSpacing();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ColumnSpacing")]
		void put_ColumnSpacing(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RowSpacing")]
		double get_RowSpacing();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "RowSpacing")]
		void put_RowSpacing(double value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IComboBoxHelperStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "KeepInteriorCornersSquareProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_KeepInteriorCornersSquareProperty();

		void SetKeepInteriorCornersSquare(
					global::Windows.UI.Xaml.Controls.ComboBox comboBox, 
					bool value);

		bool GetKeepInteriorCornersSquare(global::Windows.UI.Xaml.Controls.ComboBox comboBox);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IComboBoxHelper
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICommandBarFlyoutCommandBarFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICommandBarFlyoutCommandBar
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FlyoutTemplateSettings")]
		global::Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings get_FlyoutTemplateSettings();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICommandBarFlyoutCommandBarTemplateSettings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OpenAnimationStartPosition")]
		double get_OpenAnimationStartPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OpenAnimationEndPosition")]
		double get_OpenAnimationEndPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CloseAnimationEndPosition")]
		double get_CloseAnimationEndPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CurrentWidth")]
		double get_CurrentWidth();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandedWidth")]
		double get_ExpandedWidth();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WidthExpansionDelta")]
		double get_WidthExpansionDelta();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WidthExpansionAnimationStartPosition")]
		double get_WidthExpansionAnimationStartPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WidthExpansionAnimationEndPosition")]
		double get_WidthExpansionAnimationEndPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WidthExpansionMoreButtonAnimationStartPosition")]
		double get_WidthExpansionMoreButtonAnimationStartPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WidthExpansionMoreButtonAnimationEndPosition")]
		double get_WidthExpansionMoreButtonAnimationEndPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandUpOverflowVerticalPosition")]
		double get_ExpandUpOverflowVerticalPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandDownOverflowVerticalPosition")]
		double get_ExpandDownOverflowVerticalPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandUpAnimationStartPosition")]
		double get_ExpandUpAnimationStartPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandUpAnimationEndPosition")]
		double get_ExpandUpAnimationEndPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandUpAnimationHoldPosition")]
		double get_ExpandUpAnimationHoldPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandDownAnimationStartPosition")]
		double get_ExpandDownAnimationStartPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandDownAnimationEndPosition")]
		double get_ExpandDownAnimationEndPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandDownAnimationHoldPosition")]
		double get_ExpandDownAnimationHoldPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentClipRect")]
		global::Windows.Foundation.Rect get_ContentClipRect();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OverflowContentClipRect")]
		global::Windows.Foundation.Rect get_OverflowContentClipRect();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICommandBarFlyoutCommandBarAutomationPropertiesStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ControlTypeProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ControlTypeProperty();

		global::Windows.UI.Xaml.Automation.Peers.AutomationControlType GetControlType(global::Windows.UI.Xaml.UIElement element);

		void SetControlType(
					global::Windows.UI.Xaml.UIElement element, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationControlType value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICornerRadiusFilterConverterStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FilterProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_FilterProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ScaleProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ScaleProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICornerRadiusFilterConverter
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Filter")]
		global::Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterKind get_Filter();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Filter")]
		void put_Filter(global::Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusFilterKind value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Scale")]
		double get_Scale();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Scale")]
		void put_Scale(double value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICornerRadiusToThicknessConverterStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ConversionKindProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ConversionKindProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MultiplierProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MultiplierProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICornerRadiusToThicknessConverter
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ConversionKind")]
		global::Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverterKind get_ConversionKind();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ConversionKind")]
		void put_ConversionKind(global::Microsoft.UI.Xaml.Controls.Primitives.CornerRadiusToThicknessConverterKind value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Multiplier")]
		double get_Multiplier();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Multiplier")]
		void put_Multiplier(double value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInfoBarPanelFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInfoBarPanelStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalOrientationPaddingProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HorizontalOrientationPaddingProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalOrientationPaddingProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_VerticalOrientationPaddingProperty();

		void SetHorizontalOrientationMargin(
					global::Windows.UI.Xaml.DependencyObject @object, 
					global::Windows.UI.Xaml.Thickness value);

		global::Windows.UI.Xaml.Thickness GetHorizontalOrientationMargin(global::Windows.UI.Xaml.DependencyObject @object);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalOrientationMarginProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_HorizontalOrientationMarginProperty();

		void SetVerticalOrientationMargin(
					global::Windows.UI.Xaml.DependencyObject @object, 
					global::Windows.UI.Xaml.Thickness value);

		global::Windows.UI.Xaml.Thickness GetVerticalOrientationMargin(global::Windows.UI.Xaml.DependencyObject @object);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalOrientationMarginProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_VerticalOrientationMarginProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInfoBarPanel
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalOrientationPadding")]
		global::Windows.UI.Xaml.Thickness get_HorizontalOrientationPadding();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalOrientationPadding")]
		void put_HorizontalOrientationPadding(global::Windows.UI.Xaml.Thickness value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalOrientationPadding")]
		global::Windows.UI.Xaml.Thickness get_VerticalOrientationPadding();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalOrientationPadding")]
		void put_VerticalOrientationPadding(global::Windows.UI.Xaml.Thickness value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMonochromaticOverlayPresenterFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMonochromaticOverlayPresenterStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourceElementProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SourceElementProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ReplacementColorProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ReplacementColorProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMonochromaticOverlayPresenter
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourceElement")]
		global::Windows.UI.Xaml.UIElement get_SourceElement();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SourceElement")]
		void put_SourceElement(global::Windows.UI.Xaml.UIElement value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ReplacementColor")]
		global::Windows.UI.Color get_ReplacementColor();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ReplacementColor")]
		void put_ReplacementColor(global::Windows.UI.Color value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemPresenterFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemPresenterStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IconProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettingsProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TemplateSettingsProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemPresenterStatics2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InfoBadgeProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_InfoBadgeProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemPresenter
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Icon")]
		global::Windows.UI.Xaml.Controls.IconElement get_Icon();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Icon")]
		void put_Icon(global::Windows.UI.Xaml.Controls.IconElement value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemplateSettings")]
		global::Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenterTemplateSettings get_TemplateSettings();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemPresenterTemplateSettingsFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemPresenterTemplateSettingsStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconWidthProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IconWidthProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SmallerIconWidthProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SmallerIconWidthProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemPresenterTemplateSettings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IconWidth")]
		double get_IconWidth();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SmallerIconWidth")]
		double get_SmallerIconWidth();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationViewItemPresenter2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InfoBadge")]
		global::Microsoft.UI.Xaml.Controls.InfoBadge get_InfoBadge();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "InfoBadge")]
		void put_InfoBadge(global::Microsoft.UI.Xaml.Controls.InfoBadge value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITabViewListViewFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITabViewListView
	{
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CornerRadiusFilterKind
	{
		None = 0,
		Top = 1,
		Right = 2,
		Bottom = 3,
		Left = 4,
		TopLeftValue = 5,
		BottomRightValue = 6,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CornerRadiusToThicknessConverterKind
	{
		FilterTopAndBottomFromLeft = 0,
		FilterTopAndBottomFromRight = 1,
		FilterLeftAndRightFromTop = 2,
		FilterLeftAndRightFromBottom = 3,
		FilterTopFromTopLeft = 4,
		FilterTopFromTopRight = 5,
		FilterRightFromTopRight = 6,
		FilterRightFromBottomRight = 7,
		FilterBottomFromBottomRight = 8,
		FilterBottomFromBottomLeft = 9,
		FilterLeftFromBottomLeft = 10,
		FilterLeftFromTopLeft = 11,
	}
}

namespace Microsoft.UI.Xaml.CustomAttributes
{
	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class MUXHasCustomActivationFactoryAttribute : global::System.Attribute
	{
		public MUXHasCustomActivationFactoryAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Microsoft.UI.Xaml.CustomAttributes.MUXHasCustomActivationFactoryAttribute\'.  Windows Runt" +
					"ime attribute types are not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class MUXPropertyChangedCallbackAttribute : global::System.Attribute
	{
		public MUXPropertyChangedCallbackAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallbackAttribute\'.  Windows Runtime" +
					" attribute types are not constructable.");
		}
		public bool enable;
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class MUXPropertyChangedCallbackMethodNameAttribute : global::System.Attribute
	{
		public MUXPropertyChangedCallbackMethodNameAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Microsoft.UI.Xaml.CustomAttributes.MUXPropertyChangedCallbackMethodNameAttribute\'.  Windo" +
					"ws Runtime attribute types are not constructable.");
		}
		public string value;
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class MUXPropertyDefaultValueAttribute : global::System.Attribute
	{
		public MUXPropertyDefaultValueAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Microsoft.UI.Xaml.CustomAttributes.MUXPropertyDefaultValueAttribute\'.  Windows Runtime at" +
					"tribute types are not constructable.");
		}
		public string value;
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class MUXPropertyNeedsDependencyPropertyFieldAttribute : global::System.Attribute
	{
		public MUXPropertyNeedsDependencyPropertyFieldAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Microsoft.UI.Xaml.CustomAttributes.MUXPropertyNeedsDependencyPropertyFieldAttribute\'.  Wi" +
					"ndows Runtime attribute types are not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class MUXPropertyTypeAttribute : global::System.Attribute
	{
		public MUXPropertyTypeAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Microsoft.UI.Xaml.CustomAttributes.MUXPropertyTypeAttribute\'.  Windows Runtime attribute " +
					"types are not constructable.");
		}
		public string value;
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class MUXPropertyValidationCallbackAttribute : global::System.Attribute
	{
		public MUXPropertyValidationCallbackAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Microsoft.UI.Xaml.CustomAttributes.MUXPropertyValidationCallbackAttribute\'.  Windows Runt" +
					"ime attribute types are not constructable.");
		}
		public string value;
	}
}

namespace Microsoft.UI.Xaml.Media
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Media.IAcrylicBrush))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Media.IAcrylicBrush2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class AcrylicBrush : global::Windows.UI.Xaml.Media.XamlCompositionBrushBase, global::Microsoft.UI.Xaml.Media.IAcrylicBrush, global::Microsoft.UI.Xaml.Media.IAcrylicBrush2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AcrylicBrush() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Media__IAcrylicBrushFactory_CreateInstance("Microsoft.UI.Xaml.Media.AcrylicBrush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Media__IAcrylicBrushFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Media.AcrylicBrush).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Media.IAcrylicBrushFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Media.IAcrylicBrushFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Media.IAcrylicBrushFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Media.IAcrylicBrushFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BackgroundSource")]
		public virtual global::Microsoft.UI.Xaml.Media.AcrylicBackgroundSource get_BackgroundSource()
		{
			global::Microsoft.UI.Xaml.Media.AcrylicBackgroundSource __retVal = global::Microsoft.UI.Xaml.Media.IAcrylicBrush__Impl.Stubs.get_BackgroundSource(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BackgroundSource")]
		public virtual void put_BackgroundSource(global::Microsoft.UI.Xaml.Media.AcrylicBackgroundSource value)
		{
			global::Microsoft.UI.Xaml.Media.IAcrylicBrush__Impl.Stubs.put_BackgroundSource(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TintColor")]
		public virtual global::Windows.UI.Color get_TintColor()
		{
			global::Windows.UI.Color __retVal = global::Microsoft.UI.Xaml.Media.IAcrylicBrush__Impl.Stubs.get_TintColor(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TintColor")]
		public virtual void put_TintColor(global::Windows.UI.Color value)
		{
			global::Microsoft.UI.Xaml.Media.IAcrylicBrush__Impl.Stubs.put_TintColor(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TintOpacity")]
		public virtual double get_TintOpacity()
		{
			double __retVal = global::Microsoft.UI.Xaml.Media.IAcrylicBrush__Impl.Stubs.get_TintOpacity(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TintOpacity")]
		public virtual void put_TintOpacity(double value)
		{
			global::Microsoft.UI.Xaml.Media.IAcrylicBrush__Impl.Stubs.put_TintOpacity(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TintTransitionDuration")]
		public virtual global::System.TimeSpan get_TintTransitionDuration()
		{
			global::System.TimeSpan __retVal = global::Microsoft.UI.Xaml.Media.IAcrylicBrush__Impl.Stubs.get_TintTransitionDuration(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TintTransitionDuration")]
		public virtual void put_TintTransitionDuration(global::System.TimeSpan value)
		{
			global::Microsoft.UI.Xaml.Media.IAcrylicBrush__Impl.Stubs.put_TintTransitionDuration(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AlwaysUseFallback")]
		public virtual bool get_AlwaysUseFallback()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Media.IAcrylicBrush__Impl.Stubs.get_AlwaysUseFallback(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AlwaysUseFallback")]
		public virtual void put_AlwaysUseFallback(bool value)
		{
			global::Microsoft.UI.Xaml.Media.IAcrylicBrush__Impl.Stubs.put_AlwaysUseFallback(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TintLuminosityOpacity")]
		public virtual global::System.Nullable<double> get_TintLuminosityOpacity()
		{
			global::System.Nullable<double> __retVal = global::Microsoft.UI.Xaml.Media.IAcrylicBrush2__Impl.Stubs.get_TintLuminosityOpacity(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TintLuminosityOpacity")]
		public virtual void put_TintLuminosityOpacity(global::System.Nullable<double> value)
		{
			global::Microsoft.UI.Xaml.Media.IAcrylicBrush2__Impl.Stubs.put_TintLuminosityOpacity(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TintLuminosityOpacityProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TintLuminosityOpacityProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Media__IAcrylicBrushStatics2_get_TintLuminosityOpacityProperty("Microsoft.UI.Xaml.Media.AcrylicBrush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Media__IAcrylicBrushStatics2_get_TintLuminosityOpacityProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Media.IAcrylicBrushStatics2__Impl.Stubs.get_TintLuminosityOpacityProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Media.IAcrylicBrushStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BackgroundSourceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_BackgroundSourceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Media__IAcrylicBrushStatics_get_BackgroundSourceProperty("Microsoft.UI.Xaml.Media.AcrylicBrush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Media__IAcrylicBrushStatics_get_BackgroundSourceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Media.IAcrylicBrushStatics__Impl.Stubs.get_BackgroundSourceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Media.IAcrylicBrushStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TintColorProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TintColorProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Media__IAcrylicBrushStatics_get_TintColorProperty("Microsoft.UI.Xaml.Media.AcrylicBrush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Media__IAcrylicBrushStatics_get_TintColorProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Media.IAcrylicBrushStatics__Impl.Stubs.get_TintColorProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Media.IAcrylicBrushStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TintOpacityProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TintOpacityProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Media__IAcrylicBrushStatics_get_TintOpacityProperty("Microsoft.UI.Xaml.Media.AcrylicBrush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Media__IAcrylicBrushStatics_get_TintOpacityProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Media.IAcrylicBrushStatics__Impl.Stubs.get_TintOpacityProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Media.IAcrylicBrushStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TintTransitionDurationProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TintTransitionDurationProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Media__IAcrylicBrushStatics_get_TintTransitionDurationProperty("Microsoft.UI.Xaml.Media.AcrylicBrush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Media__IAcrylicBrushStatics_get_TintTransitionDurationProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Media.IAcrylicBrushStatics__Impl.Stubs.get_TintTransitionDurationProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Media.IAcrylicBrushStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AlwaysUseFallbackProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_AlwaysUseFallbackProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Media__IAcrylicBrushStatics_get_AlwaysUseFallbackProperty("Microsoft.UI.Xaml.Media.AcrylicBrush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Media__IAcrylicBrushStatics_get_AlwaysUseFallbackProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Media.IAcrylicBrushStatics__Impl.Stubs.get_AlwaysUseFallbackProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Media.IAcrylicBrushStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public AcrylicBrush(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Media.IRadialGradientBrush))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RadialGradientBrush : global::Windows.UI.Xaml.Media.XamlCompositionBrushBase, global::Microsoft.UI.Xaml.Media.IRadialGradientBrush
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public RadialGradientBrush() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Media__IRadialGradientBrushFactory_CreateInstance("Microsoft.UI.Xaml.Media.RadialGradientBrush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Media__IRadialGradientBrushFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Media.RadialGradientBrush).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Media.IRadialGradientBrushFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Media.IRadialGradientBrushFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Media.IRadialGradientBrushFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Media.IRadialGradientBrushFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Center")]
		public virtual global::Windows.Foundation.Point get_Center()
		{
			global::Windows.Foundation.Point __retVal = global::Microsoft.UI.Xaml.Media.IRadialGradientBrush__Impl.Stubs.get_Center(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Center")]
		public virtual void put_Center(global::Windows.Foundation.Point value)
		{
			global::Microsoft.UI.Xaml.Media.IRadialGradientBrush__Impl.Stubs.put_Center(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RadiusX")]
		public virtual double get_RadiusX()
		{
			double __retVal = global::Microsoft.UI.Xaml.Media.IRadialGradientBrush__Impl.Stubs.get_RadiusX(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "RadiusX")]
		public virtual void put_RadiusX(double value)
		{
			global::Microsoft.UI.Xaml.Media.IRadialGradientBrush__Impl.Stubs.put_RadiusX(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RadiusY")]
		public virtual double get_RadiusY()
		{
			double __retVal = global::Microsoft.UI.Xaml.Media.IRadialGradientBrush__Impl.Stubs.get_RadiusY(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "RadiusY")]
		public virtual void put_RadiusY(double value)
		{
			global::Microsoft.UI.Xaml.Media.IRadialGradientBrush__Impl.Stubs.put_RadiusY(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GradientOrigin")]
		public virtual global::Windows.Foundation.Point get_GradientOrigin()
		{
			global::Windows.Foundation.Point __retVal = global::Microsoft.UI.Xaml.Media.IRadialGradientBrush__Impl.Stubs.get_GradientOrigin(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "GradientOrigin")]
		public virtual void put_GradientOrigin(global::Windows.Foundation.Point value)
		{
			global::Microsoft.UI.Xaml.Media.IRadialGradientBrush__Impl.Stubs.put_GradientOrigin(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MappingMode")]
		public virtual global::Windows.UI.Xaml.Media.BrushMappingMode get_MappingMode()
		{
			global::Windows.UI.Xaml.Media.BrushMappingMode __retVal = global::Microsoft.UI.Xaml.Media.IRadialGradientBrush__Impl.Stubs.get_MappingMode(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MappingMode")]
		public virtual void put_MappingMode(global::Windows.UI.Xaml.Media.BrushMappingMode value)
		{
			global::Microsoft.UI.Xaml.Media.IRadialGradientBrush__Impl.Stubs.put_MappingMode(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InterpolationSpace")]
		public virtual global::Windows.UI.Composition.CompositionColorSpace get_InterpolationSpace()
		{
			global::Windows.UI.Composition.CompositionColorSpace __retVal = global::Microsoft.UI.Xaml.Media.IRadialGradientBrush__Impl.Stubs.get_InterpolationSpace(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "InterpolationSpace")]
		public virtual void put_InterpolationSpace(global::Windows.UI.Composition.CompositionColorSpace value)
		{
			global::Microsoft.UI.Xaml.Media.IRadialGradientBrush__Impl.Stubs.put_InterpolationSpace(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SpreadMethod")]
		public virtual global::Windows.UI.Xaml.Media.GradientSpreadMethod get_SpreadMethod()
		{
			global::Windows.UI.Xaml.Media.GradientSpreadMethod __retVal = global::Microsoft.UI.Xaml.Media.IRadialGradientBrush__Impl.Stubs.get_SpreadMethod(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SpreadMethod")]
		public virtual void put_SpreadMethod(global::Windows.UI.Xaml.Media.GradientSpreadMethod value)
		{
			global::Microsoft.UI.Xaml.Media.IRadialGradientBrush__Impl.Stubs.put_SpreadMethod(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GradientStops")]
		public virtual global::Windows.Foundation.Collections.IObservableVector<global::Windows.UI.Xaml.Media.GradientStop> get_GradientStops()
		{
			global::Windows.Foundation.Collections.IObservableVector<global::Windows.UI.Xaml.Media.GradientStop> __retVal = global::Microsoft.UI.Xaml.Media.IRadialGradientBrush__Impl.Stubs.get_GradientStops(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CenterProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_CenterProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Media__IRadialGradientBrushStatics_get_CenterProperty("Microsoft.UI.Xaml.Media.RadialGradientBrush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Media__IRadialGradientBrushStatics_get_CenterProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Media.IRadialGradientBrushStatics__Impl.Stubs.get_CenterProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Media.IRadialGradientBrushStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RadiusXProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_RadiusXProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Media__IRadialGradientBrushStatics_get_RadiusXProperty("Microsoft.UI.Xaml.Media.RadialGradientBrush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Media__IRadialGradientBrushStatics_get_RadiusXProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Media.IRadialGradientBrushStatics__Impl.Stubs.get_RadiusXProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Media.IRadialGradientBrushStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RadiusYProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_RadiusYProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Media__IRadialGradientBrushStatics_get_RadiusYProperty("Microsoft.UI.Xaml.Media.RadialGradientBrush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Media__IRadialGradientBrushStatics_get_RadiusYProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Media.IRadialGradientBrushStatics__Impl.Stubs.get_RadiusYProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Media.IRadialGradientBrushStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GradientOriginProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_GradientOriginProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Media__IRadialGradientBrushStatics_get_GradientOriginProperty("Microsoft.UI.Xaml.Media.RadialGradientBrush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Media__IRadialGradientBrushStatics_get_GradientOriginProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Media.IRadialGradientBrushStatics__Impl.Stubs.get_GradientOriginProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Media.IRadialGradientBrushStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InterpolationSpaceProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_InterpolationSpaceProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Media__IRadialGradientBrushStatics_get_InterpolationSpaceProperty("Microsoft.UI.Xaml.Media.RadialGradientBrush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Media__IRadialGradientBrushStatics_get_InterpolationSpaceProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Media.IRadialGradientBrushStatics__Impl.Stubs.get_InterpolationSpaceProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Media.IRadialGradientBrushStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MappingModeProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_MappingModeProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Media__IRadialGradientBrushStatics_get_MappingModeProperty("Microsoft.UI.Xaml.Media.RadialGradientBrush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Media__IRadialGradientBrushStatics_get_MappingModeProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Media.IRadialGradientBrushStatics__Impl.Stubs.get_MappingModeProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Media.IRadialGradientBrushStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SpreadMethodProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_SpreadMethodProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Media__IRadialGradientBrushStatics_get_SpreadMethodProperty("Microsoft.UI.Xaml.Media.RadialGradientBrush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Media__IRadialGradientBrushStatics_get_SpreadMethodProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Media.IRadialGradientBrushStatics__Impl.Stubs.get_SpreadMethodProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Media.IRadialGradientBrushStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public RadialGradientBrush(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Media.IRevealBrush))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RevealBrush : global::Windows.UI.Xaml.Media.XamlCompositionBrushBase, global::Microsoft.UI.Xaml.Media.IRevealBrush
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		protected RevealBrush() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Media__IRevealBrushProtectedFactory_CreateInstance("Microsoft.UI.Xaml.Media.RevealBrush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Media__IRevealBrushProtectedFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
			global::System.IntPtr __pRetVal_WithAggregation;
			__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Media.IRevealBrushProtectedFactory__Impl.Stubs.CreateInstance(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.UI.Xaml.Media.IRevealBrushProtectedFactory).TypeHandle
												), 
								outerInspectable, 
								out innerInspectable
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
			return innerInspectable;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Color")]
		public virtual global::Windows.UI.Color get_Color()
		{
			global::Windows.UI.Color __retVal = global::Microsoft.UI.Xaml.Media.IRevealBrush__Impl.Stubs.get_Color(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Color")]
		public virtual void put_Color(global::Windows.UI.Color value)
		{
			global::Microsoft.UI.Xaml.Media.IRevealBrush__Impl.Stubs.put_Color(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TargetTheme")]
		public virtual global::Windows.UI.Xaml.ApplicationTheme get_TargetTheme()
		{
			global::Windows.UI.Xaml.ApplicationTheme __retVal = global::Microsoft.UI.Xaml.Media.IRevealBrush__Impl.Stubs.get_TargetTheme(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TargetTheme")]
		public virtual void put_TargetTheme(global::Windows.UI.Xaml.ApplicationTheme value)
		{
			global::Microsoft.UI.Xaml.Media.IRevealBrush__Impl.Stubs.put_TargetTheme(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AlwaysUseFallback")]
		public virtual bool get_AlwaysUseFallback()
		{
			bool __retVal = global::Microsoft.UI.Xaml.Media.IRevealBrush__Impl.Stubs.get_AlwaysUseFallback(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AlwaysUseFallback")]
		public virtual void put_AlwaysUseFallback(bool value)
		{
			global::Microsoft.UI.Xaml.Media.IRevealBrush__Impl.Stubs.put_AlwaysUseFallback(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColorProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ColorProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Media__IRevealBrushStatics_get_ColorProperty("Microsoft.UI.Xaml.Media.RevealBrush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Media__IRevealBrushStatics_get_ColorProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Media.IRevealBrushStatics__Impl.Stubs.get_ColorProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Media.IRevealBrushStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TargetThemeProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_TargetThemeProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Media__IRevealBrushStatics_get_TargetThemeProperty("Microsoft.UI.Xaml.Media.RevealBrush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Media__IRevealBrushStatics_get_TargetThemeProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Media.IRevealBrushStatics__Impl.Stubs.get_TargetThemeProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Media.IRevealBrushStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AlwaysUseFallbackProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_AlwaysUseFallbackProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Media__IRevealBrushStatics_get_AlwaysUseFallbackProperty("Microsoft.UI.Xaml.Media.RevealBrush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Media__IRevealBrushStatics_get_AlwaysUseFallbackProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Media.IRevealBrushStatics__Impl.Stubs.get_AlwaysUseFallbackProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Media.IRevealBrushStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StateProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_StateProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Microsoft_UI_Xaml_Media__IRevealBrushStatics_get_StateProperty("Microsoft.UI.Xaml.Media.RevealBrush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Microsoft_UI_Xaml_Media__IRevealBrushStatics_get_StateProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Media.IRevealBrushStatics__Impl.Stubs.get_StateProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.Media.IRevealBrushStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static void SetState(
					global::Windows.UI.Xaml.UIElement element, 
					global::Microsoft.UI.Xaml.Media.RevealBrushState value)
		{
			__Factory_Microsoft_UI_Xaml_Media__IRevealBrushStatics_SetState(
								"Microsoft.UI.Xaml.Media.RevealBrush", 
								element, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Microsoft_UI_Xaml_Media__IRevealBrushStatics_SetState(
					string typeName, 
					global::Windows.UI.Xaml.UIElement element, 
					global::Microsoft.UI.Xaml.Media.RevealBrushState value)
		{
			global::Microsoft.UI.Xaml.Media.IRevealBrushStatics__Impl.Stubs.SetState(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.UI.Xaml.Media.IRevealBrushStatics).TypeHandle
												), 
								element, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static global::Microsoft.UI.Xaml.Media.RevealBrushState GetState(global::Windows.UI.Xaml.UIElement element)
		{
			global::Microsoft.UI.Xaml.Media.RevealBrushState retval;
			retval = __Factory_Microsoft_UI_Xaml_Media__IRevealBrushStatics_GetState(
								"Microsoft.UI.Xaml.Media.RevealBrush", 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Microsoft.UI.Xaml.Media.RevealBrushState __Factory_Microsoft_UI_Xaml_Media__IRevealBrushStatics_GetState(
					string typeName, 
					global::Windows.UI.Xaml.UIElement element)
		{
			global::Microsoft.UI.Xaml.Media.RevealBrushState __pRetVal;
			__pRetVal = global::Microsoft.UI.Xaml.Media.IRevealBrushStatics__Impl.Stubs.GetState(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.UI.Xaml.Media.IRevealBrushStatics).TypeHandle
												), 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public RevealBrush(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Media.IRevealBackgroundBrush))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RevealBackgroundBrush : global::Microsoft.UI.Xaml.Media.RevealBrush, global::Microsoft.UI.Xaml.Media.IRevealBackgroundBrush
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public RevealBackgroundBrush() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Media__IRevealBackgroundBrushFactory_CreateInstance("Microsoft.UI.Xaml.Media.RevealBackgroundBrush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Media__IRevealBackgroundBrushFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Media.RevealBackgroundBrush).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Media.IRevealBackgroundBrushFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Media.IRevealBackgroundBrushFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Media.IRevealBackgroundBrushFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Media.IRevealBackgroundBrushFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public RevealBackgroundBrush(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.UI.Xaml.Media.IRevealBorderBrush))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RevealBorderBrush : global::Microsoft.UI.Xaml.Media.RevealBrush, global::Microsoft.UI.Xaml.Media.IRevealBorderBrush
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public RevealBorderBrush() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Microsoft_UI_Xaml_Media__IRevealBorderBrushFactory_CreateInstance("Microsoft.UI.Xaml.Media.RevealBorderBrush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Microsoft_UI_Xaml_Media__IRevealBorderBrushFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Microsoft.UI.Xaml.Media.RevealBorderBrush).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Microsoft.UI.Xaml.Media.IRevealBorderBrushFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Media.IRevealBorderBrushFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Microsoft.UI.Xaml.Media.IRevealBorderBrushFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Microsoft.UI.Xaml.Media.IRevealBorderBrushFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public RevealBorderBrush(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAcrylicBrushFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAcrylicBrushStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BackgroundSourceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_BackgroundSourceProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TintColorProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TintColorProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TintOpacityProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TintOpacityProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TintTransitionDurationProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TintTransitionDurationProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AlwaysUseFallbackProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_AlwaysUseFallbackProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAcrylicBrushStatics2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TintLuminosityOpacityProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TintLuminosityOpacityProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAcrylicBrush
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BackgroundSource")]
		global::Microsoft.UI.Xaml.Media.AcrylicBackgroundSource get_BackgroundSource();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BackgroundSource")]
		void put_BackgroundSource(global::Microsoft.UI.Xaml.Media.AcrylicBackgroundSource value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TintColor")]
		global::Windows.UI.Color get_TintColor();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TintColor")]
		void put_TintColor(global::Windows.UI.Color value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TintOpacity")]
		double get_TintOpacity();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TintOpacity")]
		void put_TintOpacity(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TintTransitionDuration")]
		global::System.TimeSpan get_TintTransitionDuration();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TintTransitionDuration")]
		void put_TintTransitionDuration(global::System.TimeSpan value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AlwaysUseFallback")]
		bool get_AlwaysUseFallback();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AlwaysUseFallback")]
		void put_AlwaysUseFallback(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAcrylicBrush2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TintLuminosityOpacity")]
		global::System.Nullable<double> get_TintLuminosityOpacity();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TintLuminosityOpacity")]
		void put_TintLuminosityOpacity(global::System.Nullable<double> value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRadialGradientBrushFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRadialGradientBrushStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CenterProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_CenterProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RadiusXProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_RadiusXProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RadiusYProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_RadiusYProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GradientOriginProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_GradientOriginProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InterpolationSpaceProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_InterpolationSpaceProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MappingModeProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_MappingModeProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SpreadMethodProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_SpreadMethodProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRadialGradientBrush
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Center")]
		global::Windows.Foundation.Point get_Center();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Center")]
		void put_Center(global::Windows.Foundation.Point value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RadiusX")]
		double get_RadiusX();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "RadiusX")]
		void put_RadiusX(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RadiusY")]
		double get_RadiusY();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "RadiusY")]
		void put_RadiusY(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GradientOrigin")]
		global::Windows.Foundation.Point get_GradientOrigin();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "GradientOrigin")]
		void put_GradientOrigin(global::Windows.Foundation.Point value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MappingMode")]
		global::Windows.UI.Xaml.Media.BrushMappingMode get_MappingMode();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MappingMode")]
		void put_MappingMode(global::Windows.UI.Xaml.Media.BrushMappingMode value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InterpolationSpace")]
		global::Windows.UI.Composition.CompositionColorSpace get_InterpolationSpace();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "InterpolationSpace")]
		void put_InterpolationSpace(global::Windows.UI.Composition.CompositionColorSpace value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SpreadMethod")]
		global::Windows.UI.Xaml.Media.GradientSpreadMethod get_SpreadMethod();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SpreadMethod")]
		void put_SpreadMethod(global::Windows.UI.Xaml.Media.GradientSpreadMethod value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GradientStops")]
		global::Windows.Foundation.Collections.IObservableVector<global::Windows.UI.Xaml.Media.GradientStop> get_GradientStops();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRevealBrushProtectedFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRevealBrushStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColorProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ColorProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TargetThemeProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_TargetThemeProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AlwaysUseFallbackProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_AlwaysUseFallbackProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StateProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_StateProperty();

		void SetState(
					global::Windows.UI.Xaml.UIElement element, 
					global::Microsoft.UI.Xaml.Media.RevealBrushState value);

		global::Microsoft.UI.Xaml.Media.RevealBrushState GetState(global::Windows.UI.Xaml.UIElement element);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRevealBrush
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Color")]
		global::Windows.UI.Color get_Color();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Color")]
		void put_Color(global::Windows.UI.Color value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TargetTheme")]
		global::Windows.UI.Xaml.ApplicationTheme get_TargetTheme();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TargetTheme")]
		void put_TargetTheme(global::Windows.UI.Xaml.ApplicationTheme value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AlwaysUseFallback")]
		bool get_AlwaysUseFallback();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AlwaysUseFallback")]
		void put_AlwaysUseFallback(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRevealBackgroundBrushFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRevealBackgroundBrush
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRevealBorderBrushFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRevealBorderBrush
	{
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AcrylicBackgroundSource
	{
		HostBackdrop = 0,
		Backdrop = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum RevealBrushState
	{
		Normal = 0,
		PointerOver = 1,
		Pressed = 2,
	}
}

namespace Microsoft.UI.Xaml.XamlTypeInfo
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class XamlControlsXamlMetaDataProvider : global::System.__ComObject, global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public XamlControlsXamlMetaDataProvider()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
		{
			global::Windows.UI.Xaml.Markup.IXamlType __retVal = global::Windows.UI.Xaml.Markup.IXamlMetadataProvider__Impl.Stubs.GetXamlType(
								this, 
								type
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
		{
			global::Windows.UI.Xaml.Markup.IXamlType __retVal = global::Windows.UI.Xaml.Markup.IXamlMetadataProvider__Impl.Stubs.GetXamlType(
								this, 
								fullName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
		{
			global::Windows.UI.Xaml.Markup.XmlnsDefinition[] __retVal = global::Windows.UI.Xaml.Markup.IXamlMetadataProvider__Impl.Stubs.GetXmlnsDefinitions(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public static void Initialize()
		{
			__Factory_Microsoft_UI_Xaml_XamlTypeInfo__IXamlControlsXamlMetaDataProviderStatics_Initialize("Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Microsoft_UI_Xaml_XamlTypeInfo__IXamlControlsXamlMetaDataProviderStatics_Initialize(string typeName)
		{
			global::Microsoft.UI.Xaml.XamlTypeInfo.IXamlControlsXamlMetaDataProviderStatics__Impl.Stubs.Initialize(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.UI.Xaml.XamlTypeInfo.IXamlControlsXamlMetaDataProviderStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public XamlControlsXamlMetaDataProvider(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.UI.Xaml, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IXamlControlsXamlMetaDataProviderStatics
	{
		void Initialize();
	}
}

namespace Microsoft.Web.WebView2.Core
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2_10))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2_11))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2_12))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2_13))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2_14))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2_2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2_3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2_4))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2_5))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2_6))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2_7))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2_8))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2_9))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2 : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2_10, global::Microsoft.Web.WebView2.Core.ICoreWebView2_11, global::Microsoft.Web.WebView2.Core.ICoreWebView2_12, global::Microsoft.Web.WebView2.Core.ICoreWebView2_13, global::Microsoft.Web.WebView2.Core.ICoreWebView2_14, global::Microsoft.Web.WebView2.Core.ICoreWebView2_2, global::Microsoft.Web.WebView2.Core.ICoreWebView2_3, global::Microsoft.Web.WebView2.Core.ICoreWebView2_4, global::Microsoft.Web.WebView2.Core.ICoreWebView2_5, global::Microsoft.Web.WebView2.Core.ICoreWebView2_6, global::Microsoft.Web.WebView2.Core.ICoreWebView2_7, global::Microsoft.Web.WebView2.Core.ICoreWebView2_8, global::Microsoft.Web.WebView2.Core.ICoreWebView2_9, global::Microsoft.Web.WebView2.Core.ICoreWebView2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "BasicAuthenticationRequested")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_BasicAuthenticationRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_10__Impl.Stubs.add_BasicAuthenticationRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "BasicAuthenticationRequested")]
		public void remove_BasicAuthenticationRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2_10__Impl.Stubs.remove_BasicAuthenticationRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextMenuRequested")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextMenuRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_11__Impl.Stubs.add_ContextMenuRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextMenuRequested")]
		public void remove_ContextMenuRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2_11__Impl.Stubs.remove_ContextMenuRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public global::Windows.Foundation.IAsyncOperation<string> CallDevToolsProtocolMethodForSessionAsync(
					string sessionId, 
					string methodName, 
					string parametersAsJson)
		{
			global::Windows.Foundation.IAsyncOperation<string> __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_11__Impl.Stubs.CallDevToolsProtocolMethodForSessionAsync(
								this, 
								sessionId, 
								methodName, 
								parametersAsJson
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StatusBarText")]
		public string get_StatusBarText()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_12__Impl.Stubs.get_StatusBarText(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "StatusBarTextChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_StatusBarTextChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_12__Impl.Stubs.add_StatusBarTextChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "StatusBarTextChanged")]
		public void remove_StatusBarTextChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2_12__Impl.Stubs.remove_StatusBarTextChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Profile")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2Profile get_Profile()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2Profile __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_13__Impl.Stubs.get_Profile(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ServerCertificateErrorDetected")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ServerCertificateErrorDetected(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_14__Impl.Stubs.add_ServerCertificateErrorDetected(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ServerCertificateErrorDetected")]
		public void remove_ServerCertificateErrorDetected(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2_14__Impl.Stubs.remove_ServerCertificateErrorDetected(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public global::Windows.Foundation.IAsyncAction ClearServerCertificateErrorActionsAsync()
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_14__Impl.Stubs.ClearServerCertificateErrorActionsAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CookieManager")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2CookieManager get_CookieManager()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2CookieManager __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_2__Impl.Stubs.get_CookieManager(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Environment")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2Environment get_Environment()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2Environment __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_2__Impl.Stubs.get_Environment(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "WebResourceResponseReceived")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_WebResourceResponseReceived(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_2__Impl.Stubs.add_WebResourceResponseReceived(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "WebResourceResponseReceived")]
		public void remove_WebResourceResponseReceived(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2_2__Impl.Stubs.remove_WebResourceResponseReceived(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DOMContentLoaded")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DOMContentLoaded(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_2__Impl.Stubs.add_DOMContentLoaded(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DOMContentLoaded")]
		public void remove_DOMContentLoaded(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2_2__Impl.Stubs.remove_DOMContentLoaded(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void NavigateWithWebResourceRequest(global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest Request)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2_2__Impl.Stubs.NavigateWithWebResourceRequest(
								this, 
								Request
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSuspended")]
		public bool get_IsSuspended()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_3__Impl.Stubs.get_IsSuspended(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<bool> TrySuspendAsync()
		{
			global::Windows.Foundation.IAsyncOperation<bool> __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_3__Impl.Stubs.TrySuspendAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public void Resume()
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2_3__Impl.Stubs.Resume(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void SetVirtualHostNameToFolderMapping(
					string hostName, 
					string folderPath, 
					global::Microsoft.Web.WebView2.Core.CoreWebView2HostResourceAccessKind accessKind)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2_3__Impl.Stubs.SetVirtualHostNameToFolderMapping(
								this, 
								hostName, 
								folderPath, 
								accessKind
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void ClearVirtualHostNameToFolderMapping(string hostName)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2_3__Impl.Stubs.ClearVirtualHostNameToFolderMapping(
								this, 
								hostName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "FrameCreated")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_FrameCreated(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_4__Impl.Stubs.add_FrameCreated(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "FrameCreated")]
		public void remove_FrameCreated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2_4__Impl.Stubs.remove_FrameCreated(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DownloadStarting")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DownloadStarting(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_4__Impl.Stubs.add_DownloadStarting(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DownloadStarting")]
		public void remove_DownloadStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2_4__Impl.Stubs.remove_DownloadStarting(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ClientCertificateRequested")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ClientCertificateRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_5__Impl.Stubs.add_ClientCertificateRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ClientCertificateRequested")]
		public void remove_ClientCertificateRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2_5__Impl.Stubs.remove_ClientCertificateRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void OpenTaskManagerWindow()
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2_6__Impl.Stubs.OpenTaskManagerWindow(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public global::Windows.Foundation.IAsyncOperation<bool> PrintToPdfAsync(
					string ResultFilePath, 
					global::Microsoft.Web.WebView2.Core.CoreWebView2PrintSettings printSettings)
		{
			global::Windows.Foundation.IAsyncOperation<bool> __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_7__Impl.Stubs.PrintToPdfAsync(
								this, 
								ResultFilePath, 
								printSettings
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsMuted")]
		public bool get_IsMuted()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_8__Impl.Stubs.get_IsMuted(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsMuted")]
		public void put_IsMuted(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2_8__Impl.Stubs.put_IsMuted(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsDocumentPlayingAudio")]
		public bool get_IsDocumentPlayingAudio()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_8__Impl.Stubs.get_IsDocumentPlayingAudio(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "IsMutedChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_IsMutedChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_8__Impl.Stubs.add_IsMutedChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "IsMutedChanged")]
		public void remove_IsMutedChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2_8__Impl.Stubs.remove_IsMutedChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "IsDocumentPlayingAudioChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_IsDocumentPlayingAudioChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_8__Impl.Stubs.add_IsDocumentPlayingAudioChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "IsDocumentPlayingAudioChanged")]
		public void remove_IsDocumentPlayingAudioChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2_8__Impl.Stubs.remove_IsDocumentPlayingAudioChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsDefaultDownloadDialogOpen")]
		public bool get_IsDefaultDownloadDialogOpen()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_9__Impl.Stubs.get_IsDefaultDownloadDialogOpen(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DefaultDownloadDialogCornerAlignment")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2DefaultDownloadDialogCornerAlignment get_DefaultDownloadDialogCornerAlignment()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2DefaultDownloadDialogCornerAlignment __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_9__Impl.Stubs.get_DefaultDownloadDialogCornerAlignment(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DefaultDownloadDialogCornerAlignment")]
		public void put_DefaultDownloadDialogCornerAlignment(global::Microsoft.Web.WebView2.Core.CoreWebView2DefaultDownloadDialogCornerAlignment value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2_9__Impl.Stubs.put_DefaultDownloadDialogCornerAlignment(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DefaultDownloadDialogMargin")]
		public global::Windows.Foundation.Point get_DefaultDownloadDialogMargin()
		{
			global::Windows.Foundation.Point __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_9__Impl.Stubs.get_DefaultDownloadDialogMargin(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DefaultDownloadDialogMargin")]
		public void put_DefaultDownloadDialogMargin(global::Windows.Foundation.Point value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2_9__Impl.Stubs.put_DefaultDownloadDialogMargin(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "IsDefaultDownloadDialogOpenChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_IsDefaultDownloadDialogOpenChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2_9__Impl.Stubs.add_IsDefaultDownloadDialogOpenChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "IsDefaultDownloadDialogOpenChanged")]
		public void remove_IsDefaultDownloadDialogOpenChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2_9__Impl.Stubs.remove_IsDefaultDownloadDialogOpenChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void OpenDefaultDownloadDialog()
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2_9__Impl.Stubs.OpenDefaultDownloadDialog(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void CloseDefaultDownloadDialog()
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2_9__Impl.Stubs.CloseDefaultDownloadDialog(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Settings")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2Settings get_Settings()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2Settings __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.get_Settings(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		public string get_Source()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.get_Source(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BrowserProcessId")]
		public uint get_BrowserProcessId()
		{
			uint __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.get_BrowserProcessId(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanGoBack")]
		public bool get_CanGoBack()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.get_CanGoBack(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanGoForward")]
		public bool get_CanGoForward()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.get_CanGoForward(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DocumentTitle")]
		public string get_DocumentTitle()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.get_DocumentTitle(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContainsFullScreenElement")]
		public bool get_ContainsFullScreenElement()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.get_ContainsFullScreenElement(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationStarting")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationStarting(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.add_NavigationStarting(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationStarting")]
		public void remove_NavigationStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.remove_NavigationStarting(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContentLoading")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContentLoading(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.add_ContentLoading(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContentLoading")]
		public void remove_ContentLoading(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.remove_ContentLoading(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SourceChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SourceChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.add_SourceChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SourceChanged")]
		public void remove_SourceChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.remove_SourceChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "HistoryChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_HistoryChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.add_HistoryChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "HistoryChanged")]
		public void remove_HistoryChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.remove_HistoryChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationCompleted")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationCompleted(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.add_NavigationCompleted(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationCompleted")]
		public void remove_NavigationCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.remove_NavigationCompleted(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "FrameNavigationStarting")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_FrameNavigationStarting(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.add_FrameNavigationStarting(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "FrameNavigationStarting")]
		public void remove_FrameNavigationStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.remove_FrameNavigationStarting(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "FrameNavigationCompleted")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_FrameNavigationCompleted(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.add_FrameNavigationCompleted(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "FrameNavigationCompleted")]
		public void remove_FrameNavigationCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.remove_FrameNavigationCompleted(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ScriptDialogOpening")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ScriptDialogOpening(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.add_ScriptDialogOpening(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ScriptDialogOpening")]
		public void remove_ScriptDialogOpening(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.remove_ScriptDialogOpening(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PermissionRequested")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PermissionRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.add_PermissionRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PermissionRequested")]
		public void remove_PermissionRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.remove_PermissionRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ProcessFailed")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ProcessFailed(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.add_ProcessFailed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ProcessFailed")]
		public void remove_ProcessFailed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.remove_ProcessFailed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "WebMessageReceived")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_WebMessageReceived(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.add_WebMessageReceived(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "WebMessageReceived")]
		public void remove_WebMessageReceived(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.remove_WebMessageReceived(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NewWindowRequested")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NewWindowRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.add_NewWindowRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NewWindowRequested")]
		public void remove_NewWindowRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.remove_NewWindowRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DocumentTitleChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DocumentTitleChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.add_DocumentTitleChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DocumentTitleChanged")]
		public void remove_DocumentTitleChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.remove_DocumentTitleChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContainsFullScreenElementChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContainsFullScreenElementChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.add_ContainsFullScreenElementChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContainsFullScreenElementChanged")]
		public void remove_ContainsFullScreenElementChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.remove_ContainsFullScreenElementChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "WebResourceRequested")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_WebResourceRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.add_WebResourceRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "WebResourceRequested")]
		public void remove_WebResourceRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.remove_WebResourceRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "WindowCloseRequested")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_WindowCloseRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.add_WindowCloseRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "WindowCloseRequested")]
		public void remove_WindowCloseRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.remove_WindowCloseRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void Navigate(string uri)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.Navigate(
								this, 
								uri
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void NavigateToString(string htmlContent)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.NavigateToString(
								this, 
								htmlContent
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public global::Windows.Foundation.IAsyncOperation<string> AddScriptToExecuteOnDocumentCreatedAsync(string javaScript)
		{
			global::Windows.Foundation.IAsyncOperation<string> __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.AddScriptToExecuteOnDocumentCreatedAsync(
								this, 
								javaScript
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public void RemoveScriptToExecuteOnDocumentCreated(string id)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.RemoveScriptToExecuteOnDocumentCreated(
								this, 
								id
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public global::Windows.Foundation.IAsyncOperation<string> ExecuteScriptAsync(string javaScript)
		{
			global::Windows.Foundation.IAsyncOperation<string> __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.ExecuteScriptAsync(
								this, 
								javaScript
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncAction CapturePreviewAsync(
					global::Microsoft.Web.WebView2.Core.CoreWebView2CapturePreviewImageFormat imageFormat, 
					global::Windows.Storage.Streams.IRandomAccessStream imageStream)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.CapturePreviewAsync(
								this, 
								imageFormat, 
								imageStream
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public void Reload()
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.Reload(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void PostWebMessageAsJson(string webMessageAsJson)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.PostWebMessageAsJson(
								this, 
								webMessageAsJson
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void PostWebMessageAsString(string webMessageAsString)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.PostWebMessageAsString(
								this, 
								webMessageAsString
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public global::Windows.Foundation.IAsyncOperation<string> CallDevToolsProtocolMethodAsync(
					string methodName, 
					string parametersAsJson)
		{
			global::Windows.Foundation.IAsyncOperation<string> __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.CallDevToolsProtocolMethodAsync(
								this, 
								methodName, 
								parametersAsJson
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public void GoBack()
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.GoBack(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void GoForward()
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.GoForward(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public global::Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceiver GetDevToolsProtocolEventReceiver(string eventName)
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceiver __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.GetDevToolsProtocolEventReceiver(
								this, 
								eventName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public void Stop()
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.Stop(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void AddHostObjectToScript(
					string name, 
					object rawObject)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.AddHostObjectToScript(
								this, 
								name, 
								rawObject
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void RemoveHostObjectFromScript(string name)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.RemoveHostObjectFromScript(
								this, 
								name
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void OpenDevToolsWindow()
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.OpenDevToolsWindow(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void AddWebResourceRequestedFilter(
					string uri, 
					global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext ResourceContext)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.AddWebResourceRequestedFilter(
								this, 
								uri, 
								ResourceContext
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void RemoveWebResourceRequestedFilter(
					string uri, 
					global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext ResourceContext)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2__Impl.Stubs.RemoveWebResourceRequestedFilter(
								this, 
								uri, 
								ResourceContext
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public CoreWebView2(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings4))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings5))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings6))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings7))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings_Manual))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2Settings : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings2, global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings3, global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings4, global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings5, global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings6, global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings7, global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings_Manual, global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UserAgent")]
		public string get_UserAgent()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings2__Impl.Stubs.get_UserAgent(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UserAgent")]
		public void put_UserAgent(string value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings2__Impl.Stubs.put_UserAgent(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AreBrowserAcceleratorKeysEnabled")]
		public bool get_AreBrowserAcceleratorKeysEnabled()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings3__Impl.Stubs.get_AreBrowserAcceleratorKeysEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AreBrowserAcceleratorKeysEnabled")]
		public void put_AreBrowserAcceleratorKeysEnabled(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings3__Impl.Stubs.put_AreBrowserAcceleratorKeysEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPasswordAutosaveEnabled")]
		public bool get_IsPasswordAutosaveEnabled()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings4__Impl.Stubs.get_IsPasswordAutosaveEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsPasswordAutosaveEnabled")]
		public void put_IsPasswordAutosaveEnabled(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings4__Impl.Stubs.put_IsPasswordAutosaveEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsGeneralAutofillEnabled")]
		public bool get_IsGeneralAutofillEnabled()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings4__Impl.Stubs.get_IsGeneralAutofillEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsGeneralAutofillEnabled")]
		public void put_IsGeneralAutofillEnabled(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings4__Impl.Stubs.put_IsGeneralAutofillEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPinchZoomEnabled")]
		public bool get_IsPinchZoomEnabled()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings5__Impl.Stubs.get_IsPinchZoomEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsPinchZoomEnabled")]
		public void put_IsPinchZoomEnabled(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings5__Impl.Stubs.put_IsPinchZoomEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSwipeNavigationEnabled")]
		public bool get_IsSwipeNavigationEnabled()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings6__Impl.Stubs.get_IsSwipeNavigationEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsSwipeNavigationEnabled")]
		public void put_IsSwipeNavigationEnabled(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings6__Impl.Stubs.put_IsSwipeNavigationEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HiddenPdfToolbarItems")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems get_HiddenPdfToolbarItems()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings7__Impl.Stubs.get_HiddenPdfToolbarItems(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HiddenPdfToolbarItems")]
		public void put_HiddenPdfToolbarItems(global::Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings7__Impl.Stubs.put_HiddenPdfToolbarItems(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HostObjectDispatchAdapter")]
		public global::Microsoft.Web.WebView2.Core.ICoreWebView2DispatchAdapter get_HostObjectDispatchAdapter()
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2DispatchAdapter __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings_Manual__Impl.Stubs.get_HostObjectDispatchAdapter(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HostObjectDispatchAdapter")]
		public void put_HostObjectDispatchAdapter(global::Microsoft.Web.WebView2.Core.ICoreWebView2DispatchAdapter value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings_Manual__Impl.Stubs.put_HostObjectDispatchAdapter(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsScriptEnabled")]
		public bool get_IsScriptEnabled()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings__Impl.Stubs.get_IsScriptEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsScriptEnabled")]
		public void put_IsScriptEnabled(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings__Impl.Stubs.put_IsScriptEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsWebMessageEnabled")]
		public bool get_IsWebMessageEnabled()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings__Impl.Stubs.get_IsWebMessageEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsWebMessageEnabled")]
		public void put_IsWebMessageEnabled(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings__Impl.Stubs.put_IsWebMessageEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AreDefaultScriptDialogsEnabled")]
		public bool get_AreDefaultScriptDialogsEnabled()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings__Impl.Stubs.get_AreDefaultScriptDialogsEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AreDefaultScriptDialogsEnabled")]
		public void put_AreDefaultScriptDialogsEnabled(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings__Impl.Stubs.put_AreDefaultScriptDialogsEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsStatusBarEnabled")]
		public bool get_IsStatusBarEnabled()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings__Impl.Stubs.get_IsStatusBarEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsStatusBarEnabled")]
		public void put_IsStatusBarEnabled(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings__Impl.Stubs.put_IsStatusBarEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AreDevToolsEnabled")]
		public bool get_AreDevToolsEnabled()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings__Impl.Stubs.get_AreDevToolsEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AreDevToolsEnabled")]
		public void put_AreDevToolsEnabled(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings__Impl.Stubs.put_AreDevToolsEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AreDefaultContextMenusEnabled")]
		public bool get_AreDefaultContextMenusEnabled()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings__Impl.Stubs.get_AreDefaultContextMenusEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AreDefaultContextMenusEnabled")]
		public void put_AreDefaultContextMenusEnabled(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings__Impl.Stubs.put_AreDefaultContextMenusEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AreHostObjectsAllowed")]
		public bool get_AreHostObjectsAllowed()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings__Impl.Stubs.get_AreHostObjectsAllowed(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AreHostObjectsAllowed")]
		public void put_AreHostObjectsAllowed(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings__Impl.Stubs.put_AreHostObjectsAllowed(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsZoomControlEnabled")]
		public bool get_IsZoomControlEnabled()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings__Impl.Stubs.get_IsZoomControlEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsZoomControlEnabled")]
		public void put_IsZoomControlEnabled(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings__Impl.Stubs.put_IsZoomControlEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsBuiltInErrorPageEnabled")]
		public bool get_IsBuiltInErrorPageEnabled()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings__Impl.Stubs.get_IsBuiltInErrorPageEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsBuiltInErrorPageEnabled")]
		public void put_IsBuiltInErrorPageEnabled(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Settings__Impl.Stubs.put_IsBuiltInErrorPageEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public CoreWebView2Settings(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2NavigationStartingEventArgs : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs2, global::Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AdditionalAllowedFrameAncestors")]
		public string get_AdditionalAllowedFrameAncestors()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs2__Impl.Stubs.get_AdditionalAllowedFrameAncestors(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AdditionalAllowedFrameAncestors")]
		public void put_AdditionalAllowedFrameAncestors(string value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs2__Impl.Stubs.put_AdditionalAllowedFrameAncestors(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Uri")]
		public string get_Uri()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs__Impl.Stubs.get_Uri(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsUserInitiated")]
		public bool get_IsUserInitiated()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs__Impl.Stubs.get_IsUserInitiated(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsRedirected")]
		public bool get_IsRedirected()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs__Impl.Stubs.get_IsRedirected(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RequestHeaders")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeaders get_RequestHeaders()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeaders __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs__Impl.Stubs.get_RequestHeaders(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cancel")]
		public bool get_Cancel()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs__Impl.Stubs.get_Cancel(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Cancel")]
		public void put_Cancel(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs__Impl.Stubs.put_Cancel(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NavigationId")]
		public ulong get_NavigationId()
		{
			ulong __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs__Impl.Stubs.get_NavigationId(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2NavigationStartingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2HttpRequestHeaders))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2HttpRequestHeaders : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2HttpRequestHeaders, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>
	{
		global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, string>> global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>.GetEnumerator()
		{
			return (global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, string>>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>).TypeHandle
							);
		}

		public string GetHeader(string name)
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2HttpRequestHeaders__Impl.Stubs.GetHeader(
								this, 
								name
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIterator GetHeaders(string name)
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIterator __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2HttpRequestHeaders__Impl.Stubs.GetHeaders(
								this, 
								name
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public bool Contains(string name)
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2HttpRequestHeaders__Impl.Stubs.Contains(
								this, 
								name
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public void SetHeader(
					string name, 
					string value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2HttpRequestHeaders__Impl.Stubs.SetHeader(
								this, 
								name, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void RemoveHeader(string name)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2HttpRequestHeaders__Impl.Stubs.RemoveHeader(
								this, 
								name
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public CoreWebView2HttpRequestHeaders(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2HttpHeadersCollectionIterator))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<string, string>>))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2HttpHeadersCollectionIterator : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2HttpHeadersCollectionIterator, global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<string, string>>
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		public global::System.Collections.Generic.KeyValuePair<string, string> get_Current()
		{
			global::System.Collections.Generic.KeyValuePair<string, string> __retVal = global::Windows.Foundation.Collections.IIterator_A__scg_KeyValuePair_A_string_j_string_V__V___Impl.Stubs.get_Current(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasCurrent")]
		public bool get_HasCurrent()
		{
			bool __retVal = global::Windows.Foundation.Collections.IIterator_A__scg_KeyValuePair_A_string_j_string_V__V___Impl.Stubs.get_HasCurrent(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public bool MoveNext()
		{
			bool __retVal = global::Windows.Foundation.Collections.IIterator_A__scg_KeyValuePair_A_string_j_string_V__V___Impl.Stubs.MoveNext(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public uint GetMany(global::System.Collections.Generic.KeyValuePair<string, string>[] items)
		{
			uint __retVal = global::Windows.Foundation.Collections.IIterator_A__scg_KeyValuePair_A_string_j_string_V__V___Impl.Stubs.GetMany(
								this, 
								items
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2HttpHeadersCollectionIterator(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2ContentLoadingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2ContentLoadingEventArgs : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2ContentLoadingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsErrorPage")]
		public bool get_IsErrorPage()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContentLoadingEventArgs__Impl.Stubs.get_IsErrorPage(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NavigationId")]
		public ulong get_NavigationId()
		{
			ulong __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContentLoadingEventArgs__Impl.Stubs.get_NavigationId(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2ContentLoadingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2SourceChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2SourceChangedEventArgs : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2SourceChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsNewDocument")]
		public bool get_IsNewDocument()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2SourceChangedEventArgs__Impl.Stubs.get_IsNewDocument(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2SourceChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2NavigationCompletedEventArgs))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2NavigationCompletedEventArgs2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2NavigationCompletedEventArgs : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2NavigationCompletedEventArgs2, global::Microsoft.Web.WebView2.Core.ICoreWebView2NavigationCompletedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HttpStatusCode")]
		public int get_HttpStatusCode()
		{
			int __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2NavigationCompletedEventArgs2__Impl.Stubs.get_HttpStatusCode(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSuccess")]
		public bool get_IsSuccess()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2NavigationCompletedEventArgs__Impl.Stubs.get_IsSuccess(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WebErrorStatus")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus get_WebErrorStatus()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2NavigationCompletedEventArgs__Impl.Stubs.get_WebErrorStatus(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NavigationId")]
		public ulong get_NavigationId()
		{
			ulong __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2NavigationCompletedEventArgs__Impl.Stubs.get_NavigationId(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2NavigationCompletedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2ScriptDialogOpeningEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2ScriptDialogOpeningEventArgs : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2ScriptDialogOpeningEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Uri")]
		public string get_Uri()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ScriptDialogOpeningEventArgs__Impl.Stubs.get_Uri(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Kind")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogKind get_Kind()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogKind __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ScriptDialogOpeningEventArgs__Impl.Stubs.get_Kind(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Message")]
		public string get_Message()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ScriptDialogOpeningEventArgs__Impl.Stubs.get_Message(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DefaultText")]
		public string get_DefaultText()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ScriptDialogOpeningEventArgs__Impl.Stubs.get_DefaultText(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ResultText")]
		public string get_ResultText()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ScriptDialogOpeningEventArgs__Impl.Stubs.get_ResultText(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ResultText")]
		public void put_ResultText(string value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2ScriptDialogOpeningEventArgs__Impl.Stubs.put_ResultText(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void Accept()
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2ScriptDialogOpeningEventArgs__Impl.Stubs.Accept(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public global::Windows.Foundation.Deferral GetDeferral()
		{
			global::Windows.Foundation.Deferral __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ScriptDialogOpeningEventArgs__Impl.Stubs.GetDeferral(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2ScriptDialogOpeningEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2PermissionRequestedEventArgs : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs2, global::Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Handled")]
		public bool get_Handled()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs2__Impl.Stubs.get_Handled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Handled")]
		public void put_Handled(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs2__Impl.Stubs.put_Handled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Uri")]
		public string get_Uri()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs__Impl.Stubs.get_Uri(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PermissionKind")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind get_PermissionKind()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs__Impl.Stubs.get_PermissionKind(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsUserInitiated")]
		public bool get_IsUserInitiated()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs__Impl.Stubs.get_IsUserInitiated(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "State")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionState get_State()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionState __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs__Impl.Stubs.get_State(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "State")]
		public void put_State(global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionState value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs__Impl.Stubs.put_State(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public global::Windows.Foundation.Deferral GetDeferral()
		{
			global::Windows.Foundation.Deferral __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs__Impl.Stubs.GetDeferral(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2PermissionRequestedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgs))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgs2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2ProcessFailedEventArgs : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgs2, global::Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Reason")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedReason get_Reason()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedReason __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgs2__Impl.Stubs.get_Reason(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExitCode")]
		public int get_ExitCode()
		{
			int __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgs2__Impl.Stubs.get_ExitCode(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ProcessDescription")]
		public string get_ProcessDescription()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgs2__Impl.Stubs.get_ProcessDescription(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FrameInfosForFailedProcess")]
		public global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo> get_FrameInfosForFailedProcess()
		{
			global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo> __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgs2__Impl.Stubs.get_FrameInfosForFailedProcess(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ProcessFailedKind")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedKind get_ProcessFailedKind()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedKind __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgs__Impl.Stubs.get_ProcessFailedKind(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2ProcessFailedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2FrameInfo))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2FrameInfo : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2FrameInfo
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Name")]
		public string get_Name()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2FrameInfo__Impl.Stubs.get_Name(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		public string get_Source()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2FrameInfo__Impl.Stubs.get_Source(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2FrameInfo(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2WebMessageReceivedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2WebMessageReceivedEventArgs : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2WebMessageReceivedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		public string get_Source()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WebMessageReceivedEventArgs__Impl.Stubs.get_Source(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WebMessageAsJson")]
		public string get_WebMessageAsJson()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WebMessageReceivedEventArgs__Impl.Stubs.get_WebMessageAsJson(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public string TryGetWebMessageAsString()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WebMessageReceivedEventArgs__Impl.Stubs.TryGetWebMessageAsString(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2WebMessageReceivedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2NewWindowRequestedEventArgs : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs2, global::Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Name")]
		public string get_Name()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs2__Impl.Stubs.get_Name(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Uri")]
		public string get_Uri()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs__Impl.Stubs.get_Uri(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NewWindow")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2 get_NewWindow()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2 __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs__Impl.Stubs.get_NewWindow(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "NewWindow")]
		public void put_NewWindow(global::Microsoft.Web.WebView2.Core.CoreWebView2 value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs__Impl.Stubs.put_NewWindow(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Handled")]
		public bool get_Handled()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs__Impl.Stubs.get_Handled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Handled")]
		public void put_Handled(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs__Impl.Stubs.put_Handled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsUserInitiated")]
		public bool get_IsUserInitiated()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs__Impl.Stubs.get_IsUserInitiated(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WindowFeatures")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures get_WindowFeatures()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs__Impl.Stubs.get_WindowFeatures(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.Deferral GetDeferral()
		{
			global::Windows.Foundation.Deferral __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs__Impl.Stubs.GetDeferral(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2NewWindowRequestedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2WindowFeatures))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2WindowFeatures : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2WindowFeatures
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasPosition")]
		public bool get_HasPosition()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WindowFeatures__Impl.Stubs.get_HasPosition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasSize")]
		public bool get_HasSize()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WindowFeatures__Impl.Stubs.get_HasSize(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Left")]
		public uint get_Left()
		{
			uint __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WindowFeatures__Impl.Stubs.get_Left(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Top")]
		public uint get_Top()
		{
			uint __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WindowFeatures__Impl.Stubs.get_Top(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Height")]
		public uint get_Height()
		{
			uint __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WindowFeatures__Impl.Stubs.get_Height(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Width")]
		public uint get_Width()
		{
			uint __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WindowFeatures__Impl.Stubs.get_Width(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShouldDisplayMenuBar")]
		public bool get_ShouldDisplayMenuBar()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WindowFeatures__Impl.Stubs.get_ShouldDisplayMenuBar(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShouldDisplayStatus")]
		public bool get_ShouldDisplayStatus()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WindowFeatures__Impl.Stubs.get_ShouldDisplayStatus(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShouldDisplayToolbar")]
		public bool get_ShouldDisplayToolbar()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WindowFeatures__Impl.Stubs.get_ShouldDisplayToolbar(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShouldDisplayScrollBars")]
		public bool get_ShouldDisplayScrollBars()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WindowFeatures__Impl.Stubs.get_ShouldDisplayScrollBars(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2WindowFeatures(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequestedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2WebResourceRequestedEventArgs : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequestedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Request")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest get_Request()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequestedEventArgs__Impl.Stubs.get_Request(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Response")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse get_Response()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequestedEventArgs__Impl.Stubs.get_Response(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Response")]
		public void put_Response(global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequestedEventArgs__Impl.Stubs.put_Response(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ResourceContext")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext get_ResourceContext()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequestedEventArgs__Impl.Stubs.get_ResourceContext(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.Deferral GetDeferral()
		{
			global::Windows.Foundation.Deferral __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequestedEventArgs__Impl.Stubs.GetDeferral(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2WebResourceRequestedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequest))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2WebResourceRequest : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequest
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Uri")]
		public string get_Uri()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequest__Impl.Stubs.get_Uri(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Uri")]
		public void put_Uri(string value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequest__Impl.Stubs.put_Uri(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Method")]
		public string get_Method()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequest__Impl.Stubs.get_Method(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Method")]
		public void put_Method(string value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequest__Impl.Stubs.put_Method(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		public global::Windows.Storage.Streams.IRandomAccessStream get_Content()
		{
			global::Windows.Storage.Streams.IRandomAccessStream __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequest__Impl.Stubs.get_Content(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		public void put_Content(global::Windows.Storage.Streams.IRandomAccessStream value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequest__Impl.Stubs.put_Content(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Headers")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeaders get_Headers()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeaders __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequest__Impl.Stubs.get_Headers(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2WebResourceRequest(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponse))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2WebResourceResponse : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponse
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		public global::Windows.Storage.Streams.IRandomAccessStream get_Content()
		{
			global::Windows.Storage.Streams.IRandomAccessStream __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponse__Impl.Stubs.get_Content(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		public void put_Content(global::Windows.Storage.Streams.IRandomAccessStream value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponse__Impl.Stubs.put_Content(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Headers")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeaders get_Headers()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeaders __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponse__Impl.Stubs.get_Headers(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StatusCode")]
		public int get_StatusCode()
		{
			int __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponse__Impl.Stubs.get_StatusCode(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "StatusCode")]
		public void put_StatusCode(int value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponse__Impl.Stubs.put_StatusCode(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ReasonPhrase")]
		public string get_ReasonPhrase()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponse__Impl.Stubs.get_ReasonPhrase(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ReasonPhrase")]
		public void put_ReasonPhrase(string value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponse__Impl.Stubs.put_ReasonPhrase(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public CoreWebView2WebResourceResponse(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2HttpResponseHeaders))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2HttpResponseHeaders : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2HttpResponseHeaders, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>
	{
		global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, string>> global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>.GetEnumerator()
		{
			return (global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, string>>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>).TypeHandle
							);
		}

		public void AppendHeader(
					string name, 
					string value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2HttpResponseHeaders__Impl.Stubs.AppendHeader(
								this, 
								name, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public bool Contains(string name)
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2HttpResponseHeaders__Impl.Stubs.Contains(
								this, 
								name
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public string GetHeader(string name)
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2HttpResponseHeaders__Impl.Stubs.GetHeader(
								this, 
								name
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIterator GetHeaders(string name)
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIterator __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2HttpResponseHeaders__Impl.Stubs.GetHeaders(
								this, 
								name
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2HttpResponseHeaders(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceiver))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2DevToolsProtocolEventReceiver : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceiver
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DevToolsProtocolEventReceived")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DevToolsProtocolEventReceived(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceiver__Impl.Stubs.add_DevToolsProtocolEventReceived(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DevToolsProtocolEventReceived")]
		public void remove_DevToolsProtocolEventReceived(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceiver__Impl.Stubs.remove_DevToolsProtocolEventReceived(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public CoreWebView2DevToolsProtocolEventReceiver(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceivedEventArgs))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceivedEventArgs2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2DevToolsProtocolEventReceivedEventArgs : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceivedEventArgs2, global::Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceivedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SessionId")]
		public string get_SessionId()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceivedEventArgs2__Impl.Stubs.get_SessionId(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ParameterObjectAsJson")]
		public string get_ParameterObjectAsJson()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceivedEventArgs__Impl.Stubs.get_ParameterObjectAsJson(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2DevToolsProtocolEventReceivedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationRequestedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2BasicAuthenticationRequestedEventArgs : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationRequestedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Uri")]
		public string get_Uri()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationRequestedEventArgs__Impl.Stubs.get_Uri(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Challenge")]
		public string get_Challenge()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationRequestedEventArgs__Impl.Stubs.get_Challenge(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Response")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationResponse get_Response()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationResponse __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationRequestedEventArgs__Impl.Stubs.get_Response(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cancel")]
		public bool get_Cancel()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationRequestedEventArgs__Impl.Stubs.get_Cancel(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Cancel")]
		public void put_Cancel(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationRequestedEventArgs__Impl.Stubs.put_Cancel(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public global::Windows.Foundation.Deferral GetDeferral()
		{
			global::Windows.Foundation.Deferral __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationRequestedEventArgs__Impl.Stubs.GetDeferral(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2BasicAuthenticationRequestedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationResponse))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2BasicAuthenticationResponse : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationResponse
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UserName")]
		public string get_UserName()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationResponse__Impl.Stubs.get_UserName(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UserName")]
		public void put_UserName(string value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationResponse__Impl.Stubs.put_UserName(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Password")]
		public string get_Password()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationResponse__Impl.Stubs.get_Password(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Password")]
		public void put_Password(string value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationResponse__Impl.Stubs.put_Password(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public CoreWebView2BasicAuthenticationResponse(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuRequestedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2ContextMenuRequestedEventArgs : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuRequestedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItems")]
		public global::System.Collections.Generic.IList<global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem> get_MenuItems()
		{
			global::System.Collections.Generic.IList<global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem> __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuRequestedEventArgs__Impl.Stubs.get_MenuItems(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContextMenuTarget")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTarget get_ContextMenuTarget()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTarget __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuRequestedEventArgs__Impl.Stubs.get_ContextMenuTarget(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Location")]
		public global::Windows.Foundation.Point get_Location()
		{
			global::Windows.Foundation.Point __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuRequestedEventArgs__Impl.Stubs.get_Location(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedCommandId")]
		public int get_SelectedCommandId()
		{
			int __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuRequestedEventArgs__Impl.Stubs.get_SelectedCommandId(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectedCommandId")]
		public void put_SelectedCommandId(int value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuRequestedEventArgs__Impl.Stubs.put_SelectedCommandId(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Handled")]
		public bool get_Handled()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuRequestedEventArgs__Impl.Stubs.get_Handled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Handled")]
		public void put_Handled(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuRequestedEventArgs__Impl.Stubs.put_Handled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public global::Windows.Foundation.Deferral GetDeferral()
		{
			global::Windows.Foundation.Deferral __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuRequestedEventArgs__Impl.Stubs.GetDeferral(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2ContextMenuRequestedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuItem))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2ContextMenuItem : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuItem
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Name")]
		public string get_Name()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuItem__Impl.Stubs.get_Name(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Label")]
		public string get_Label()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuItem__Impl.Stubs.get_Label(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CommandId")]
		public int get_CommandId()
		{
			int __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuItem__Impl.Stubs.get_CommandId(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShortcutKeyDescription")]
		public string get_ShortcutKeyDescription()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuItem__Impl.Stubs.get_ShortcutKeyDescription(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Icon")]
		public global::Windows.Storage.Streams.IRandomAccessStream get_Icon()
		{
			global::Windows.Storage.Streams.IRandomAccessStream __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuItem__Impl.Stubs.get_Icon(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Kind")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItemKind get_Kind()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItemKind __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuItem__Impl.Stubs.get_Kind(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsEnabled")]
		public bool get_IsEnabled()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuItem__Impl.Stubs.get_IsEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsEnabled")]
		public void put_IsEnabled(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuItem__Impl.Stubs.put_IsEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsChecked")]
		public bool get_IsChecked()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuItem__Impl.Stubs.get_IsChecked(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsChecked")]
		public void put_IsChecked(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuItem__Impl.Stubs.put_IsChecked(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Children")]
		public global::System.Collections.Generic.IList<global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem> get_Children()
		{
			global::System.Collections.Generic.IList<global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem> __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuItem__Impl.Stubs.get_Children(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CustomItemSelected")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CustomItemSelected(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuItem__Impl.Stubs.add_CustomItemSelected(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CustomItemSelected")]
		public void remove_CustomItemSelected(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuItem__Impl.Stubs.remove_CustomItemSelected(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public CoreWebView2ContextMenuItem(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuTarget))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2ContextMenuTarget : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuTarget
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Kind")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTargetKind get_Kind()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTargetKind __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuTarget__Impl.Stubs.get_Kind(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsEditable")]
		public bool get_IsEditable()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuTarget__Impl.Stubs.get_IsEditable(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsRequestedForMainFrame")]
		public bool get_IsRequestedForMainFrame()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuTarget__Impl.Stubs.get_IsRequestedForMainFrame(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PageUri")]
		public string get_PageUri()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuTarget__Impl.Stubs.get_PageUri(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FrameUri")]
		public string get_FrameUri()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuTarget__Impl.Stubs.get_FrameUri(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasLinkUri")]
		public bool get_HasLinkUri()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuTarget__Impl.Stubs.get_HasLinkUri(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LinkUri")]
		public string get_LinkUri()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuTarget__Impl.Stubs.get_LinkUri(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasLinkText")]
		public bool get_HasLinkText()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuTarget__Impl.Stubs.get_HasLinkText(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LinkText")]
		public string get_LinkText()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuTarget__Impl.Stubs.get_LinkText(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasSourceUri")]
		public bool get_HasSourceUri()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuTarget__Impl.Stubs.get_HasSourceUri(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourceUri")]
		public string get_SourceUri()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuTarget__Impl.Stubs.get_SourceUri(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasSelection")]
		public bool get_HasSelection()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuTarget__Impl.Stubs.get_HasSelection(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionText")]
		public string get_SelectionText()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuTarget__Impl.Stubs.get_SelectionText(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2ContextMenuTarget(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Profile))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.CoreWebView2Profile_Manual))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Profile2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2Profile : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.CoreWebView2Profile_Manual, global::Microsoft.Web.WebView2.Core.ICoreWebView2Profile2, global::Microsoft.Web.WebView2.Core.ICoreWebView2Profile
	{
		public global::Windows.Foundation.IAsyncAction ClearBrowsingDataAsync(
					global::Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds dataKinds, 
					global::System.DateTimeOffset startTime, 
					global::System.DateTimeOffset endTime)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Microsoft.Web.WebView2.Core.CoreWebView2Profile_Manual__Impl.Stubs.ClearBrowsingDataAsync(
								this, 
								dataKinds, 
								startTime, 
								endTime
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncAction ClearBrowsingDataAsync()
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Microsoft.Web.WebView2.Core.CoreWebView2Profile_Manual__Impl.Stubs.ClearBrowsingDataAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncAction ClearBrowsingDataAsync(global::Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds dataKinds)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Profile2__Impl.Stubs.ClearBrowsingDataAsync(
								this, 
								dataKinds
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ProfileName")]
		public string get_ProfileName()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Profile__Impl.Stubs.get_ProfileName(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsInPrivateModeEnabled")]
		public bool get_IsInPrivateModeEnabled()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Profile__Impl.Stubs.get_IsInPrivateModeEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ProfilePath")]
		public string get_ProfilePath()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Profile__Impl.Stubs.get_ProfilePath(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DefaultDownloadFolderPath")]
		public string get_DefaultDownloadFolderPath()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Profile__Impl.Stubs.get_DefaultDownloadFolderPath(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DefaultDownloadFolderPath")]
		public void put_DefaultDownloadFolderPath(string value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Profile__Impl.Stubs.put_DefaultDownloadFolderPath(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreferredColorScheme")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2PreferredColorScheme get_PreferredColorScheme()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2PreferredColorScheme __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Profile__Impl.Stubs.get_PreferredColorScheme(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PreferredColorScheme")]
		public void put_PreferredColorScheme(global::Microsoft.Web.WebView2.Core.CoreWebView2PreferredColorScheme value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Profile__Impl.Stubs.put_PreferredColorScheme(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public CoreWebView2Profile(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2ServerCertificateErrorDetectedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2ServerCertificateErrorDetectedEventArgs : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2ServerCertificateErrorDetectedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ErrorStatus")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus get_ErrorStatus()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ServerCertificateErrorDetectedEventArgs__Impl.Stubs.get_ErrorStatus(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RequestUri")]
		public string get_RequestUri()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ServerCertificateErrorDetectedEventArgs__Impl.Stubs.get_RequestUri(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ServerCertificate")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2Certificate get_ServerCertificate()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2Certificate __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ServerCertificateErrorDetectedEventArgs__Impl.Stubs.get_ServerCertificate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Action")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorAction get_Action()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorAction __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ServerCertificateErrorDetectedEventArgs__Impl.Stubs.get_Action(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Action")]
		public void put_Action(global::Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorAction value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2ServerCertificateErrorDetectedEventArgs__Impl.Stubs.put_Action(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public global::Windows.Foundation.Deferral GetDeferral()
		{
			global::Windows.Foundation.Deferral __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ServerCertificateErrorDetectedEventArgs__Impl.Stubs.GetDeferral(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2ServerCertificateErrorDetectedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Certificate))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.CoreWebView2Certificate_Manual))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2Certificate : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.CoreWebView2Certificate_Manual, global::Microsoft.Web.WebView2.Core.ICoreWebView2Certificate
	{
		public global::Windows.Security.Cryptography.Certificates.Certificate ToCertificate()
		{
			global::Windows.Security.Cryptography.Certificates.Certificate __retVal = global::Microsoft.Web.WebView2.Core.CoreWebView2Certificate_Manual__Impl.Stubs.ToCertificate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Subject")]
		public string get_Subject()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Certificate__Impl.Stubs.get_Subject(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Issuer")]
		public string get_Issuer()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Certificate__Impl.Stubs.get_Issuer(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValidFrom")]
		public double get_ValidFrom()
		{
			double __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Certificate__Impl.Stubs.get_ValidFrom(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValidTo")]
		public double get_ValidTo()
		{
			double __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Certificate__Impl.Stubs.get_ValidTo(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DerEncodedSerialNumber")]
		public string get_DerEncodedSerialNumber()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Certificate__Impl.Stubs.get_DerEncodedSerialNumber(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		public string get_DisplayName()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Certificate__Impl.Stubs.get_DisplayName(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PemEncodedIssuerCertificateChain")]
		public global::System.Collections.Generic.IReadOnlyList<string> get_PemEncodedIssuerCertificateChain()
		{
			global::System.Collections.Generic.IReadOnlyList<string> __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Certificate__Impl.Stubs.get_PemEncodedIssuerCertificateChain(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public string ToPemEncoding()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Certificate__Impl.Stubs.ToPemEncoding(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2Certificate(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2CookieManager))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2CookieManager_Manual))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2CookieManager : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2CookieManager_Manual, global::Microsoft.Web.WebView2.Core.ICoreWebView2CookieManager
	{
		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Web.WebView2.Core.CoreWebView2Cookie>> GetCookiesAsync(string uri)
		{
			global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Web.WebView2.Core.CoreWebView2Cookie>> __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2CookieManager_Manual__Impl.Stubs.GetCookiesAsync(
								this, 
								uri
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Microsoft.Web.WebView2.Core.CoreWebView2Cookie CreateCookie(
					string name, 
					string value, 
					string Domain, 
					string Path)
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2Cookie __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2CookieManager__Impl.Stubs.CreateCookie(
								this, 
								name, 
								value, 
								Domain, 
								Path
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Microsoft.Web.WebView2.Core.CoreWebView2Cookie CopyCookie(global::Microsoft.Web.WebView2.Core.CoreWebView2Cookie cookieParam)
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2Cookie __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2CookieManager__Impl.Stubs.CopyCookie(
								this, 
								cookieParam
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public void AddOrUpdateCookie(global::Microsoft.Web.WebView2.Core.CoreWebView2Cookie cookie)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2CookieManager__Impl.Stubs.AddOrUpdateCookie(
								this, 
								cookie
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void DeleteCookie(global::Microsoft.Web.WebView2.Core.CoreWebView2Cookie cookie)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2CookieManager__Impl.Stubs.DeleteCookie(
								this, 
								cookie
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void DeleteCookies(
					string name, 
					string uri)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2CookieManager__Impl.Stubs.DeleteCookies(
								this, 
								name, 
								uri
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void DeleteCookiesWithDomainAndPath(
					string name, 
					string Domain, 
					string Path)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2CookieManager__Impl.Stubs.DeleteCookiesWithDomainAndPath(
								this, 
								name, 
								Domain, 
								Path
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void DeleteAllCookies()
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2CookieManager__Impl.Stubs.DeleteAllCookies(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public CoreWebView2CookieManager(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Cookie))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2Cookie : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2Cookie
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Name")]
		public string get_Name()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Cookie__Impl.Stubs.get_Name(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Value")]
		public string get_Value()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Cookie__Impl.Stubs.get_Value(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Value")]
		public void put_Value(string value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Cookie__Impl.Stubs.put_Value(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Domain")]
		public string get_Domain()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Cookie__Impl.Stubs.get_Domain(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Path")]
		public string get_Path()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Cookie__Impl.Stubs.get_Path(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Expires")]
		public double get_Expires()
		{
			double __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Cookie__Impl.Stubs.get_Expires(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Expires")]
		public void put_Expires(double value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Cookie__Impl.Stubs.put_Expires(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsHttpOnly")]
		public bool get_IsHttpOnly()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Cookie__Impl.Stubs.get_IsHttpOnly(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsHttpOnly")]
		public void put_IsHttpOnly(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Cookie__Impl.Stubs.put_IsHttpOnly(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SameSite")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2CookieSameSiteKind get_SameSite()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2CookieSameSiteKind __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Cookie__Impl.Stubs.get_SameSite(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SameSite")]
		public void put_SameSite(global::Microsoft.Web.WebView2.Core.CoreWebView2CookieSameSiteKind value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Cookie__Impl.Stubs.put_SameSite(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSecure")]
		public bool get_IsSecure()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Cookie__Impl.Stubs.get_IsSecure(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsSecure")]
		public void put_IsSecure(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Cookie__Impl.Stubs.put_IsSecure(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSession")]
		public bool get_IsSession()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Cookie__Impl.Stubs.get_IsSession(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2Cookie(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment10))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment5))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment6))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment7))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment8))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment9))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment_Manual))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2Environment : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment10, global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment2, global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment3, global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment5, global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment6, global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment7, global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment8, global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment9, global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment_Manual, global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment
	{
		public global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerOptions CreateCoreWebView2ControllerOptions()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerOptions __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment10__Impl.Stubs.CreateCoreWebView2ControllerOptions(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest CreateWebResourceRequest(
					string uri, 
					string Method, 
					global::Windows.Storage.Streams.IRandomAccessStream postData, 
					string Headers)
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment2__Impl.Stubs.CreateWebResourceRequest(
								this, 
								uri, 
								Method, 
								postData, 
								Headers
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Microsoft.Web.WebView2.Core.CoreWebView2CompositionController> CreateCoreWebView2CompositionControllerAsync(global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference ParentWindow)
		{
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Web.WebView2.Core.CoreWebView2CompositionController> __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment3__Impl.Stubs.CreateCoreWebView2CompositionControllerAsync(
								this, 
								ParentWindow
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Microsoft.Web.WebView2.Core.CoreWebView2PointerInfo CreateCoreWebView2PointerInfo()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2PointerInfo __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment3__Impl.Stubs.CreateCoreWebView2PointerInfo(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "BrowserProcessExited")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_BrowserProcessExited(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment, global::Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment5__Impl.Stubs.add_BrowserProcessExited(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "BrowserProcessExited")]
		public void remove_BrowserProcessExited(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment5__Impl.Stubs.remove_BrowserProcessExited(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public global::Microsoft.Web.WebView2.Core.CoreWebView2PrintSettings CreatePrintSettings()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2PrintSettings __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment6__Impl.Stubs.CreatePrintSettings(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UserDataFolder")]
		public string get_UserDataFolder()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment7__Impl.Stubs.get_UserDataFolder(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ProcessInfosChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ProcessInfosChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment8__Impl.Stubs.add_ProcessInfosChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ProcessInfosChanged")]
		public void remove_ProcessInfosChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment8__Impl.Stubs.remove_ProcessInfosChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessInfo> GetProcessInfos()
		{
			global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessInfo> __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment8__Impl.Stubs.GetProcessInfos(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem CreateContextMenuItem(
					string Label, 
					global::Windows.Storage.Streams.IRandomAccessStream iconStream, 
					global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItemKind Kind)
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment9__Impl.Stubs.CreateContextMenuItem(
								this, 
								Label, 
								iconStream, 
								Kind
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller> CreateCoreWebView2ControllerAsync(
					global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference ParentWindow, 
					global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerOptions options)
		{
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller> __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment_Manual__Impl.Stubs.CreateCoreWebView2ControllerAsync(
								this, 
								ParentWindow, 
								options
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Microsoft.Web.WebView2.Core.CoreWebView2CompositionController> CreateCoreWebView2CompositionControllerAsync(
					global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference ParentWindow, 
					global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerOptions options)
		{
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Web.WebView2.Core.CoreWebView2CompositionController> __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment_Manual__Impl.Stubs.CreateCoreWebView2CompositionControllerAsync(
								this, 
								ParentWindow, 
								options
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BrowserVersionString")]
		public string get_BrowserVersionString()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment__Impl.Stubs.get_BrowserVersionString(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NewBrowserVersionAvailable")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NewBrowserVersionAvailable(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment__Impl.Stubs.add_NewBrowserVersionAvailable(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NewBrowserVersionAvailable")]
		public void remove_NewBrowserVersionAvailable(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment__Impl.Stubs.remove_NewBrowserVersionAvailable(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public global::Windows.Foundation.IAsyncOperation<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller> CreateCoreWebView2ControllerAsync(global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference ParentWindow)
		{
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller> __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment__Impl.Stubs.CreateCoreWebView2ControllerAsync(
								this, 
								ParentWindow
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse CreateWebResourceResponse(
					global::Windows.Storage.Streams.IRandomAccessStream Content, 
					int StatusCode, 
					string ReasonPhrase, 
					string Headers)
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Environment__Impl.Stubs.CreateWebResourceResponse(
								this, 
								Content, 
								StatusCode, 
								ReasonPhrase, 
								Headers
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public static global::Windows.Foundation.IAsyncOperation<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment> CreateAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment> retval;
			retval = __Factory_Microsoft_Web_WebView2_Core__ICoreWebView2EnvironmentStatics_CreateAsync("Microsoft.Web.WebView2.Core.CoreWebView2Environment");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.Foundation.IAsyncOperation<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment> __Factory_Microsoft_Web_WebView2_Core__ICoreWebView2EnvironmentStatics_CreateAsync(string typeName)
		{
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment> __pRetVal;
			__pRetVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentStatics__Impl.Stubs.CreateAsync(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static global::Windows.Foundation.IAsyncOperation<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment> CreateWithOptionsAsync(
					string browserExecutableFolder, 
					string userDataFolder, 
					global::Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentOptions options)
		{
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment> retval;
			retval = __Factory_Microsoft_Web_WebView2_Core__ICoreWebView2EnvironmentStatics_CreateWithOptionsAsync(
								"Microsoft.Web.WebView2.Core.CoreWebView2Environment", 
								browserExecutableFolder, 
								userDataFolder, 
								options
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.Foundation.IAsyncOperation<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment> __Factory_Microsoft_Web_WebView2_Core__ICoreWebView2EnvironmentStatics_CreateWithOptionsAsync(
					string typeName, 
					string browserExecutableFolder, 
					string userDataFolder, 
					global::Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentOptions options)
		{
			global::Windows.Foundation.IAsyncOperation<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment> __pRetVal;
			__pRetVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentStatics__Impl.Stubs.CreateWithOptionsAsync(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentStatics).TypeHandle
												), 
								browserExecutableFolder, 
								userDataFolder, 
								options
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static string GetAvailableBrowserVersionString()
		{
			string retval;
			retval = __Factory_Microsoft_Web_WebView2_Core__ICoreWebView2EnvironmentStatics_GetAvailableBrowserVersionString("Microsoft.Web.WebView2.Core.CoreWebView2Environment");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static string __Factory_Microsoft_Web_WebView2_Core__ICoreWebView2EnvironmentStatics_GetAvailableBrowserVersionString(string typeName)
		{
			string __pRetVal;
			__pRetVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentStatics__Impl.Stubs.GetAvailableBrowserVersionString(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static string GetAvailableBrowserVersionString(string browserExecutableFolder)
		{
			string retval;
			retval = __Factory_Microsoft_Web_WebView2_Core__ICoreWebView2EnvironmentStatics_GetAvailableBrowserVersionString(
								"Microsoft.Web.WebView2.Core.CoreWebView2Environment", 
								browserExecutableFolder
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static string __Factory_Microsoft_Web_WebView2_Core__ICoreWebView2EnvironmentStatics_GetAvailableBrowserVersionString(
					string typeName, 
					string browserExecutableFolder)
		{
			string __pRetVal;
			__pRetVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentStatics__Impl.Stubs.GetAvailableBrowserVersionString(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentStatics).TypeHandle
												), 
								browserExecutableFolder
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static int CompareBrowserVersionString(
					string browserVersionString1, 
					string browserVersionString2)
		{
			int retval;
			retval = __Factory_Microsoft_Web_WebView2_Core__ICoreWebView2EnvironmentStatics_CompareBrowserVersionString(
								"Microsoft.Web.WebView2.Core.CoreWebView2Environment", 
								browserVersionString1, 
								browserVersionString2
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static int __Factory_Microsoft_Web_WebView2_Core__ICoreWebView2EnvironmentStatics_CompareBrowserVersionString(
					string typeName, 
					string browserVersionString1, 
					string browserVersionString2)
		{
			int __pRetVal;
			__pRetVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentStatics__Impl.Stubs.CompareBrowserVersionString(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentStatics).TypeHandle
												), 
								browserVersionString1, 
								browserVersionString2
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public CoreWebView2Environment(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2EnvironmentOptions : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions2, global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public CoreWebView2EnvironmentOptions()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentOptions");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExclusiveUserDataFolderAccess")]
		public bool get_ExclusiveUserDataFolderAccess()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions2__Impl.Stubs.get_ExclusiveUserDataFolderAccess(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ExclusiveUserDataFolderAccess")]
		public void put_ExclusiveUserDataFolderAccess(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions2__Impl.Stubs.put_ExclusiveUserDataFolderAccess(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AdditionalBrowserArguments")]
		public string get_AdditionalBrowserArguments()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions__Impl.Stubs.get_AdditionalBrowserArguments(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AdditionalBrowserArguments")]
		public void put_AdditionalBrowserArguments(string value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions__Impl.Stubs.put_AdditionalBrowserArguments(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Language")]
		public string get_Language()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions__Impl.Stubs.get_Language(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Language")]
		public void put_Language(string value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions__Impl.Stubs.put_Language(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TargetCompatibleBrowserVersion")]
		public string get_TargetCompatibleBrowserVersion()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions__Impl.Stubs.get_TargetCompatibleBrowserVersion(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TargetCompatibleBrowserVersion")]
		public void put_TargetCompatibleBrowserVersion(string value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions__Impl.Stubs.put_TargetCompatibleBrowserVersion(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AllowSingleSignOnUsingOSPrimaryAccount")]
		public bool get_AllowSingleSignOnUsingOSPrimaryAccount()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions__Impl.Stubs.get_AllowSingleSignOnUsingOSPrimaryAccount(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AllowSingleSignOnUsingOSPrimaryAccount")]
		public void put_AllowSingleSignOnUsingOSPrimaryAccount(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions__Impl.Stubs.put_AllowSingleSignOnUsingOSPrimaryAccount(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public CoreWebView2EnvironmentOptions(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2ControllerWindowReference))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2ControllerWindowReference : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2ControllerWindowReference
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WindowHandle")]
		public ulong get_WindowHandle()
		{
			ulong __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ControllerWindowReference__Impl.Stubs.get_WindowHandle(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CoreWindow")]
		public global::Windows.UI.Core.CoreWindow get_CoreWindow()
		{
			global::Windows.UI.Core.CoreWindow __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ControllerWindowReference__Impl.Stubs.get_CoreWindow(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public static global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference CreateFromWindowHandle(ulong windowHandle)
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference retval;
			retval = __Factory_Microsoft_Web_WebView2_Core__ICoreWebView2ControllerWindowReferenceStatics_CreateFromWindowHandle(
								"Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference", 
								windowHandle
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference __Factory_Microsoft_Web_WebView2_Core__ICoreWebView2ControllerWindowReferenceStatics_CreateFromWindowHandle(
					string typeName, 
					ulong windowHandle)
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference __pRetVal;
			__pRetVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ControllerWindowReferenceStatics__Impl.Stubs.CreateFromWindowHandle(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2ControllerWindowReferenceStatics).TypeHandle
												), 
								windowHandle
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference CreateFromCoreWindow(global::Windows.UI.Core.CoreWindow coreWindow)
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference retval;
			retval = __Factory_Microsoft_Web_WebView2_Core__ICoreWebView2ControllerWindowReferenceStatics_CreateFromCoreWindow(
								"Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference", 
								coreWindow
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference __Factory_Microsoft_Web_WebView2_Core__ICoreWebView2ControllerWindowReferenceStatics_CreateFromCoreWindow(
					string typeName, 
					global::Windows.UI.Core.CoreWindow coreWindow)
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference __pRetVal;
			__pRetVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ControllerWindowReferenceStatics__Impl.Stubs.CreateFromCoreWindow(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2ControllerWindowReferenceStatics).TypeHandle
												), 
								coreWindow
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public CoreWebView2ControllerWindowReference(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller4))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe class CoreWebView2Controller : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller2, global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller3, global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller4, global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DefaultBackgroundColor")]
		public virtual global::Windows.UI.Color get_DefaultBackgroundColor()
		{
			global::Windows.UI.Color __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller2__Impl.Stubs.get_DefaultBackgroundColor(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DefaultBackgroundColor")]
		public virtual void put_DefaultBackgroundColor(global::Windows.UI.Color value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller2__Impl.Stubs.put_DefaultBackgroundColor(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RasterizationScale")]
		public virtual double get_RasterizationScale()
		{
			double __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller3__Impl.Stubs.get_RasterizationScale(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "RasterizationScale")]
		public virtual void put_RasterizationScale(double value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller3__Impl.Stubs.put_RasterizationScale(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShouldDetectMonitorScaleChanges")]
		public virtual bool get_ShouldDetectMonitorScaleChanges()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller3__Impl.Stubs.get_ShouldDetectMonitorScaleChanges(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ShouldDetectMonitorScaleChanges")]
		public virtual void put_ShouldDetectMonitorScaleChanges(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller3__Impl.Stubs.put_ShouldDetectMonitorScaleChanges(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BoundsMode")]
		public virtual global::Microsoft.Web.WebView2.Core.CoreWebView2BoundsMode get_BoundsMode()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2BoundsMode __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller3__Impl.Stubs.get_BoundsMode(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BoundsMode")]
		public virtual void put_BoundsMode(global::Microsoft.Web.WebView2.Core.CoreWebView2BoundsMode value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller3__Impl.Stubs.put_BoundsMode(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "RasterizationScaleChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_RasterizationScaleChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller3__Impl.Stubs.add_RasterizationScaleChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "RasterizationScaleChanged")]
		public virtual void remove_RasterizationScaleChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller3__Impl.Stubs.remove_RasterizationScaleChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AllowExternalDrop")]
		public virtual bool get_AllowExternalDrop()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller4__Impl.Stubs.get_AllowExternalDrop(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AllowExternalDrop")]
		public virtual void put_AllowExternalDrop(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller4__Impl.Stubs.put_AllowExternalDrop(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsVisible")]
		public virtual bool get_IsVisible()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller__Impl.Stubs.get_IsVisible(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsVisible")]
		public virtual void put_IsVisible(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller__Impl.Stubs.put_IsVisible(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Bounds")]
		public virtual global::Windows.Foundation.Rect get_Bounds()
		{
			global::Windows.Foundation.Rect __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller__Impl.Stubs.get_Bounds(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Bounds")]
		public virtual void put_Bounds(global::Windows.Foundation.Rect value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller__Impl.Stubs.put_Bounds(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ZoomFactor")]
		public virtual double get_ZoomFactor()
		{
			double __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller__Impl.Stubs.get_ZoomFactor(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ZoomFactor")]
		public virtual void put_ZoomFactor(double value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller__Impl.Stubs.put_ZoomFactor(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ParentWindow")]
		public virtual global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference get_ParentWindow()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller__Impl.Stubs.get_ParentWindow(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ParentWindow")]
		public virtual void put_ParentWindow(global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller__Impl.Stubs.put_ParentWindow(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CoreWebView2")]
		public virtual global::Microsoft.Web.WebView2.Core.CoreWebView2 get_CoreWebView2()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2 __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller__Impl.Stubs.get_CoreWebView2(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ZoomFactorChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ZoomFactorChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller__Impl.Stubs.add_ZoomFactorChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ZoomFactorChanged")]
		public virtual void remove_ZoomFactorChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller__Impl.Stubs.remove_ZoomFactorChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "MoveFocusRequested")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_MoveFocusRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, global::Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller__Impl.Stubs.add_MoveFocusRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "MoveFocusRequested")]
		public virtual void remove_MoveFocusRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller__Impl.Stubs.remove_MoveFocusRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "GotFocus")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_GotFocus(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller__Impl.Stubs.add_GotFocus(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "GotFocus")]
		public virtual void remove_GotFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller__Impl.Stubs.remove_GotFocus(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LostFocus")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LostFocus(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller__Impl.Stubs.add_LostFocus(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LostFocus")]
		public virtual void remove_LostFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller__Impl.Stubs.remove_LostFocus(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AcceleratorKeyPressed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AcceleratorKeyPressed(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, global::Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller__Impl.Stubs.add_AcceleratorKeyPressed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AcceleratorKeyPressed")]
		public virtual void remove_AcceleratorKeyPressed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller__Impl.Stubs.remove_AcceleratorKeyPressed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void SetBoundsAndZoomFactor(
					global::Windows.Foundation.Rect Bounds, 
					double ZoomFactor)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller__Impl.Stubs.SetBoundsAndZoomFactor(
								this, 
								Bounds, 
								ZoomFactor
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void MoveFocus(global::Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusReason reason)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller__Impl.Stubs.MoveFocus(
								this, 
								reason
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void NotifyParentWindowPositionChanged()
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller__Impl.Stubs.NotifyParentWindowPositionChanged(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual void Close()
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Controller__Impl.Stubs.Close(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public CoreWebView2Controller(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2MoveFocusRequestedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2MoveFocusRequestedEventArgs : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2MoveFocusRequestedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Reason")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusReason get_Reason()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusReason __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2MoveFocusRequestedEventArgs__Impl.Stubs.get_Reason(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Handled")]
		public bool get_Handled()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2MoveFocusRequestedEventArgs__Impl.Stubs.get_Handled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Handled")]
		public void put_Handled(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2MoveFocusRequestedEventArgs__Impl.Stubs.put_Handled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public CoreWebView2MoveFocusRequestedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2AcceleratorKeyPressedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2AcceleratorKeyPressedEventArgs : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2AcceleratorKeyPressedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "KeyEventKind")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2KeyEventKind get_KeyEventKind()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2KeyEventKind __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2AcceleratorKeyPressedEventArgs__Impl.Stubs.get_KeyEventKind(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VirtualKey")]
		public uint get_VirtualKey()
		{
			uint __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2AcceleratorKeyPressedEventArgs__Impl.Stubs.get_VirtualKey(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "KeyEventLParam")]
		public int get_KeyEventLParam()
		{
			int __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2AcceleratorKeyPressedEventArgs__Impl.Stubs.get_KeyEventLParam(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PhysicalKeyStatus")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2PhysicalKeyStatus get_PhysicalKeyStatus()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2PhysicalKeyStatus __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2AcceleratorKeyPressedEventArgs__Impl.Stubs.get_PhysicalKeyStatus(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Handled")]
		public bool get_Handled()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2AcceleratorKeyPressedEventArgs__Impl.Stubs.get_Handled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Handled")]
		public void put_Handled(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2AcceleratorKeyPressedEventArgs__Impl.Stubs.put_Handled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public CoreWebView2AcceleratorKeyPressedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2ControllerOptions))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2ControllerOptions : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2ControllerOptions
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ProfileName")]
		public string get_ProfileName()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ControllerOptions__Impl.Stubs.get_ProfileName(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ProfileName")]
		public void put_ProfileName(string value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2ControllerOptions__Impl.Stubs.put_ProfileName(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsInPrivateModeEnabled")]
		public bool get_IsInPrivateModeEnabled()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ControllerOptions__Impl.Stubs.get_IsInPrivateModeEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsInPrivateModeEnabled")]
		public void put_IsInPrivateModeEnabled(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2ControllerOptions__Impl.Stubs.put_IsInPrivateModeEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public CoreWebView2ControllerOptions(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2CompositionController : global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, global::Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RootVisualTarget")]
		public object get_RootVisualTarget()
		{
			object __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController__Impl.Stubs.get_RootVisualTarget(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "RootVisualTarget")]
		public void put_RootVisualTarget(object value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController__Impl.Stubs.put_RootVisualTarget(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CursorChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CursorChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2CompositionController, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController__Impl.Stubs.add_CursorChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CursorChanged")]
		public void remove_CursorChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController__Impl.Stubs.remove_CursorChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void SendMouseInput(
					global::Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind eventKind, 
					global::Microsoft.Web.WebView2.Core.CoreWebView2MouseEventVirtualKeys virtualKeys, 
					uint mouseData, 
					global::Windows.Foundation.Point point)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController__Impl.Stubs.SendMouseInput(
								this, 
								eventKind, 
								virtualKeys, 
								mouseData, 
								point
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void SendPointerInput(
					global::Microsoft.Web.WebView2.Core.CoreWebView2PointerEventKind eventKind, 
					global::Microsoft.Web.WebView2.Core.CoreWebView2PointerInfo pointerInfo)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController__Impl.Stubs.SendPointerInput(
								this, 
								eventKind, 
								pointerInfo
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cursor")]
		public global::Windows.UI.Core.CoreCursor get_Cursor()
		{
			global::Windows.UI.Core.CoreCursor __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController__Impl.Stubs.get_Cursor(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2CompositionController(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2PointerInfo : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerKind")]
		public uint get_PointerKind()
		{
			uint __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_PointerKind(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PointerKind")]
		public void put_PointerKind(uint value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_PointerKind(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerId")]
		public uint get_PointerId()
		{
			uint __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_PointerId(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PointerId")]
		public void put_PointerId(uint value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_PointerId(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FrameId")]
		public uint get_FrameId()
		{
			uint __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_FrameId(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FrameId")]
		public void put_FrameId(uint value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_FrameId(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerFlags")]
		public uint get_PointerFlags()
		{
			uint __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_PointerFlags(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PointerFlags")]
		public void put_PointerFlags(uint value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_PointerFlags(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerDeviceRect")]
		public global::Windows.Foundation.Rect get_PointerDeviceRect()
		{
			global::Windows.Foundation.Rect __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_PointerDeviceRect(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PointerDeviceRect")]
		public void put_PointerDeviceRect(global::Windows.Foundation.Rect value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_PointerDeviceRect(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayRect")]
		public global::Windows.Foundation.Rect get_DisplayRect()
		{
			global::Windows.Foundation.Rect __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_DisplayRect(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DisplayRect")]
		public void put_DisplayRect(global::Windows.Foundation.Rect value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_DisplayRect(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PixelLocation")]
		public global::Windows.Foundation.Point get_PixelLocation()
		{
			global::Windows.Foundation.Point __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_PixelLocation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PixelLocation")]
		public void put_PixelLocation(global::Windows.Foundation.Point value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_PixelLocation(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HimetricLocation")]
		public global::Windows.Foundation.Point get_HimetricLocation()
		{
			global::Windows.Foundation.Point __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_HimetricLocation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HimetricLocation")]
		public void put_HimetricLocation(global::Windows.Foundation.Point value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_HimetricLocation(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PixelLocationRaw")]
		public global::Windows.Foundation.Point get_PixelLocationRaw()
		{
			global::Windows.Foundation.Point __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_PixelLocationRaw(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PixelLocationRaw")]
		public void put_PixelLocationRaw(global::Windows.Foundation.Point value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_PixelLocationRaw(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HimetricLocationRaw")]
		public global::Windows.Foundation.Point get_HimetricLocationRaw()
		{
			global::Windows.Foundation.Point __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_HimetricLocationRaw(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HimetricLocationRaw")]
		public void put_HimetricLocationRaw(global::Windows.Foundation.Point value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_HimetricLocationRaw(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Time")]
		public uint get_Time()
		{
			uint __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_Time(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Time")]
		public void put_Time(uint value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_Time(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HistoryCount")]
		public uint get_HistoryCount()
		{
			uint __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_HistoryCount(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HistoryCount")]
		public void put_HistoryCount(uint value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_HistoryCount(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InputData")]
		public int get_InputData()
		{
			int __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_InputData(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "InputData")]
		public void put_InputData(int value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_InputData(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "KeyStates")]
		public uint get_KeyStates()
		{
			uint __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_KeyStates(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "KeyStates")]
		public void put_KeyStates(uint value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_KeyStates(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PerformanceCount")]
		public ulong get_PerformanceCount()
		{
			ulong __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_PerformanceCount(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PerformanceCount")]
		public void put_PerformanceCount(ulong value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_PerformanceCount(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ButtonChangeKind")]
		public int get_ButtonChangeKind()
		{
			int __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_ButtonChangeKind(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ButtonChangeKind")]
		public void put_ButtonChangeKind(int value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_ButtonChangeKind(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PenFlags")]
		public uint get_PenFlags()
		{
			uint __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_PenFlags(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PenFlags")]
		public void put_PenFlags(uint value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_PenFlags(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PenMask")]
		public uint get_PenMask()
		{
			uint __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_PenMask(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PenMask")]
		public void put_PenMask(uint value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_PenMask(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PenPressure")]
		public uint get_PenPressure()
		{
			uint __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_PenPressure(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PenPressure")]
		public void put_PenPressure(uint value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_PenPressure(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PenRotation")]
		public uint get_PenRotation()
		{
			uint __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_PenRotation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PenRotation")]
		public void put_PenRotation(uint value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_PenRotation(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PenTiltX")]
		public int get_PenTiltX()
		{
			int __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_PenTiltX(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PenTiltX")]
		public void put_PenTiltX(int value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_PenTiltX(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PenTiltY")]
		public int get_PenTiltY()
		{
			int __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_PenTiltY(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PenTiltY")]
		public void put_PenTiltY(int value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_PenTiltY(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TouchFlags")]
		public uint get_TouchFlags()
		{
			uint __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_TouchFlags(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TouchFlags")]
		public void put_TouchFlags(uint value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_TouchFlags(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TouchMask")]
		public uint get_TouchMask()
		{
			uint __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_TouchMask(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TouchMask")]
		public void put_TouchMask(uint value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_TouchMask(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TouchContact")]
		public global::Windows.Foundation.Rect get_TouchContact()
		{
			global::Windows.Foundation.Rect __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_TouchContact(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TouchContact")]
		public void put_TouchContact(global::Windows.Foundation.Rect value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_TouchContact(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TouchContactRaw")]
		public global::Windows.Foundation.Rect get_TouchContactRaw()
		{
			global::Windows.Foundation.Rect __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_TouchContactRaw(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TouchContactRaw")]
		public void put_TouchContactRaw(global::Windows.Foundation.Rect value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_TouchContactRaw(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TouchOrientation")]
		public uint get_TouchOrientation()
		{
			uint __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_TouchOrientation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TouchOrientation")]
		public void put_TouchOrientation(uint value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_TouchOrientation(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TouchPressure")]
		public uint get_TouchPressure()
		{
			uint __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.get_TouchPressure(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TouchPressure")]
		public void put_TouchPressure(uint value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo__Impl.Stubs.put_TouchPressure(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public CoreWebView2PointerInfo(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2BrowserProcessExitedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2BrowserProcessExitedEventArgs : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2BrowserProcessExitedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BrowserProcessExitKind")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitKind get_BrowserProcessExitKind()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitKind __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2BrowserProcessExitedEventArgs__Impl.Stubs.get_BrowserProcessExitKind(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BrowserProcessId")]
		public uint get_BrowserProcessId()
		{
			uint __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2BrowserProcessExitedEventArgs__Impl.Stubs.get_BrowserProcessId(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2BrowserProcessExitedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2PrintSettings : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Orientation")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2PrintOrientation get_Orientation()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2PrintOrientation __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.get_Orientation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Orientation")]
		public void put_Orientation(global::Microsoft.Web.WebView2.Core.CoreWebView2PrintOrientation value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.put_Orientation(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ScaleFactor")]
		public double get_ScaleFactor()
		{
			double __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.get_ScaleFactor(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ScaleFactor")]
		public void put_ScaleFactor(double value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.put_ScaleFactor(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PageWidth")]
		public double get_PageWidth()
		{
			double __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.get_PageWidth(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PageWidth")]
		public void put_PageWidth(double value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.put_PageWidth(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PageHeight")]
		public double get_PageHeight()
		{
			double __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.get_PageHeight(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PageHeight")]
		public void put_PageHeight(double value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.put_PageHeight(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MarginTop")]
		public double get_MarginTop()
		{
			double __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.get_MarginTop(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MarginTop")]
		public void put_MarginTop(double value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.put_MarginTop(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MarginBottom")]
		public double get_MarginBottom()
		{
			double __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.get_MarginBottom(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MarginBottom")]
		public void put_MarginBottom(double value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.put_MarginBottom(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MarginLeft")]
		public double get_MarginLeft()
		{
			double __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.get_MarginLeft(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MarginLeft")]
		public void put_MarginLeft(double value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.put_MarginLeft(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MarginRight")]
		public double get_MarginRight()
		{
			double __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.get_MarginRight(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MarginRight")]
		public void put_MarginRight(double value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.put_MarginRight(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShouldPrintBackgrounds")]
		public bool get_ShouldPrintBackgrounds()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.get_ShouldPrintBackgrounds(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ShouldPrintBackgrounds")]
		public void put_ShouldPrintBackgrounds(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.put_ShouldPrintBackgrounds(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShouldPrintSelectionOnly")]
		public bool get_ShouldPrintSelectionOnly()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.get_ShouldPrintSelectionOnly(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ShouldPrintSelectionOnly")]
		public void put_ShouldPrintSelectionOnly(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.put_ShouldPrintSelectionOnly(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShouldPrintHeaderAndFooter")]
		public bool get_ShouldPrintHeaderAndFooter()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.get_ShouldPrintHeaderAndFooter(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ShouldPrintHeaderAndFooter")]
		public void put_ShouldPrintHeaderAndFooter(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.put_ShouldPrintHeaderAndFooter(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTitle")]
		public string get_HeaderTitle()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.get_HeaderTitle(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderTitle")]
		public void put_HeaderTitle(string value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.put_HeaderTitle(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FooterUri")]
		public string get_FooterUri()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.get_FooterUri(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FooterUri")]
		public void put_FooterUri(string value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings__Impl.Stubs.put_FooterUri(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public CoreWebView2PrintSettings(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2ProcessInfo))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2ProcessInfo : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2ProcessInfo
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ProcessId")]
		public int get_ProcessId()
		{
			int __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ProcessInfo__Impl.Stubs.get_ProcessId(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Kind")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessKind get_Kind()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessKind __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ProcessInfo__Impl.Stubs.get_Kind(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2ProcessInfo(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponseReceivedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2WebResourceResponseReceivedEventArgs : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponseReceivedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Request")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest get_Request()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponseReceivedEventArgs__Impl.Stubs.get_Request(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Response")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseView get_Response()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseView __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponseReceivedEventArgs__Impl.Stubs.get_Response(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2WebResourceResponseReceivedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponseView))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2WebResourceResponseView : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponseView
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Headers")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeaders get_Headers()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeaders __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponseView__Impl.Stubs.get_Headers(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StatusCode")]
		public int get_StatusCode()
		{
			int __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponseView__Impl.Stubs.get_StatusCode(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ReasonPhrase")]
		public string get_ReasonPhrase()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponseView__Impl.Stubs.get_ReasonPhrase(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStream> GetContentAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStream> __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponseView__Impl.Stubs.GetContentAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2WebResourceResponseView(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2DOMContentLoadedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2DOMContentLoadedEventArgs : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2DOMContentLoadedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NavigationId")]
		public ulong get_NavigationId()
		{
			ulong __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2DOMContentLoadedEventArgs__Impl.Stubs.get_NavigationId(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2DOMContentLoadedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2FrameCreatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2FrameCreatedEventArgs : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2FrameCreatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Frame")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2Frame get_Frame()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2Frame __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2FrameCreatedEventArgs__Impl.Stubs.get_Frame(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2FrameCreatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame3))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2Frame : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame2, global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame3, global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationStarting")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationStarting(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame2__Impl.Stubs.add_NavigationStarting(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationStarting")]
		public void remove_NavigationStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame2__Impl.Stubs.remove_NavigationStarting(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContentLoading")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContentLoading(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame2__Impl.Stubs.add_ContentLoading(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContentLoading")]
		public void remove_ContentLoading(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame2__Impl.Stubs.remove_ContentLoading(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationCompleted")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationCompleted(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame2__Impl.Stubs.add_NavigationCompleted(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationCompleted")]
		public void remove_NavigationCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame2__Impl.Stubs.remove_NavigationCompleted(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DOMContentLoaded")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DOMContentLoaded(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame2__Impl.Stubs.add_DOMContentLoaded(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DOMContentLoaded")]
		public void remove_DOMContentLoaded(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame2__Impl.Stubs.remove_DOMContentLoaded(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "WebMessageReceived")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_WebMessageReceived(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame2__Impl.Stubs.add_WebMessageReceived(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "WebMessageReceived")]
		public void remove_WebMessageReceived(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame2__Impl.Stubs.remove_WebMessageReceived(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public global::Windows.Foundation.IAsyncOperation<string> ExecuteScriptAsync(string javaScript)
		{
			global::Windows.Foundation.IAsyncOperation<string> __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame2__Impl.Stubs.ExecuteScriptAsync(
								this, 
								javaScript
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public void PostWebMessageAsJson(string webMessageAsJson)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame2__Impl.Stubs.PostWebMessageAsJson(
								this, 
								webMessageAsJson
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void PostWebMessageAsString(string webMessageAsString)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame2__Impl.Stubs.PostWebMessageAsString(
								this, 
								webMessageAsString
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PermissionRequested")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PermissionRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame3__Impl.Stubs.add_PermissionRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PermissionRequested")]
		public void remove_PermissionRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame3__Impl.Stubs.remove_PermissionRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Name")]
		public string get_Name()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame__Impl.Stubs.get_Name(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NameChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NameChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame__Impl.Stubs.add_NameChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NameChanged")]
		public void remove_NameChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame__Impl.Stubs.remove_NameChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Destroyed")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Destroyed(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame__Impl.Stubs.add_Destroyed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Destroyed")]
		public void remove_Destroyed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame__Impl.Stubs.remove_Destroyed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void RemoveHostObjectFromScript(string name)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame__Impl.Stubs.RemoveHostObjectFromScript(
								this, 
								name
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public int IsDestroyed()
		{
			int __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2Frame__Impl.Stubs.IsDestroyed(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2Frame(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadStartingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2DownloadStartingEventArgs : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadStartingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DownloadOperation")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation get_DownloadOperation()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadStartingEventArgs__Impl.Stubs.get_DownloadOperation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cancel")]
		public bool get_Cancel()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadStartingEventArgs__Impl.Stubs.get_Cancel(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Cancel")]
		public void put_Cancel(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadStartingEventArgs__Impl.Stubs.put_Cancel(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ResultFilePath")]
		public string get_ResultFilePath()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadStartingEventArgs__Impl.Stubs.get_ResultFilePath(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ResultFilePath")]
		public void put_ResultFilePath(string value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadStartingEventArgs__Impl.Stubs.put_ResultFilePath(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Handled")]
		public bool get_Handled()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadStartingEventArgs__Impl.Stubs.get_Handled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Handled")]
		public void put_Handled(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadStartingEventArgs__Impl.Stubs.put_Handled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public global::Windows.Foundation.Deferral GetDeferral()
		{
			global::Windows.Foundation.Deferral __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadStartingEventArgs__Impl.Stubs.GetDeferral(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2DownloadStartingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2DownloadOperation : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Uri")]
		public string get_Uri()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation__Impl.Stubs.get_Uri(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentDisposition")]
		public string get_ContentDisposition()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation__Impl.Stubs.get_ContentDisposition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MimeType")]
		public string get_MimeType()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation__Impl.Stubs.get_MimeType(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TotalBytesToReceive")]
		public long get_TotalBytesToReceive()
		{
			long __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation__Impl.Stubs.get_TotalBytesToReceive(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BytesReceived")]
		public long get_BytesReceived()
		{
			long __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation__Impl.Stubs.get_BytesReceived(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "EstimatedEndTime")]
		public string get_EstimatedEndTime()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation__Impl.Stubs.get_EstimatedEndTime(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ResultFilePath")]
		public string get_ResultFilePath()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation__Impl.Stubs.get_ResultFilePath(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "State")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadState get_State()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadState __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation__Impl.Stubs.get_State(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InterruptReason")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason get_InterruptReason()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation__Impl.Stubs.get_InterruptReason(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanResume")]
		public bool get_CanResume()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation__Impl.Stubs.get_CanResume(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "BytesReceivedChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_BytesReceivedChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation__Impl.Stubs.add_BytesReceivedChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "BytesReceivedChanged")]
		public void remove_BytesReceivedChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation__Impl.Stubs.remove_BytesReceivedChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "EstimatedEndTimeChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_EstimatedEndTimeChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation__Impl.Stubs.add_EstimatedEndTimeChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "EstimatedEndTimeChanged")]
		public void remove_EstimatedEndTimeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation__Impl.Stubs.remove_EstimatedEndTimeChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "StateChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_StateChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation__Impl.Stubs.add_StateChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "StateChanged")]
		public void remove_StateChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation__Impl.Stubs.remove_StateChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void Cancel()
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation__Impl.Stubs.Cancel(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void Pause()
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation__Impl.Stubs.Pause(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void Resume()
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation__Impl.Stubs.Resume(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public CoreWebView2DownloadOperation(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificateRequestedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2ClientCertificateRequestedEventArgs : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificateRequestedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Host")]
		public string get_Host()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificateRequestedEventArgs__Impl.Stubs.get_Host(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Port")]
		public int get_Port()
		{
			int __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificateRequestedEventArgs__Impl.Stubs.get_Port(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsProxy")]
		public bool get_IsProxy()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificateRequestedEventArgs__Impl.Stubs.get_IsProxy(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AllowedCertificateAuthorities")]
		public global::System.Collections.Generic.IReadOnlyList<string> get_AllowedCertificateAuthorities()
		{
			global::System.Collections.Generic.IReadOnlyList<string> __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificateRequestedEventArgs__Impl.Stubs.get_AllowedCertificateAuthorities(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MutuallyTrustedCertificates")]
		public global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate> get_MutuallyTrustedCertificates()
		{
			global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate> __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificateRequestedEventArgs__Impl.Stubs.get_MutuallyTrustedCertificates(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedCertificate")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate get_SelectedCertificate()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificateRequestedEventArgs__Impl.Stubs.get_SelectedCertificate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectedCertificate")]
		public void put_SelectedCertificate(global::Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificateRequestedEventArgs__Impl.Stubs.put_SelectedCertificate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cancel")]
		public bool get_Cancel()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificateRequestedEventArgs__Impl.Stubs.get_Cancel(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Cancel")]
		public void put_Cancel(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificateRequestedEventArgs__Impl.Stubs.put_Cancel(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Handled")]
		public bool get_Handled()
		{
			bool __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificateRequestedEventArgs__Impl.Stubs.get_Handled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Handled")]
		public void put_Handled(bool value)
		{
			global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificateRequestedEventArgs__Impl.Stubs.put_Handled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public global::Windows.Foundation.Deferral GetDeferral()
		{
			global::Windows.Foundation.Deferral __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificateRequestedEventArgs__Impl.Stubs.GetDeferral(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2ClientCertificateRequestedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificate))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate_Manual))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe sealed class CoreWebView2ClientCertificate : global::System.__ComObject, global::Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate_Manual, global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificate
	{
		public global::Windows.Security.Cryptography.Certificates.Certificate ToCertificate()
		{
			global::Windows.Security.Cryptography.Certificates.Certificate __retVal = global::Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate_Manual__Impl.Stubs.ToCertificate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Subject")]
		public string get_Subject()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificate__Impl.Stubs.get_Subject(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Issuer")]
		public string get_Issuer()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificate__Impl.Stubs.get_Issuer(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValidFrom")]
		public double get_ValidFrom()
		{
			double __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificate__Impl.Stubs.get_ValidFrom(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValidTo")]
		public double get_ValidTo()
		{
			double __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificate__Impl.Stubs.get_ValidTo(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DerEncodedSerialNumber")]
		public string get_DerEncodedSerialNumber()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificate__Impl.Stubs.get_DerEncodedSerialNumber(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		public string get_DisplayName()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificate__Impl.Stubs.get_DisplayName(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PemEncodedIssuerCertificateChain")]
		public global::System.Collections.Generic.IReadOnlyList<string> get_PemEncodedIssuerCertificateChain()
		{
			global::System.Collections.Generic.IReadOnlyList<string> __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificate__Impl.Stubs.get_PemEncodedIssuerCertificateChain(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Kind")]
		public global::Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateKind get_Kind()
		{
			global::Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateKind __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificate__Impl.Stubs.get_Kind(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public string ToPemEncoding()
		{
			string __retVal = global::Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificate__Impl.Stubs.ToPemEncoding(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreWebView2ClientCertificate(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Settings")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2Settings get_Settings();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		string get_Source();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BrowserProcessId")]
		uint get_BrowserProcessId();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanGoBack")]
		bool get_CanGoBack();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanGoForward")]
		bool get_CanGoForward();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DocumentTitle")]
		string get_DocumentTitle();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContainsFullScreenElement")]
		bool get_ContainsFullScreenElement();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationStarting")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationStarting(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationStarting")]
		void remove_NavigationStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContentLoading")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContentLoading(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContentLoading")]
		void remove_ContentLoading(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SourceChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SourceChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SourceChanged")]
		void remove_SourceChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "HistoryChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_HistoryChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "HistoryChanged")]
		void remove_HistoryChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationCompleted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationCompleted(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationCompleted")]
		void remove_NavigationCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "FrameNavigationStarting")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_FrameNavigationStarting(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "FrameNavigationStarting")]
		void remove_FrameNavigationStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "FrameNavigationCompleted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_FrameNavigationCompleted(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "FrameNavigationCompleted")]
		void remove_FrameNavigationCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ScriptDialogOpening")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ScriptDialogOpening(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ScriptDialogOpening")]
		void remove_ScriptDialogOpening(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PermissionRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PermissionRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PermissionRequested")]
		void remove_PermissionRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ProcessFailed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ProcessFailed(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ProcessFailed")]
		void remove_ProcessFailed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "WebMessageReceived")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_WebMessageReceived(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "WebMessageReceived")]
		void remove_WebMessageReceived(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NewWindowRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NewWindowRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NewWindowRequested")]
		void remove_NewWindowRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DocumentTitleChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DocumentTitleChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DocumentTitleChanged")]
		void remove_DocumentTitleChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContainsFullScreenElementChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContainsFullScreenElementChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContainsFullScreenElementChanged")]
		void remove_ContainsFullScreenElementChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "WebResourceRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_WebResourceRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "WebResourceRequested")]
		void remove_WebResourceRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "WindowCloseRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_WindowCloseRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "WindowCloseRequested")]
		void remove_WindowCloseRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		void Navigate(string uri);

		void NavigateToString(string htmlContent);

		global::Windows.Foundation.IAsyncOperation<string> AddScriptToExecuteOnDocumentCreatedAsync(string javaScript);

		void RemoveScriptToExecuteOnDocumentCreated(string id);

		global::Windows.Foundation.IAsyncOperation<string> ExecuteScriptAsync(string javaScript);

		global::Windows.Foundation.IAsyncAction CapturePreviewAsync(
					global::Microsoft.Web.WebView2.Core.CoreWebView2CapturePreviewImageFormat imageFormat, 
					global::Windows.Storage.Streams.IRandomAccessStream imageStream);

		void Reload();

		void PostWebMessageAsJson(string webMessageAsJson);

		void PostWebMessageAsString(string webMessageAsString);

		global::Windows.Foundation.IAsyncOperation<string> CallDevToolsProtocolMethodAsync(
					string methodName, 
					string parametersAsJson);

		void GoBack();

		void GoForward();

		global::Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceiver GetDevToolsProtocolEventReceiver(string eventName);

		void Stop();

		void AddHostObjectToScript(
					string name, 
					object rawObject);

		void RemoveHostObjectFromScript(string name);

		void OpenDevToolsWindow();

		void AddWebResourceRequestedFilter(
					string uri, 
					global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext ResourceContext);

		void RemoveWebResourceRequestedFilter(
					string uri, 
					global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext ResourceContext);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Settings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsScriptEnabled")]
		bool get_IsScriptEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsScriptEnabled")]
		void put_IsScriptEnabled(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsWebMessageEnabled")]
		bool get_IsWebMessageEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsWebMessageEnabled")]
		void put_IsWebMessageEnabled(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AreDefaultScriptDialogsEnabled")]
		bool get_AreDefaultScriptDialogsEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AreDefaultScriptDialogsEnabled")]
		void put_AreDefaultScriptDialogsEnabled(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsStatusBarEnabled")]
		bool get_IsStatusBarEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsStatusBarEnabled")]
		void put_IsStatusBarEnabled(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AreDevToolsEnabled")]
		bool get_AreDevToolsEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AreDevToolsEnabled")]
		void put_AreDevToolsEnabled(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AreDefaultContextMenusEnabled")]
		bool get_AreDefaultContextMenusEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AreDefaultContextMenusEnabled")]
		void put_AreDefaultContextMenusEnabled(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AreHostObjectsAllowed")]
		bool get_AreHostObjectsAllowed();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AreHostObjectsAllowed")]
		void put_AreHostObjectsAllowed(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsZoomControlEnabled")]
		bool get_IsZoomControlEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsZoomControlEnabled")]
		void put_IsZoomControlEnabled(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsBuiltInErrorPageEnabled")]
		bool get_IsBuiltInErrorPageEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsBuiltInErrorPageEnabled")]
		void put_IsBuiltInErrorPageEnabled(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Settings2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UserAgent")]
		string get_UserAgent();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UserAgent")]
		void put_UserAgent(string value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Settings3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AreBrowserAcceleratorKeysEnabled")]
		bool get_AreBrowserAcceleratorKeysEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AreBrowserAcceleratorKeysEnabled")]
		void put_AreBrowserAcceleratorKeysEnabled(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Settings4
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPasswordAutosaveEnabled")]
		bool get_IsPasswordAutosaveEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsPasswordAutosaveEnabled")]
		void put_IsPasswordAutosaveEnabled(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsGeneralAutofillEnabled")]
		bool get_IsGeneralAutofillEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsGeneralAutofillEnabled")]
		void put_IsGeneralAutofillEnabled(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Settings5
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPinchZoomEnabled")]
		bool get_IsPinchZoomEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsPinchZoomEnabled")]
		void put_IsPinchZoomEnabled(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Settings6
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSwipeNavigationEnabled")]
		bool get_IsSwipeNavigationEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsSwipeNavigationEnabled")]
		void put_IsSwipeNavigationEnabled(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Settings7
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HiddenPdfToolbarItems")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems get_HiddenPdfToolbarItems();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HiddenPdfToolbarItems")]
		void put_HiddenPdfToolbarItems(global::Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Settings_Manual
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HostObjectDispatchAdapter")]
		global::Microsoft.Web.WebView2.Core.ICoreWebView2DispatchAdapter get_HostObjectDispatchAdapter();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HostObjectDispatchAdapter")]
		void put_HostObjectDispatchAdapter(global::Microsoft.Web.WebView2.Core.ICoreWebView2DispatchAdapter value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2DispatchAdapter
	{
		object WrapNamedObject(
					string name, 
					global::Microsoft.Web.WebView2.Core.ICoreWebView2DispatchAdapter adapter);

		object WrapObject(
					object unwrapped, 
					global::Microsoft.Web.WebView2.Core.ICoreWebView2DispatchAdapter adapter);

		object UnwrapObject(object wrapped);

		void Clean();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2NavigationStartingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Uri")]
		string get_Uri();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsUserInitiated")]
		bool get_IsUserInitiated();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsRedirected")]
		bool get_IsRedirected();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RequestHeaders")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeaders get_RequestHeaders();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cancel")]
		bool get_Cancel();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Cancel")]
		void put_Cancel(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NavigationId")]
		ulong get_NavigationId();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2HttpRequestHeaders
	{
		string GetHeader(string name);

		global::Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIterator GetHeaders(string name);

		bool Contains(string name);

		void SetHeader(
					string name, 
					string value);

		void RemoveHeader(string name);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2HttpHeadersCollectionIterator
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2NavigationStartingEventArgs2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AdditionalAllowedFrameAncestors")]
		string get_AdditionalAllowedFrameAncestors();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AdditionalAllowedFrameAncestors")]
		void put_AdditionalAllowedFrameAncestors(string value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2ContentLoadingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsErrorPage")]
		bool get_IsErrorPage();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NavigationId")]
		ulong get_NavigationId();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2SourceChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsNewDocument")]
		bool get_IsNewDocument();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2NavigationCompletedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSuccess")]
		bool get_IsSuccess();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WebErrorStatus")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus get_WebErrorStatus();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NavigationId")]
		ulong get_NavigationId();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2NavigationCompletedEventArgs2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HttpStatusCode")]
		int get_HttpStatusCode();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2ScriptDialogOpeningEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Uri")]
		string get_Uri();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Kind")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogKind get_Kind();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Message")]
		string get_Message();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DefaultText")]
		string get_DefaultText();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ResultText")]
		string get_ResultText();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ResultText")]
		void put_ResultText(string value);

		void Accept();

		global::Windows.Foundation.Deferral GetDeferral();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2PermissionRequestedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Uri")]
		string get_Uri();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PermissionKind")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind get_PermissionKind();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsUserInitiated")]
		bool get_IsUserInitiated();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "State")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionState get_State();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "State")]
		void put_State(global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionState value);

		global::Windows.Foundation.Deferral GetDeferral();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2PermissionRequestedEventArgs2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Handled")]
		bool get_Handled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Handled")]
		void put_Handled(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2ProcessFailedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ProcessFailedKind")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedKind get_ProcessFailedKind();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2ProcessFailedEventArgs2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Reason")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedReason get_Reason();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExitCode")]
		int get_ExitCode();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ProcessDescription")]
		string get_ProcessDescription();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FrameInfosForFailedProcess")]
		global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo> get_FrameInfosForFailedProcess();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2FrameInfo
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Name")]
		string get_Name();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		string get_Source();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2WebMessageReceivedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		string get_Source();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WebMessageAsJson")]
		string get_WebMessageAsJson();

		string TryGetWebMessageAsString();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2NewWindowRequestedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Uri")]
		string get_Uri();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NewWindow")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2 get_NewWindow();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "NewWindow")]
		void put_NewWindow(global::Microsoft.Web.WebView2.Core.CoreWebView2 value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Handled")]
		bool get_Handled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Handled")]
		void put_Handled(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsUserInitiated")]
		bool get_IsUserInitiated();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WindowFeatures")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures get_WindowFeatures();

		global::Windows.Foundation.Deferral GetDeferral();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2WindowFeatures
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasPosition")]
		bool get_HasPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasSize")]
		bool get_HasSize();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Left")]
		uint get_Left();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Top")]
		uint get_Top();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Height")]
		uint get_Height();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Width")]
		uint get_Width();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShouldDisplayMenuBar")]
		bool get_ShouldDisplayMenuBar();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShouldDisplayStatus")]
		bool get_ShouldDisplayStatus();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShouldDisplayToolbar")]
		bool get_ShouldDisplayToolbar();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShouldDisplayScrollBars")]
		bool get_ShouldDisplayScrollBars();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2NewWindowRequestedEventArgs2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Name")]
		string get_Name();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2WebResourceRequestedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Request")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest get_Request();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Response")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse get_Response();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Response")]
		void put_Response(global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ResourceContext")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext get_ResourceContext();

		global::Windows.Foundation.Deferral GetDeferral();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2WebResourceRequest
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Uri")]
		string get_Uri();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Uri")]
		void put_Uri(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Method")]
		string get_Method();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Method")]
		void put_Method(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		global::Windows.Storage.Streams.IRandomAccessStream get_Content();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		void put_Content(global::Windows.Storage.Streams.IRandomAccessStream value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Headers")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeaders get_Headers();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2WebResourceResponse
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		global::Windows.Storage.Streams.IRandomAccessStream get_Content();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		void put_Content(global::Windows.Storage.Streams.IRandomAccessStream value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Headers")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeaders get_Headers();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StatusCode")]
		int get_StatusCode();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "StatusCode")]
		void put_StatusCode(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ReasonPhrase")]
		string get_ReasonPhrase();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ReasonPhrase")]
		void put_ReasonPhrase(string value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2HttpResponseHeaders
	{
		void AppendHeader(
					string name, 
					string value);

		bool Contains(string name);

		string GetHeader(string name);

		global::Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIterator GetHeaders(string name);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2DevToolsProtocolEventReceiver
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DevToolsProtocolEventReceived")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DevToolsProtocolEventReceived(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DevToolsProtocolEventReceived")]
		void remove_DevToolsProtocolEventReceived(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2DevToolsProtocolEventReceivedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ParameterObjectAsJson")]
		string get_ParameterObjectAsJson();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2DevToolsProtocolEventReceivedEventArgs2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SessionId")]
		string get_SessionId();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2_10
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "BasicAuthenticationRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_BasicAuthenticationRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "BasicAuthenticationRequested")]
		void remove_BasicAuthenticationRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2BasicAuthenticationRequestedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Uri")]
		string get_Uri();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Challenge")]
		string get_Challenge();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Response")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationResponse get_Response();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cancel")]
		bool get_Cancel();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Cancel")]
		void put_Cancel(bool value);

		global::Windows.Foundation.Deferral GetDeferral();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2BasicAuthenticationResponse
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UserName")]
		string get_UserName();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UserName")]
		void put_UserName(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Password")]
		string get_Password();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Password")]
		void put_Password(string value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2_11
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextMenuRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextMenuRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextMenuRequested")]
		void remove_ContextMenuRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		global::Windows.Foundation.IAsyncOperation<string> CallDevToolsProtocolMethodForSessionAsync(
					string sessionId, 
					string methodName, 
					string parametersAsJson);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2ContextMenuRequestedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MenuItems")]
		global::System.Collections.Generic.IList<global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem> get_MenuItems();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContextMenuTarget")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTarget get_ContextMenuTarget();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Location")]
		global::Windows.Foundation.Point get_Location();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedCommandId")]
		int get_SelectedCommandId();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectedCommandId")]
		void put_SelectedCommandId(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Handled")]
		bool get_Handled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Handled")]
		void put_Handled(bool value);

		global::Windows.Foundation.Deferral GetDeferral();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2ContextMenuItem
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Name")]
		string get_Name();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Label")]
		string get_Label();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CommandId")]
		int get_CommandId();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShortcutKeyDescription")]
		string get_ShortcutKeyDescription();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Icon")]
		global::Windows.Storage.Streams.IRandomAccessStream get_Icon();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Kind")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItemKind get_Kind();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsEnabled")]
		bool get_IsEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsEnabled")]
		void put_IsEnabled(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsChecked")]
		bool get_IsChecked();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsChecked")]
		void put_IsChecked(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Children")]
		global::System.Collections.Generic.IList<global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem> get_Children();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CustomItemSelected")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CustomItemSelected(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CustomItemSelected")]
		void remove_CustomItemSelected(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2ContextMenuTarget
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Kind")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTargetKind get_Kind();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsEditable")]
		bool get_IsEditable();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsRequestedForMainFrame")]
		bool get_IsRequestedForMainFrame();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PageUri")]
		string get_PageUri();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FrameUri")]
		string get_FrameUri();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasLinkUri")]
		bool get_HasLinkUri();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LinkUri")]
		string get_LinkUri();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasLinkText")]
		bool get_HasLinkText();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LinkText")]
		string get_LinkText();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasSourceUri")]
		bool get_HasSourceUri();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourceUri")]
		string get_SourceUri();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasSelection")]
		bool get_HasSelection();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionText")]
		string get_SelectionText();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2_12
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StatusBarText")]
		string get_StatusBarText();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "StatusBarTextChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_StatusBarTextChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "StatusBarTextChanged")]
		void remove_StatusBarTextChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2_13
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Profile")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2Profile get_Profile();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Profile
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ProfileName")]
		string get_ProfileName();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsInPrivateModeEnabled")]
		bool get_IsInPrivateModeEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ProfilePath")]
		string get_ProfilePath();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DefaultDownloadFolderPath")]
		string get_DefaultDownloadFolderPath();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DefaultDownloadFolderPath")]
		void put_DefaultDownloadFolderPath(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreferredColorScheme")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2PreferredColorScheme get_PreferredColorScheme();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PreferredColorScheme")]
		void put_PreferredColorScheme(global::Microsoft.Web.WebView2.Core.CoreWebView2PreferredColorScheme value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface CoreWebView2Profile_Manual
	{
		global::Windows.Foundation.IAsyncAction ClearBrowsingDataAsync(
					global::Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds dataKinds, 
					global::System.DateTimeOffset startTime, 
					global::System.DateTimeOffset endTime);

		global::Windows.Foundation.IAsyncAction ClearBrowsingDataAsync();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Profile2
	{
		global::Windows.Foundation.IAsyncAction ClearBrowsingDataAsync(global::Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds dataKinds);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2_14
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ServerCertificateErrorDetected")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ServerCertificateErrorDetected(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ServerCertificateErrorDetected")]
		void remove_ServerCertificateErrorDetected(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		global::Windows.Foundation.IAsyncAction ClearServerCertificateErrorActionsAsync();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2ServerCertificateErrorDetectedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ErrorStatus")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus get_ErrorStatus();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RequestUri")]
		string get_RequestUri();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ServerCertificate")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2Certificate get_ServerCertificate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Action")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorAction get_Action();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Action")]
		void put_Action(global::Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorAction value);

		global::Windows.Foundation.Deferral GetDeferral();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Certificate
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Subject")]
		string get_Subject();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Issuer")]
		string get_Issuer();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValidFrom")]
		double get_ValidFrom();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValidTo")]
		double get_ValidTo();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DerEncodedSerialNumber")]
		string get_DerEncodedSerialNumber();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		string get_DisplayName();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PemEncodedIssuerCertificateChain")]
		global::System.Collections.Generic.IReadOnlyList<string> get_PemEncodedIssuerCertificateChain();

		string ToPemEncoding();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface CoreWebView2Certificate_Manual
	{
		global::Windows.Security.Cryptography.Certificates.Certificate ToCertificate();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2_2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CookieManager")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2CookieManager get_CookieManager();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Environment")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2Environment get_Environment();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "WebResourceResponseReceived")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_WebResourceResponseReceived(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "WebResourceResponseReceived")]
		void remove_WebResourceResponseReceived(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DOMContentLoaded")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DOMContentLoaded(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DOMContentLoaded")]
		void remove_DOMContentLoaded(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		void NavigateWithWebResourceRequest(global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest Request);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2CookieManager
	{
		global::Microsoft.Web.WebView2.Core.CoreWebView2Cookie CreateCookie(
					string name, 
					string value, 
					string Domain, 
					string Path);

		global::Microsoft.Web.WebView2.Core.CoreWebView2Cookie CopyCookie(global::Microsoft.Web.WebView2.Core.CoreWebView2Cookie cookieParam);

		void AddOrUpdateCookie(global::Microsoft.Web.WebView2.Core.CoreWebView2Cookie cookie);

		void DeleteCookie(global::Microsoft.Web.WebView2.Core.CoreWebView2Cookie cookie);

		void DeleteCookies(
					string name, 
					string uri);

		void DeleteCookiesWithDomainAndPath(
					string name, 
					string Domain, 
					string Path);

		void DeleteAllCookies();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Cookie
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Name")]
		string get_Name();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Value")]
		string get_Value();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Value")]
		void put_Value(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Domain")]
		string get_Domain();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Path")]
		string get_Path();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Expires")]
		double get_Expires();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Expires")]
		void put_Expires(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsHttpOnly")]
		bool get_IsHttpOnly();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsHttpOnly")]
		void put_IsHttpOnly(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SameSite")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2CookieSameSiteKind get_SameSite();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SameSite")]
		void put_SameSite(global::Microsoft.Web.WebView2.Core.CoreWebView2CookieSameSiteKind value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSecure")]
		bool get_IsSecure();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsSecure")]
		void put_IsSecure(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSession")]
		bool get_IsSession();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2CookieManager_Manual
	{
		global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Web.WebView2.Core.CoreWebView2Cookie>> GetCookiesAsync(string uri);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2EnvironmentStatics
	{
		global::Windows.Foundation.IAsyncOperation<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment> CreateAsync();

		global::Windows.Foundation.IAsyncOperation<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment> CreateWithOptionsAsync(
					string browserExecutableFolder, 
					string userDataFolder, 
					global::Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentOptions options);

		string GetAvailableBrowserVersionString();

		string GetAvailableBrowserVersionString(string browserExecutableFolder);

		int CompareBrowserVersionString(
					string browserVersionString1, 
					string browserVersionString2);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2EnvironmentOptions
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AdditionalBrowserArguments")]
		string get_AdditionalBrowserArguments();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AdditionalBrowserArguments")]
		void put_AdditionalBrowserArguments(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Language")]
		string get_Language();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Language")]
		void put_Language(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TargetCompatibleBrowserVersion")]
		string get_TargetCompatibleBrowserVersion();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TargetCompatibleBrowserVersion")]
		void put_TargetCompatibleBrowserVersion(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AllowSingleSignOnUsingOSPrimaryAccount")]
		bool get_AllowSingleSignOnUsingOSPrimaryAccount();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AllowSingleSignOnUsingOSPrimaryAccount")]
		void put_AllowSingleSignOnUsingOSPrimaryAccount(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2EnvironmentOptions2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExclusiveUserDataFolderAccess")]
		bool get_ExclusiveUserDataFolderAccess();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ExclusiveUserDataFolderAccess")]
		void put_ExclusiveUserDataFolderAccess(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Environment
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BrowserVersionString")]
		string get_BrowserVersionString();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NewBrowserVersionAvailable")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NewBrowserVersionAvailable(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NewBrowserVersionAvailable")]
		void remove_NewBrowserVersionAvailable(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		global::Windows.Foundation.IAsyncOperation<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller> CreateCoreWebView2ControllerAsync(global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference ParentWindow);

		global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse CreateWebResourceResponse(
					global::Windows.Storage.Streams.IRandomAccessStream Content, 
					int StatusCode, 
					string ReasonPhrase, 
					string Headers);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2ControllerWindowReferenceStatics
	{
		global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference CreateFromWindowHandle(ulong windowHandle);

		global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference CreateFromCoreWindow(global::Windows.UI.Core.CoreWindow coreWindow);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2ControllerWindowReference
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WindowHandle")]
		ulong get_WindowHandle();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CoreWindow")]
		global::Windows.UI.Core.CoreWindow get_CoreWindow();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Controller
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsVisible")]
		bool get_IsVisible();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsVisible")]
		void put_IsVisible(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Bounds")]
		global::Windows.Foundation.Rect get_Bounds();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Bounds")]
		void put_Bounds(global::Windows.Foundation.Rect value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ZoomFactor")]
		double get_ZoomFactor();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ZoomFactor")]
		void put_ZoomFactor(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ParentWindow")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference get_ParentWindow();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ParentWindow")]
		void put_ParentWindow(global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CoreWebView2")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2 get_CoreWebView2();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ZoomFactorChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ZoomFactorChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ZoomFactorChanged")]
		void remove_ZoomFactorChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "MoveFocusRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_MoveFocusRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, global::Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "MoveFocusRequested")]
		void remove_MoveFocusRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "GotFocus")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_GotFocus(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "GotFocus")]
		void remove_GotFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LostFocus")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LostFocus(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LostFocus")]
		void remove_LostFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AcceleratorKeyPressed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AcceleratorKeyPressed(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, global::Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AcceleratorKeyPressed")]
		void remove_AcceleratorKeyPressed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		void SetBoundsAndZoomFactor(
					global::Windows.Foundation.Rect Bounds, 
					double ZoomFactor);

		void MoveFocus(global::Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusReason reason);

		void NotifyParentWindowPositionChanged();

		void Close();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2MoveFocusRequestedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Reason")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusReason get_Reason();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Handled")]
		bool get_Handled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Handled")]
		void put_Handled(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2AcceleratorKeyPressedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "KeyEventKind")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2KeyEventKind get_KeyEventKind();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VirtualKey")]
		uint get_VirtualKey();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "KeyEventLParam")]
		int get_KeyEventLParam();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PhysicalKeyStatus")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2PhysicalKeyStatus get_PhysicalKeyStatus();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Handled")]
		bool get_Handled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Handled")]
		void put_Handled(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Controller2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DefaultBackgroundColor")]
		global::Windows.UI.Color get_DefaultBackgroundColor();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DefaultBackgroundColor")]
		void put_DefaultBackgroundColor(global::Windows.UI.Color value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Controller3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RasterizationScale")]
		double get_RasterizationScale();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "RasterizationScale")]
		void put_RasterizationScale(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShouldDetectMonitorScaleChanges")]
		bool get_ShouldDetectMonitorScaleChanges();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ShouldDetectMonitorScaleChanges")]
		void put_ShouldDetectMonitorScaleChanges(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BoundsMode")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2BoundsMode get_BoundsMode();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BoundsMode")]
		void put_BoundsMode(global::Microsoft.Web.WebView2.Core.CoreWebView2BoundsMode value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "RasterizationScaleChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_RasterizationScaleChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "RasterizationScaleChanged")]
		void remove_RasterizationScaleChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Controller4
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AllowExternalDrop")]
		bool get_AllowExternalDrop();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AllowExternalDrop")]
		void put_AllowExternalDrop(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Environment10
	{
		global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerOptions CreateCoreWebView2ControllerOptions();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2ControllerOptions
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ProfileName")]
		string get_ProfileName();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ProfileName")]
		void put_ProfileName(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsInPrivateModeEnabled")]
		bool get_IsInPrivateModeEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsInPrivateModeEnabled")]
		void put_IsInPrivateModeEnabled(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Environment2
	{
		global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest CreateWebResourceRequest(
					string uri, 
					string Method, 
					global::Windows.Storage.Streams.IRandomAccessStream postData, 
					string Headers);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Environment3
	{
		global::Windows.Foundation.IAsyncOperation<global::Microsoft.Web.WebView2.Core.CoreWebView2CompositionController> CreateCoreWebView2CompositionControllerAsync(global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference ParentWindow);

		global::Microsoft.Web.WebView2.Core.CoreWebView2PointerInfo CreateCoreWebView2PointerInfo();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2CompositionController
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RootVisualTarget")]
		object get_RootVisualTarget();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "RootVisualTarget")]
		void put_RootVisualTarget(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CursorChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CursorChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2CompositionController, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CursorChanged")]
		void remove_CursorChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		void SendMouseInput(
					global::Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind eventKind, 
					global::Microsoft.Web.WebView2.Core.CoreWebView2MouseEventVirtualKeys virtualKeys, 
					uint mouseData, 
					global::Windows.Foundation.Point point);

		void SendPointerInput(
					global::Microsoft.Web.WebView2.Core.CoreWebView2PointerEventKind eventKind, 
					global::Microsoft.Web.WebView2.Core.CoreWebView2PointerInfo pointerInfo);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cursor")]
		global::Windows.UI.Core.CoreCursor get_Cursor();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2PointerInfo
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerKind")]
		uint get_PointerKind();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PointerKind")]
		void put_PointerKind(uint value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerId")]
		uint get_PointerId();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PointerId")]
		void put_PointerId(uint value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FrameId")]
		uint get_FrameId();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FrameId")]
		void put_FrameId(uint value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerFlags")]
		uint get_PointerFlags();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PointerFlags")]
		void put_PointerFlags(uint value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PointerDeviceRect")]
		global::Windows.Foundation.Rect get_PointerDeviceRect();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PointerDeviceRect")]
		void put_PointerDeviceRect(global::Windows.Foundation.Rect value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayRect")]
		global::Windows.Foundation.Rect get_DisplayRect();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DisplayRect")]
		void put_DisplayRect(global::Windows.Foundation.Rect value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PixelLocation")]
		global::Windows.Foundation.Point get_PixelLocation();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PixelLocation")]
		void put_PixelLocation(global::Windows.Foundation.Point value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HimetricLocation")]
		global::Windows.Foundation.Point get_HimetricLocation();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HimetricLocation")]
		void put_HimetricLocation(global::Windows.Foundation.Point value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PixelLocationRaw")]
		global::Windows.Foundation.Point get_PixelLocationRaw();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PixelLocationRaw")]
		void put_PixelLocationRaw(global::Windows.Foundation.Point value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HimetricLocationRaw")]
		global::Windows.Foundation.Point get_HimetricLocationRaw();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HimetricLocationRaw")]
		void put_HimetricLocationRaw(global::Windows.Foundation.Point value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Time")]
		uint get_Time();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Time")]
		void put_Time(uint value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HistoryCount")]
		uint get_HistoryCount();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HistoryCount")]
		void put_HistoryCount(uint value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InputData")]
		int get_InputData();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "InputData")]
		void put_InputData(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "KeyStates")]
		uint get_KeyStates();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "KeyStates")]
		void put_KeyStates(uint value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PerformanceCount")]
		ulong get_PerformanceCount();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PerformanceCount")]
		void put_PerformanceCount(ulong value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ButtonChangeKind")]
		int get_ButtonChangeKind();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ButtonChangeKind")]
		void put_ButtonChangeKind(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PenFlags")]
		uint get_PenFlags();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PenFlags")]
		void put_PenFlags(uint value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PenMask")]
		uint get_PenMask();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PenMask")]
		void put_PenMask(uint value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PenPressure")]
		uint get_PenPressure();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PenPressure")]
		void put_PenPressure(uint value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PenRotation")]
		uint get_PenRotation();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PenRotation")]
		void put_PenRotation(uint value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PenTiltX")]
		int get_PenTiltX();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PenTiltX")]
		void put_PenTiltX(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PenTiltY")]
		int get_PenTiltY();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PenTiltY")]
		void put_PenTiltY(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TouchFlags")]
		uint get_TouchFlags();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TouchFlags")]
		void put_TouchFlags(uint value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TouchMask")]
		uint get_TouchMask();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TouchMask")]
		void put_TouchMask(uint value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TouchContact")]
		global::Windows.Foundation.Rect get_TouchContact();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TouchContact")]
		void put_TouchContact(global::Windows.Foundation.Rect value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TouchContactRaw")]
		global::Windows.Foundation.Rect get_TouchContactRaw();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TouchContactRaw")]
		void put_TouchContactRaw(global::Windows.Foundation.Rect value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TouchOrientation")]
		uint get_TouchOrientation();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TouchOrientation")]
		void put_TouchOrientation(uint value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TouchPressure")]
		uint get_TouchPressure();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TouchPressure")]
		void put_TouchPressure(uint value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Environment5
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "BrowserProcessExited")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_BrowserProcessExited(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment, global::Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "BrowserProcessExited")]
		void remove_BrowserProcessExited(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2BrowserProcessExitedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BrowserProcessExitKind")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitKind get_BrowserProcessExitKind();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BrowserProcessId")]
		uint get_BrowserProcessId();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Environment6
	{
		global::Microsoft.Web.WebView2.Core.CoreWebView2PrintSettings CreatePrintSettings();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2PrintSettings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Orientation")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2PrintOrientation get_Orientation();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Orientation")]
		void put_Orientation(global::Microsoft.Web.WebView2.Core.CoreWebView2PrintOrientation value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ScaleFactor")]
		double get_ScaleFactor();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ScaleFactor")]
		void put_ScaleFactor(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PageWidth")]
		double get_PageWidth();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PageWidth")]
		void put_PageWidth(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PageHeight")]
		double get_PageHeight();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PageHeight")]
		void put_PageHeight(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MarginTop")]
		double get_MarginTop();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MarginTop")]
		void put_MarginTop(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MarginBottom")]
		double get_MarginBottom();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MarginBottom")]
		void put_MarginBottom(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MarginLeft")]
		double get_MarginLeft();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MarginLeft")]
		void put_MarginLeft(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MarginRight")]
		double get_MarginRight();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MarginRight")]
		void put_MarginRight(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShouldPrintBackgrounds")]
		bool get_ShouldPrintBackgrounds();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ShouldPrintBackgrounds")]
		void put_ShouldPrintBackgrounds(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShouldPrintSelectionOnly")]
		bool get_ShouldPrintSelectionOnly();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ShouldPrintSelectionOnly")]
		void put_ShouldPrintSelectionOnly(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ShouldPrintHeaderAndFooter")]
		bool get_ShouldPrintHeaderAndFooter();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ShouldPrintHeaderAndFooter")]
		void put_ShouldPrintHeaderAndFooter(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTitle")]
		string get_HeaderTitle();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderTitle")]
		void put_HeaderTitle(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FooterUri")]
		string get_FooterUri();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FooterUri")]
		void put_FooterUri(string value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Environment7
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UserDataFolder")]
		string get_UserDataFolder();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Environment8
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ProcessInfosChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ProcessInfosChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Environment, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ProcessInfosChanged")]
		void remove_ProcessInfosChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessInfo> GetProcessInfos();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2ProcessInfo
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ProcessId")]
		int get_ProcessId();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Kind")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2ProcessKind get_Kind();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Environment9
	{
		global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem CreateContextMenuItem(
					string Label, 
					global::Windows.Storage.Streams.IRandomAccessStream iconStream, 
					global::Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItemKind Kind);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Environment_Manual
	{
		global::Windows.Foundation.IAsyncOperation<global::Microsoft.Web.WebView2.Core.CoreWebView2Controller> CreateCoreWebView2ControllerAsync(
					global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference ParentWindow, 
					global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerOptions options);

		global::Windows.Foundation.IAsyncOperation<global::Microsoft.Web.WebView2.Core.CoreWebView2CompositionController> CreateCoreWebView2CompositionControllerAsync(
					global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference ParentWindow, 
					global::Microsoft.Web.WebView2.Core.CoreWebView2ControllerOptions options);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2WebResourceResponseReceivedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Request")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest get_Request();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Response")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseView get_Response();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2WebResourceResponseView
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Headers")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeaders get_Headers();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StatusCode")]
		int get_StatusCode();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ReasonPhrase")]
		string get_ReasonPhrase();

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStream> GetContentAsync();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2DOMContentLoadedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NavigationId")]
		ulong get_NavigationId();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2_3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSuspended")]
		bool get_IsSuspended();

		global::Windows.Foundation.IAsyncOperation<bool> TrySuspendAsync();

		void Resume();

		void SetVirtualHostNameToFolderMapping(
					string hostName, 
					string folderPath, 
					global::Microsoft.Web.WebView2.Core.CoreWebView2HostResourceAccessKind accessKind);

		void ClearVirtualHostNameToFolderMapping(string hostName);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2_4
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "FrameCreated")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_FrameCreated(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "FrameCreated")]
		void remove_FrameCreated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DownloadStarting")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DownloadStarting(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DownloadStarting")]
		void remove_DownloadStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2FrameCreatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Frame")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2Frame get_Frame();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Frame
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Name")]
		string get_Name();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NameChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NameChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NameChanged")]
		void remove_NameChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Destroyed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Destroyed(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Destroyed")]
		void remove_Destroyed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		void RemoveHostObjectFromScript(string name);

		int IsDestroyed();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Frame2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationStarting")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationStarting(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationStarting")]
		void remove_NavigationStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContentLoading")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContentLoading(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContentLoading")]
		void remove_ContentLoading(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationCompleted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationCompleted(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationCompleted")]
		void remove_NavigationCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DOMContentLoaded")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DOMContentLoaded(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DOMContentLoaded")]
		void remove_DOMContentLoaded(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "WebMessageReceived")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_WebMessageReceived(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "WebMessageReceived")]
		void remove_WebMessageReceived(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		global::Windows.Foundation.IAsyncOperation<string> ExecuteScriptAsync(string javaScript);

		void PostWebMessageAsJson(string webMessageAsJson);

		void PostWebMessageAsString(string webMessageAsString);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2Frame3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PermissionRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PermissionRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2Frame, global::Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PermissionRequested")]
		void remove_PermissionRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2DownloadStartingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DownloadOperation")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation get_DownloadOperation();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cancel")]
		bool get_Cancel();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Cancel")]
		void put_Cancel(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ResultFilePath")]
		string get_ResultFilePath();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ResultFilePath")]
		void put_ResultFilePath(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Handled")]
		bool get_Handled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Handled")]
		void put_Handled(bool value);

		global::Windows.Foundation.Deferral GetDeferral();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2DownloadOperation
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Uri")]
		string get_Uri();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentDisposition")]
		string get_ContentDisposition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MimeType")]
		string get_MimeType();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TotalBytesToReceive")]
		long get_TotalBytesToReceive();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BytesReceived")]
		long get_BytesReceived();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "EstimatedEndTime")]
		string get_EstimatedEndTime();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ResultFilePath")]
		string get_ResultFilePath();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "State")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadState get_State();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InterruptReason")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason get_InterruptReason();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanResume")]
		bool get_CanResume();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "BytesReceivedChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_BytesReceivedChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "BytesReceivedChanged")]
		void remove_BytesReceivedChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "EstimatedEndTimeChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_EstimatedEndTimeChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "EstimatedEndTimeChanged")]
		void remove_EstimatedEndTimeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "StateChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_StateChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "StateChanged")]
		void remove_StateChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		void Cancel();

		void Pause();

		void Resume();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2_5
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ClientCertificateRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ClientCertificateRequested(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, global::Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ClientCertificateRequested")]
		void remove_ClientCertificateRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2ClientCertificateRequestedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Host")]
		string get_Host();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Port")]
		int get_Port();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsProxy")]
		bool get_IsProxy();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AllowedCertificateAuthorities")]
		global::System.Collections.Generic.IReadOnlyList<string> get_AllowedCertificateAuthorities();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MutuallyTrustedCertificates")]
		global::System.Collections.Generic.IReadOnlyList<global::Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate> get_MutuallyTrustedCertificates();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectedCertificate")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate get_SelectedCertificate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectedCertificate")]
		void put_SelectedCertificate(global::Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cancel")]
		bool get_Cancel();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Cancel")]
		void put_Cancel(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Handled")]
		bool get_Handled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Handled")]
		void put_Handled(bool value);

		global::Windows.Foundation.Deferral GetDeferral();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2ClientCertificate
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Subject")]
		string get_Subject();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Issuer")]
		string get_Issuer();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValidFrom")]
		double get_ValidFrom();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValidTo")]
		double get_ValidTo();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DerEncodedSerialNumber")]
		string get_DerEncodedSerialNumber();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		string get_DisplayName();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PemEncodedIssuerCertificateChain")]
		global::System.Collections.Generic.IReadOnlyList<string> get_PemEncodedIssuerCertificateChain();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Kind")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateKind get_Kind();

		string ToPemEncoding();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface CoreWebView2ClientCertificate_Manual
	{
		global::Windows.Security.Cryptography.Certificates.Certificate ToCertificate();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2_6
	{
		void OpenTaskManagerWindow();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2_7
	{
		global::Windows.Foundation.IAsyncOperation<bool> PrintToPdfAsync(
					string ResultFilePath, 
					global::Microsoft.Web.WebView2.Core.CoreWebView2PrintSettings printSettings);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2_8
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsMuted")]
		bool get_IsMuted();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsMuted")]
		void put_IsMuted(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsDocumentPlayingAudio")]
		bool get_IsDocumentPlayingAudio();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "IsMutedChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_IsMutedChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "IsMutedChanged")]
		void remove_IsMutedChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "IsDocumentPlayingAudioChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_IsDocumentPlayingAudioChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "IsDocumentPlayingAudioChanged")]
		void remove_IsDocumentPlayingAudioChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe interface ICoreWebView2_9
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsDefaultDownloadDialogOpen")]
		bool get_IsDefaultDownloadDialogOpen();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DefaultDownloadDialogCornerAlignment")]
		global::Microsoft.Web.WebView2.Core.CoreWebView2DefaultDownloadDialogCornerAlignment get_DefaultDownloadDialogCornerAlignment();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DefaultDownloadDialogCornerAlignment")]
		void put_DefaultDownloadDialogCornerAlignment(global::Microsoft.Web.WebView2.Core.CoreWebView2DefaultDownloadDialogCornerAlignment value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DefaultDownloadDialogMargin")]
		global::Windows.Foundation.Point get_DefaultDownloadDialogMargin();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DefaultDownloadDialogMargin")]
		void put_DefaultDownloadDialogMargin(global::Windows.Foundation.Point value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "IsDefaultDownloadDialogOpenChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_IsDefaultDownloadDialogOpenChanged(global::Windows.Foundation.TypedEventHandler<global::Microsoft.Web.WebView2.Core.CoreWebView2, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "IsDefaultDownloadDialogOpenChanged")]
		void remove_IsDefaultDownloadDialogOpenChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		void OpenDefaultDownloadDialog();

		void CloseDefaultDownloadDialog();
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2PdfToolbarItems : uint
	{
		None = 0x0u,
		Save = 0x1u,
		Print = 0x2u,
		SaveAs = 0x4u,
		ZoomIn = 0x8u,
		ZoomOut = 0x10u,
		Rotate = 0x20u,
		FitPage = 0x40u,
		PageLayout = 0x80u,
		Bookmarks = 0x100u,
		PageSelector = 0x200u,
		Search = 0x400u,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2WebErrorStatus
	{
		Unknown = 0,
		CertificateCommonNameIsIncorrect = 1,
		CertificateExpired = 2,
		ClientCertificateContainsErrors = 3,
		CertificateRevoked = 4,
		CertificateIsInvalid = 5,
		ServerUnreachable = 6,
		Timeout = 7,
		ErrorHttpInvalidServerResponse = 8,
		ConnectionAborted = 9,
		ConnectionReset = 10,
		Disconnected = 11,
		CannotConnect = 12,
		HostNameNotResolved = 13,
		OperationCanceled = 14,
		RedirectFailed = 15,
		UnexpectedError = 16,
		ValidAuthenticationCredentialsRequired = 17,
		ValidProxyAuthenticationRequired = 18,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2ScriptDialogKind
	{
		Alert = 0,
		Confirm = 1,
		Prompt = 2,
		Beforeunload = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2PermissionKind
	{
		UnknownPermission = 0,
		Microphone = 1,
		Camera = 2,
		Geolocation = 3,
		Notifications = 4,
		OtherSensors = 5,
		ClipboardRead = 6,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2PermissionState
	{
		Default = 0,
		Allow = 1,
		Deny = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2ProcessFailedKind
	{
		BrowserProcessExited = 0,
		RenderProcessExited = 1,
		RenderProcessUnresponsive = 2,
		FrameRenderProcessExited = 3,
		UtilityProcessExited = 4,
		SandboxHelperProcessExited = 5,
		GpuProcessExited = 6,
		PpapiPluginProcessExited = 7,
		PpapiBrokerProcessExited = 8,
		UnknownProcessExited = 9,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2ProcessFailedReason
	{
		Unexpected = 0,
		Unresponsive = 1,
		Terminated = 2,
		Crashed = 3,
		LaunchFailed = 4,
		OutOfMemory = 5,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2WebResourceContext
	{
		All = 0,
		Document = 1,
		Stylesheet = 2,
		Image = 3,
		Media = 4,
		Font = 5,
		Script = 6,
		XmlHttpRequest = 7,
		Fetch = 8,
		TextTrack = 9,
		EventSource = 10,
		Websocket = 11,
		Manifest = 12,
		SignedExchange = 13,
		Ping = 14,
		CspViolationReport = 15,
		Other = 16,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2CapturePreviewImageFormat
	{
		Png = 0,
		Jpeg = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2ContextMenuItemKind
	{
		Command = 0,
		CheckBox = 1,
		Radio = 2,
		Separator = 3,
		Submenu = 4,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2ContextMenuTargetKind
	{
		Page = 0,
		Image = 1,
		SelectedText = 2,
		Audio = 3,
		Video = 4,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2PreferredColorScheme
	{
		Auto = 0,
		Light = 1,
		Dark = 2,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2BrowsingDataKinds : uint
	{
		FileSystems = 0x1u,
		IndexedDb = 0x2u,
		LocalStorage = 0x4u,
		WebSql = 0x8u,
		CacheStorage = 0x10u,
		AllDomStorage = 0x20u,
		Cookies = 0x40u,
		AllSite = 0x80u,
		DiskCache = 0x100u,
		DownloadHistory = 0x200u,
		GeneralAutofill = 0x400u,
		PasswordAutosave = 0x800u,
		BrowsingHistory = 0x1000u,
		Settings = 0x2000u,
		AllProfile = 0x4000u,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2ServerCertificateErrorAction
	{
		AlwaysAllow = 0,
		Cancel = 1,
		Default = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2CookieSameSiteKind
	{
		None = 0,
		Lax = 1,
		Strict = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2MoveFocusReason
	{
		Programmatic = 0,
		Next = 1,
		Previous = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2KeyEventKind
	{
		KeyDown = 0,
		KeyUp = 1,
		SystemKeyDown = 2,
		SystemKeyUp = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public unsafe struct CoreWebView2PhysicalKeyStatus
	{
		public uint RepeatCount;
		public uint ScanCode;
		public int IsExtendedKey;
		public int IsMenuKeyDown;
		public int WasKeyDown;
		public int IsKeyReleased;
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2BoundsMode
	{
		UseRawPixels = 0,
		UseRasterizationScale = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2MouseEventKind
	{
		Move = 512,
		LeftButtonDown = 513,
		LeftButtonUp = 514,
		LeftButtonDoubleClick = 515,
		RightButtonDown = 516,
		RightButtonUp = 517,
		RightButtonDoubleClick = 518,
		MiddleButtonDown = 519,
		MiddleButtonUp = 520,
		MiddleButtonDoubleClick = 521,
		Wheel = 522,
		XButtonDown = 523,
		XButtonUp = 524,
		XButtonDoubleClick = 525,
		HorizontalWheel = 526,
		Leave = 675,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2MouseEventVirtualKeys : uint
	{
		None = 0x0u,
		LeftButton = 0x1u,
		RightButton = 0x2u,
		Shift = 0x4u,
		Control = 0x8u,
		MiddleButton = 0x10u,
		XButton1 = 0x20u,
		XButton2 = 0x40u,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2PointerEventKind
	{
		Update = 581,
		Down = 582,
		Up = 583,
		Enter = 585,
		Leave = 586,
		Activate = 587,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2BrowserProcessExitKind
	{
		Normal = 0,
		Failed = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2PrintOrientation
	{
		Portrait = 0,
		Landscape = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2ProcessKind
	{
		Browser = 0,
		Renderer = 1,
		Utility = 2,
		SandboxHelper = 3,
		Gpu = 4,
		PpapiPlugin = 5,
		PpapiBroker = 6,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2HostResourceAccessKind
	{
		Deny = 0,
		Allow = 1,
		DenyCors = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2DownloadState
	{
		InProgress = 0,
		Interrupted = 1,
		Completed = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2DownloadInterruptReason
	{
		None = 0,
		FileFailed = 1,
		FileAccessDenied = 2,
		FileNoSpace = 3,
		FileNameTooLong = 4,
		FileTooLarge = 5,
		FileMalicious = 6,
		FileTransientError = 7,
		FileBlockedByPolicy = 8,
		FileSecurityCheckFailed = 9,
		FileTooShort = 10,
		FileHashMismatch = 11,
		NetworkFailed = 12,
		NetworkTimeout = 13,
		NetworkDisconnected = 14,
		NetworkServerDown = 15,
		NetworkInvalidRequest = 16,
		ServerFailed = 17,
		ServerNoRange = 18,
		ServerBadContent = 19,
		ServerUnauthorized = 20,
		ServerCertificateProblem = 21,
		ServerForbidden = 22,
		ServerUnexpectedResponse = 23,
		ServerContentLengthMismatch = 24,
		ServerCrossOriginRedirect = 25,
		UserCanceled = 26,
		UserShutdown = 27,
		UserPaused = 28,
		DownloadProcessCrashed = 29,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2ClientCertificateKind
	{
		SmartCard = 0,
		Pin = 1,
		Other = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Microsoft.Web.WebView2.Core, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsR" +
		"untime")]
	public enum CoreWebView2DefaultDownloadDialogCornerAlignment
	{
		TopLeft = 0,
		TopRight = 1,
		BottomLeft = 2,
		BottomRight = 3,
	}
}

namespace System_Runtime_InteropServices
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.IClassFactory,System.Private.Interop, Version=999.999.999.999, Culture=neutral, P" +
		"ublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe interface IClassFactory__System_Private_Interop
	{
		int CreateInstance(
					global::System.IntPtr pUnkOuter, 
					global::System.Guid* riid, 
					global::System.IntPtr* ppvObject);

		int LockServer(int fLock);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.IMarshal,System.Runtime.WindowsRuntime, Version=4.0.14.0, Culture=neutral, Public" +
		"KeyToken=b77a5c561934e089")]
	public unsafe interface IMarshal__System_Runtime_WindowsRuntime
	{
		void GetUnmarshalClass(
					ref global::System.Guid riid, 
					global::System.IntPtr pv, 
					uint dwDestContext, 
					global::System.IntPtr pvDestContext, 
					uint mshlFlags, 
					out global::System.Guid pCid);

		void GetMarshalSizeMax(
					ref global::System.Guid riid, 
					global::System.IntPtr pv, 
					uint dwDestContext, 
					global::System.IntPtr pvDestContext, 
					uint mshlflags, 
					out uint pSize);

		void MarshalInterface(
					global::System.IntPtr pStm, 
					ref global::System.Guid riid, 
					global::System.IntPtr pv, 
					uint dwDestContext, 
					global::System.IntPtr pvDestContext, 
					uint mshlflags);

		void UnmarshalInterface(
					global::System.IntPtr pStm, 
					ref global::System.Guid riid, 
					out global::System.IntPtr ppv);

		void ReleaseMarshalData(global::System.IntPtr pStm);

		void DisconnectObject(uint dwReserved);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.IAgileObject,System.Runtime.WindowsRuntime, Version=4.0.14.0, Culture=neutral, Pu" +
		"blicKeyToken=b77a5c561934e089")]
	public unsafe interface IAgileObject__System_Runtime_WindowsRuntime
	{
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ClassFactory,System.Private.Interop, Version=999.999.999.999, Culture=neutral, Pu" +
		"blicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial class ClassFactory__System_Private_Interop
	{
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=24)]
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.HSTRING_HEADER,System.Private.Interop, Version=999.999.999.999, Culture=neutral, " +
		"PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct HSTRING_HEADER__System_Private_Interop
	{
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.HSTRING,System.Private.Interop, Version=999.999.999.999, Culture=neutral, PublicK" +
		"eyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct HSTRING__System_Private_Interop
	{
		public global::System.IntPtr handle;
	}
}

namespace System_Runtime_InteropServices_ComTypes
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Private.Interop, Version=999.999.999.999, Culture=neutr" +
		"al, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe interface ITypeInfo__System_Private_Interop
	{
		void GetTypeAttr(out global::System.IntPtr ppTypeAttr);

		void GetTypeComp(out global::System_Runtime_InteropServices_ComTypes.ITypeComp__System_Private_Interop ppTComp);

		void GetFuncDesc(
					int index, 
					out global::System.IntPtr ppFuncDesc);

		void GetVarDesc(
					int index, 
					out global::System.IntPtr ppVarDesc);

		void GetNames(
					int memid, 
					string[] rgBstrNames, 
					int cMaxNames, 
					out int pcNames);

		void GetRefTypeOfImplType(
					int index, 
					out int href);

		void GetImplTypeFlags(
					int index, 
					out global::System_Runtime_InteropServices_ComTypes.IMPLTYPEFLAGS__System_Private_Interop pImplTypeFlags);

		void GetIDsOfNames(
					string[] rgszNames, 
					int cNames, 
					int[] pMemId);

		void Invoke(
					object pvInstance, 
					int memid, 
					short wFlags, 
					ref global::System_Runtime_InteropServices_ComTypes.DISPPARAMS__System_Private_Interop pDispParams, 
					global::System.IntPtr pVarResult, 
					global::System.IntPtr pExcepInfo, 
					out int puArgErr);

		void GetDocumentation(
					int index, 
					out string strName, 
					out string strDocString, 
					out int dwHelpContext, 
					out string strHelpFile);

		void GetDllEntry(
					int memid, 
					global::System_Runtime_InteropServices_ComTypes.INVOKEKIND__System_Private_Interop invKind, 
					global::System.IntPtr pBstrDllName, 
					global::System.IntPtr pBstrName, 
					global::System.IntPtr pwOrdinal);

		void GetRefTypeInfo(
					int hRef, 
					out global::System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop ppTI);

		void AddressOfMember(
					int memid, 
					global::System_Runtime_InteropServices_ComTypes.INVOKEKIND__System_Private_Interop invKind, 
					out global::System.IntPtr ppv);

		void CreateInstance(
					object pUnkOuter, 
					ref global::System.Guid riid, 
					out object ppvObj);

		void GetMops(
					int memid, 
					out string pBstrMops);

		void GetContainingTypeLib(
					out global::System_Runtime_InteropServices_ComTypes.ITypeLib__System_Private_Interop ppTLB, 
					out int pIndex);

		void ReleaseTypeAttr(global::System.IntPtr pTypeAttr);

		void ReleaseFuncDesc(global::System.IntPtr pFuncDesc);

		void ReleaseVarDesc(global::System.IntPtr pVarDesc);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.ITypeComp,System.Private.Interop, Version=999.999.999.999, Culture=neutr" +
		"al, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe interface ITypeComp__System_Private_Interop
	{
		void Bind(
					string szName, 
					int lHashVal, 
					short wFlags, 
					out global::System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop ppTInfo, 
					out global::System_Runtime_InteropServices_ComTypes.DESCKIND__System_Private_Interop pDescKind, 
					out global::System_Runtime_InteropServices_ComTypes.BINDPTR__System_Private_Interop pBindPtr);

		void BindType(
					string szName, 
					int lHashVal, 
					out global::System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop ppTInfo, 
					out global::System_Runtime_InteropServices_ComTypes.ITypeComp__System_Private_Interop ppTComp);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.ITypeLib,System.Private.Interop, Version=999.999.999.999, Culture=neutra" +
		"l, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe interface ITypeLib__System_Private_Interop
	{
		int GetTypeInfoCount();

		void GetTypeInfo(
					int index, 
					out global::System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop ppTI);

		void GetTypeInfoType(
					int index, 
					out global::System_Runtime_InteropServices_ComTypes.TYPEKIND__System_Private_Interop pTKind);

		void GetTypeInfoOfGuid(
					ref global::System.Guid guid, 
					out global::System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop ppTInfo);

		void GetLibAttr(out global::System.IntPtr ppTLibAttr);

		void GetTypeComp(out global::System_Runtime_InteropServices_ComTypes.ITypeComp__System_Private_Interop ppTComp);

		void GetDocumentation(
					int index, 
					out string strName, 
					out string strDocString, 
					out int dwHelpContext, 
					out string strHelpFile);

		bool IsName(
					string szNameBuf, 
					int lHashVal);

		void FindName(
					string szNameBuf, 
					int lHashVal, 
					global::System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop[] ppTInfo, 
					int[] rgMemId, 
					ref short pcFound);

		void ReleaseTLibAttr(global::System.IntPtr pTLibAttr);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.DESCKIND,System.Private.Interop, Version=999.999.999.999, Culture=neutra" +
		"l, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum DESCKIND__System_Private_Interop
	{
		DESCKIND_NONE = 0,
		DESCKIND_FUNCDESC = 1,
		DESCKIND_VARDESC = 2,
		DESCKIND_TYPECOMP = 3,
		DESCKIND_IMPLICITAPPOBJ = 4,
		DESCKIND_MAX = 5,
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=8)]
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.BINDPTR,System.Private.Interop, Version=999.999.999.999, Culture=neutral" +
		", PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct BINDPTR__System_Private_Interop
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::System.IntPtr lpfuncdesc;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::System.IntPtr lpvardesc;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::System.IntPtr lptcomp;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS,System.Private.Interop, Version=999.999.999.999, Culture=n" +
		"eutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum IMPLTYPEFLAGS__System_Private_Interop
	{
		IMPLTYPEFLAG_FDEFAULT = 1,
		IMPLTYPEFLAG_FSOURCE = 2,
		IMPLTYPEFLAG_FRESTRICTED = 4,
		IMPLTYPEFLAG_FDEFAULTVTABLE = 8,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.DISPPARAMS,System.Private.Interop, Version=999.999.999.999, Culture=neut" +
		"ral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct DISPPARAMS__System_Private_Interop
	{
		public global::System.IntPtr rgvarg;
		public global::System.IntPtr rgdispidNamedArgs;
		public int cArgs;
		public int cNamedArgs;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.Private.Interop, Version=999.999.999.999, Culture=neut" +
		"ral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum INVOKEKIND__System_Private_Interop
	{
		INVOKE_FUNC = 1,
		INVOKE_PROPERTYGET = 2,
		INVOKE_PROPERTYPUT = 4,
		INVOKE_PROPERTYPUTREF = 8,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.TYPEKIND,System.Private.Interop, Version=999.999.999.999, Culture=neutra" +
		"l, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum TYPEKIND__System_Private_Interop
	{
		TKIND_ENUM = 0,
		TKIND_RECORD = 1,
		TKIND_MODULE = 2,
		TKIND_INTERFACE = 3,
		TKIND_DISPATCH = 4,
		TKIND_COCLASS = 5,
		TKIND_ALIAS = 6,
		TKIND_UNION = 7,
		TKIND_MAX = 8,
	}
}

namespace System_Runtime_InteropServices_WindowsRuntime
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.WindowsRuntime.IBufferByteAccess,System.Runtime.WindowsRuntime, Version=4.0.14.0," +
		" Culture=neutral, PublicKeyToken=b77a5c561934e089")]
	public unsafe interface IBufferByteAccess__System_Runtime_WindowsRuntime
	{
		global::System.IntPtr GetBuffer();
	}
}

namespace Windows.ApplicationModel
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.ISuspendingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SuspendingEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.ISuspendingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SuspendingOperation")]
		public global::Windows.ApplicationModel.SuspendingOperation get_SuspendingOperation()
		{
			global::Windows.ApplicationModel.SuspendingOperation __retVal = global::Windows.ApplicationModel.ISuspendingEventArgs__Impl.Stubs.get_SuspendingOperation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public SuspendingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.ISuspendingOperation))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SuspendingOperation : global::System.__ComObject, global::Windows.ApplicationModel.ISuspendingOperation
	{
		public global::Windows.ApplicationModel.SuspendingDeferral GetDeferral()
		{
			global::Windows.ApplicationModel.SuspendingDeferral __retVal = global::Windows.ApplicationModel.ISuspendingOperation__Impl.Stubs.GetDeferral(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public SuspendingOperation(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.ISuspendingDeferral))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SuspendingDeferral : global::System.__ComObject, global::Windows.ApplicationModel.ISuspendingDeferral
	{
		public void Complete()
		{
			global::Windows.ApplicationModel.ISuspendingDeferral__Impl.Stubs.Complete(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public SuspendingDeferral(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.ILeavingBackgroundEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class LeavingBackgroundEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.ILeavingBackgroundEventArgs
	{
		public LeavingBackgroundEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.IEnteredBackgroundEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class EnteredBackgroundEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.IEnteredBackgroundEventArgs
	{
		public EnteredBackgroundEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.IPackage))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.IPackage2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Package : global::System.__ComObject, global::Windows.ApplicationModel.IPackage, global::Windows.ApplicationModel.IPackage2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Id")]
		public global::Windows.ApplicationModel.PackageId get_Id()
		{
			global::Windows.ApplicationModel.PackageId __retVal = global::Windows.ApplicationModel.IPackage__Impl.Stubs.get_Id(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InstalledLocation")]
		public global::Windows.Storage.StorageFolder get_InstalledLocation()
		{
			global::Windows.Storage.StorageFolder __retVal = global::Windows.ApplicationModel.IPackage__Impl.Stubs.get_InstalledLocation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		public string get_DisplayName()
		{
			string __retVal = global::Windows.ApplicationModel.IPackage2__Impl.Stubs.get_DisplayName(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		public static global::Windows.ApplicationModel.Package get_Current()
		{
			global::Windows.ApplicationModel.Package retval;
			retval = __Factory_Windows_ApplicationModel__IPackageStatics_get_Current("Windows.ApplicationModel.Package");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.ApplicationModel.Package __Factory_Windows_ApplicationModel__IPackageStatics_get_Current(string typeName)
		{
			global::Windows.ApplicationModel.Package __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.IPackageStatics__Impl.Stubs.get_Current(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.ApplicationModel.IPackageStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public Package(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.IPackageId))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class PackageId : global::System.__ComObject, global::Windows.ApplicationModel.IPackageId
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Name")]
		public string get_Name()
		{
			string __retVal = global::Windows.ApplicationModel.IPackageId__Impl.Stubs.get_Name(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FullName")]
		public string get_FullName()
		{
			string __retVal = global::Windows.ApplicationModel.IPackageId__Impl.Stubs.get_FullName(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public PackageId(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISuspendingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SuspendingOperation")]
		global::Windows.ApplicationModel.SuspendingOperation get_SuspendingOperation();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISuspendingOperation
	{
		global::Windows.ApplicationModel.SuspendingDeferral GetDeferral();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISuspendingDeferral
	{
		void Complete();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILeavingBackgroundEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IEnteredBackgroundEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPackageStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		global::Windows.ApplicationModel.Package get_Current();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPackage
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Id")]
		global::Windows.ApplicationModel.PackageId get_Id();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InstalledLocation")]
		global::Windows.Storage.StorageFolder get_InstalledLocation();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPackageId
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Name")]
		string get_Name();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FullName")]
		string get_FullName();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPackage2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		string get_DisplayName();
	}
}

namespace Windows.ApplicationModel.Activation
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IPrelaunchActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class LaunchActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs, global::Windows.ApplicationModel.Activation.IPrelaunchActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Arguments")]
		public string get_Arguments()
		{
			string __retVal = global::Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs__Impl.Stubs.get_Arguments(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		public global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState()
		{
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState __retVal = global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Stubs.get_PreviousExecutionState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PrelaunchActivated")]
		public bool get_PrelaunchActivated()
		{
			bool __retVal = global::Windows.ApplicationModel.Activation.IPrelaunchActivatedEventArgs__Impl.Stubs.get_PrelaunchActivated(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public LaunchActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IFileActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FileActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.IFileActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		public global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState()
		{
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState __retVal = global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Stubs.get_PreviousExecutionState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public FileActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.ISearchActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SearchActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.ISearchActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		public global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState()
		{
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState __retVal = global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Stubs.get_PreviousExecutionState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public SearchActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IShareTargetActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ShareTargetActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.IShareTargetActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		public global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState()
		{
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState __retVal = global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Stubs.get_PreviousExecutionState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public ShareTargetActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IFileOpenPickerActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FileOpenPickerActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.IFileOpenPickerActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		public global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState()
		{
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState __retVal = global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Stubs.get_PreviousExecutionState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public FileOpenPickerActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FileSavePickerActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		public global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState()
		{
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState __retVal = global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Stubs.get_PreviousExecutionState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public FileSavePickerActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.ICachedFileUpdaterActivatedEventArgs))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CachedFileUpdaterActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.ICachedFileUpdaterActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		public global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState()
		{
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState __retVal = global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Stubs.get_PreviousExecutionState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CachedFileUpdaterActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IBackgroundActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class BackgroundActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.IBackgroundActivatedEventArgs
	{
		public BackgroundActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILaunchActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Arguments")]
		string get_Arguments();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPrelaunchActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PrelaunchActivated")]
		bool get_PrelaunchActivated();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFileActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISearchActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IShareTargetActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFileOpenPickerActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFileSavePickerActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICachedFileUpdaterActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBackgroundActivatedEventArgs
	{
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ApplicationExecutionState
	{
		NotRunning = 0,
		Running = 1,
		Suspended = 2,
		Terminated = 3,
		ClosedByUser = 4,
	}
}

namespace Windows.ApplicationModel.Contacts
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Contacts.IContact))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Contact : global::System.__ComObject, global::Windows.ApplicationModel.Contacts.IContact
	{
		public Contact(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContact
	{
	}
}

namespace Windows.ApplicationModel.Core
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView3))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CoreApplicationView : global::System.__ComObject, global::Windows.ApplicationModel.Core.ICoreApplicationView, global::Windows.ApplicationModel.Core.ICoreApplicationView3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TitleBar")]
		public global::Windows.ApplicationModel.Core.CoreApplicationViewTitleBar get_TitleBar()
		{
			global::Windows.ApplicationModel.Core.CoreApplicationViewTitleBar __retVal = global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Stubs.get_TitleBar(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreApplicationView(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Core.ICoreApplicationViewTitleBar))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CoreApplicationViewTitleBar : global::System.__ComObject, global::Windows.ApplicationModel.Core.ICoreApplicationViewTitleBar
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ExtendViewIntoTitleBar")]
		public void put_ExtendViewIntoTitleBar(bool value)
		{
			global::Windows.ApplicationModel.Core.ICoreApplicationViewTitleBar__Impl.Stubs.put_ExtendViewIntoTitleBar(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public CoreApplicationViewTitleBar(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(196608)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CoreApplication : global::System.__ComObject
	{
		public static void EnablePrelaunch(bool value)
		{
			__Factory_Windows_ApplicationModel_Core__ICoreApplication2_EnablePrelaunch(
								"Windows.ApplicationModel.Core.CoreApplication", 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_ApplicationModel_Core__ICoreApplication2_EnablePrelaunch(
					string typeName, 
					bool value)
		{
			global::Windows.ApplicationModel.Core.ICoreApplication2__Impl.Stubs.EnablePrelaunch(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.ApplicationModel.Core.ICoreApplication2).TypeHandle
												), 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static global::Windows.ApplicationModel.Core.CoreApplicationView GetCurrentView()
		{
			global::Windows.ApplicationModel.Core.CoreApplicationView retval;
			retval = __Factory_Windows_ApplicationModel_Core__ICoreApplication_GetCurrentView("Windows.ApplicationModel.Core.CoreApplication");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.ApplicationModel.Core.CoreApplicationView __Factory_Windows_ApplicationModel_Core__ICoreApplication_GetCurrentView(string typeName)
		{
			global::Windows.ApplicationModel.Core.CoreApplicationView __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Core.ICoreApplication__Impl.Stubs.GetCurrentView(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplication).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public CoreApplication(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreApplicationView
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreApplicationView3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TitleBar")]
		global::Windows.ApplicationModel.Core.CoreApplicationViewTitleBar get_TitleBar();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreApplicationViewTitleBar
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ExtendViewIntoTitleBar")]
		void put_ExtendViewIntoTitleBar(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreApplication
	{
		global::Windows.ApplicationModel.Core.CoreApplicationView GetCurrentView();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreApplication2
	{
		void EnablePrelaunch(bool value);
	}
}

namespace Windows.ApplicationModel.DataTransfer
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.DataTransfer.IDataPackage))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DataPackage : global::System.__ComObject, global::Windows.ApplicationModel.DataTransfer.IDataPackage
	{
		public DataPackage(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataPackage
	{
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum DataPackageOperation : uint
	{
		None = 0x0u,
		Copy = 0x1u,
		Move = 0x2u,
		Link = 0x4u,
	}
}

namespace Windows.ApplicationModel.Resources.Core
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Resources.Core.IResourceContext))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ResourceContext : global::System.__ComObject, global::Windows.ApplicationModel.Resources.Core.IResourceContext
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "QualifierValues")]
		public global::Windows.Foundation.Collections.IObservableMap<string, string> get_QualifierValues()
		{
			global::Windows.Foundation.Collections.IObservableMap<string, string> __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Stubs.get_QualifierValues(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.ApplicationModel.Resources.Core.ResourceContext Clone()
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceContext __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Stubs.Clone(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Languages")]
		public global::System.Collections.Generic.IReadOnlyList<string> get_Languages()
		{
			global::System.Collections.Generic.IReadOnlyList<string> __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Stubs.get_Languages(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Languages")]
		public void put_Languages(global::System.Collections.Generic.IReadOnlyList<string> languages)
		{
			global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Stubs.put_Languages(
								this, 
								languages
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static global::Windows.ApplicationModel.Resources.Core.ResourceContext GetForViewIndependentUse()
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceContext retval;
			retval = __Factory_Windows_ApplicationModel_Resources_Core__IResourceContextStatics2_GetForViewIndependentUse("Windows.ApplicationModel.Resources.Core.ResourceContext");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.ApplicationModel.Resources.Core.ResourceContext __Factory_Windows_ApplicationModel_Resources_Core__IResourceContextStatics2_GetForViewIndependentUse(string typeName)
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceContext __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Resources.Core.IResourceContextStatics2__Impl.Stubs.GetForViewIndependentUse(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.ApplicationModel.Resources.Core.IResourceContextStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public ResourceContext(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Resources.Core.IResourceManager))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ResourceManager : global::System.__ComObject, global::Windows.ApplicationModel.Resources.Core.IResourceManager
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MainResourceMap")]
		public global::Windows.ApplicationModel.Resources.Core.ResourceMap get_MainResourceMap()
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceMap __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceManager__Impl.Stubs.get_MainResourceMap(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AllResourceMaps")]
		public global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.ResourceMap> get_AllResourceMaps()
		{
			global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.ResourceMap> __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceManager__Impl.Stubs.get_AllResourceMaps(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		public static global::Windows.ApplicationModel.Resources.Core.ResourceManager get_Current()
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceManager retval;
			retval = __Factory_Windows_ApplicationModel_Resources_Core__IResourceManagerStatics_get_Current("Windows.ApplicationModel.Resources.Core.ResourceManager");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.ApplicationModel.Resources.Core.ResourceManager __Factory_Windows_ApplicationModel_Resources_Core__IResourceManagerStatics_get_Current(string typeName)
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceManager __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Resources.Core.IResourceManagerStatics__Impl.Stubs.get_Current(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.ApplicationModel.Resources.Core.IResourceManagerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public ResourceManager(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Resources.Core.IResourceMap))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ResourceMap : global::System.__ComObject, global::Windows.ApplicationModel.Resources.Core.IResourceMap, global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>, global::System.Collections.Generic.IReadOnlyCollection<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>
	{
		int global::System.Collections.Generic.IReadOnlyCollection<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>.Count
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.Count_Get(((global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>)this));
			}
		}

		global::Windows.ApplicationModel.Resources.Core.NamedResource global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>.this[string index]
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.Indexer_Get(
									((global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>)this), 
									index
								);
			}
		}

		global::System.Collections.Generic.IEnumerable<string> global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>.Keys
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.Keys(this);
			}
		}

		global::System.Collections.Generic.IEnumerable<global::Windows.ApplicationModel.Resources.Core.NamedResource> global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>.Values
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.Values(this);
			}
		}

		bool global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>.ContainsKey(string key)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.ContainsKey(
								this, 
								key
							);
		}

		bool global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>.TryGetValue(
					string key, 
					out global::Windows.ApplicationModel.Resources.Core.NamedResource value)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.TryGetValue(
								this, 
								key, 
								out value
							);
		}

		global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>> global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>.GetEnumerator()
		{
			return (global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>).TypeHandle
							);
		}

		public global::Windows.ApplicationModel.Resources.Core.ResourceCandidate GetValue(
					string resource, 
					global::Windows.ApplicationModel.Resources.Core.ResourceContext context)
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceCandidate __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceMap__Impl.Stubs.GetValue(
								this, 
								resource, 
								context
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.ApplicationModel.Resources.Core.ResourceMap GetSubtree(string reference)
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceMap __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceMap__Impl.Stubs.GetSubtree(
								this, 
								reference
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public ResourceMap(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Resources.Core.INamedResource))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NamedResource : global::System.__ComObject, global::Windows.ApplicationModel.Resources.Core.INamedResource
	{
		public NamedResource(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Resources.Core.IResourceCandidate))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ResourceCandidate : global::System.__ComObject, global::Windows.ApplicationModel.Resources.Core.IResourceCandidate
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValueAsString")]
		public string get_ValueAsString()
		{
			string __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceCandidate__Impl.Stubs.get_ValueAsString(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public ResourceCandidate(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceContextStatics2
	{
		global::Windows.ApplicationModel.Resources.Core.ResourceContext GetForViewIndependentUse();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceContext
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "QualifierValues")]
		global::Windows.Foundation.Collections.IObservableMap<string, string> get_QualifierValues();

		global::Windows.ApplicationModel.Resources.Core.ResourceContext Clone();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Languages")]
		global::System.Collections.Generic.IReadOnlyList<string> get_Languages();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Languages")]
		void put_Languages(global::System.Collections.Generic.IReadOnlyList<string> languages);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceManagerStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		global::Windows.ApplicationModel.Resources.Core.ResourceManager get_Current();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceManager
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MainResourceMap")]
		global::Windows.ApplicationModel.Resources.Core.ResourceMap get_MainResourceMap();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AllResourceMaps")]
		global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.ResourceMap> get_AllResourceMaps();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceMap : global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>
	{
		global::Windows.ApplicationModel.Resources.Core.ResourceCandidate GetValue(
					string resource, 
					global::Windows.ApplicationModel.Resources.Core.ResourceContext context);

		global::Windows.ApplicationModel.Resources.Core.ResourceMap GetSubtree(string reference);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INamedResource
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceCandidate
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValueAsString")]
		string get_ValueAsString();
	}
}

namespace Windows.Foundation
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Foundation.IDeferral))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Deferral : global::System.__ComObject, global::Windows.Foundation.IDeferral, global::System.IDisposable
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		public Deferral(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStringable
	{
		string ToString();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDeferral : global::System.IDisposable
	{
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct UniversalApiContract
	{
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct FoundationContract
	{
	}
}

namespace Windows.Foundation.Diagnostics
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TracingStatusChangedEventArgs : global::System.__ComObject, global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Enabled")]
		public bool get_Enabled()
		{
			bool __retVal = global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs__Impl.Stubs.get_Enabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public TracingStatusChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AsyncCausalityTracer : global::System.__ComObject
	{
		public static void TraceOperationCreation(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					string operationName, 
					ulong relatedContext)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationCreation(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								operationName, 
								relatedContext
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationCreation(
					string typeName, 
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					string operationName, 
					ulong relatedContext)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.TraceOperationCreation(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								operationName, 
								relatedContext
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static void TraceOperationCompletion(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.AsyncStatus status)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationCompletion(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								status
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationCompletion(
					string typeName, 
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.AsyncStatus status)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.TraceOperationCompletion(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								status
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static void TraceOperationRelation(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalityRelation relation)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationRelation(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								relation
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationRelation(
					string typeName, 
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalityRelation relation)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.TraceOperationRelation(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								relation
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static void TraceSynchronousWorkStart(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceSynchronousWorkStart(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								work
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceSynchronousWorkStart(
					string typeName, 
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.TraceSynchronousWorkStart(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								work
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static void TraceSynchronousWorkCompletion(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceSynchronousWorkCompletion(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								traceLevel, 
								source, 
								work
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceSynchronousWorkCompletion(
					string typeName, 
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.TraceSynchronousWorkCompletion(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								traceLevel, 
								source, 
								work
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TracingStatusChanged")]
		public static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TracingStatusChanged(global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken retval;
			retval = __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_add_TracingStatusChanged(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_add_TracingStatusChanged(
					string typeName, 
					global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __pRetVal;
			__pRetVal = global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.add_TracingStatusChanged(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TracingStatusChanged")]
		public static void remove_TracingStatusChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken cookie)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_remove_TracingStatusChanged(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								cookie
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_remove_TracingStatusChanged(
					string typeName, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken cookie)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.remove_TracingStatusChanged(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								cookie
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public AsyncCausalityTracer(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITracingStatusChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Enabled")]
		bool get_Enabled();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAsyncCausalityTracerStatics
	{
		void TraceOperationCreation(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					string operationName, 
					ulong relatedContext);

		void TraceOperationCompletion(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.AsyncStatus status);

		void TraceOperationRelation(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalityRelation relation);

		void TraceSynchronousWorkStart(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work);

		void TraceSynchronousWorkCompletion(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TracingStatusChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TracingStatusChanged(global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TracingStatusChanged")]
		void remove_TracingStatusChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken cookie);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CausalityTraceLevel
	{
		Required = 0,
		Important = 1,
		Verbose = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CausalitySource
	{
		Application = 0,
		Library = 1,
		System = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CausalityRelation
	{
		AssignDelegate = 0,
		Join = 1,
		Choice = 2,
		Cancel = 3,
		Error = 4,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CausalitySynchronousWork
	{
		CompletionNotification = 0,
		ProgressNotification = 1,
		Execution = 2,
	}
}

namespace Windows.Foundation.Metadata
{
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ApiInformation : global::System.__ComObject
	{
		public static bool IsMethodPresent(
					string typeName, 
					string methodName)
		{
			bool retval;
			retval = __Factory_Windows_Foundation_Metadata__IApiInformationStatics_IsMethodPresent(
								"Windows.Foundation.Metadata.ApiInformation", 
								typeName, 
								methodName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static bool __Factory_Windows_Foundation_Metadata__IApiInformationStatics_IsMethodPresent(
					string typeName_1, 
					string typeName, 
					string methodName)
		{
			bool __pRetVal;
			__pRetVal = global::Windows.Foundation.Metadata.IApiInformationStatics__Impl.Stubs.IsMethodPresent(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName_1, 
													typeof(global::Windows.Foundation.Metadata.IApiInformationStatics).TypeHandle
												), 
								typeName, 
								methodName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public ApiInformation(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApiInformationStatics
	{
		bool IsMethodPresent(
					string typeName, 
					string methodName);
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class LengthIsAttribute : global::System.Attribute
	{
		public LengthIsAttribute(int indexLengthParameter)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.LengthIsAttribute\'.  Windows Runtime attribute types are not " +
					"constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class OverloadAttribute : global::System.Attribute
	{
		public OverloadAttribute(string method)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.OverloadAttribute\'.  Windows Runtime attribute types are not " +
					"constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DefaultOverloadAttribute : global::System.Attribute
	{
		public DefaultOverloadAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.DefaultOverloadAttribute\'.  Windows Runtime attribute types a" +
					"re not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=true)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ContractVersionAttribute : global::System.Attribute
	{
		public ContractVersionAttribute(uint version)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ContractVersionAttribute\'.  Windows Runtime attribute types a" +
					"re not constructable.");
		}

		public ContractVersionAttribute(
					global::System.Type contract, 
					uint version)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ContractVersionAttribute\'.  Windows Runtime attribute types a" +
					"re not constructable.");
		}

		public ContractVersionAttribute(
					string contract, 
					uint version)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ContractVersionAttribute\'.  Windows Runtime attribute types a" +
					"re not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class GuidAttribute : global::System.Attribute
	{
		public GuidAttribute(
					uint a, 
					ushort b, 
					ushort c, 
					byte d, 
					byte e, 
					byte f, 
					byte g, 
					byte h, 
					byte i, 
					byte j, 
					byte k)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.GuidAttribute\'.  Windows Runtime attribute types are not cons" +
					"tructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class WebHostHiddenAttribute : global::System.Attribute
	{
		public WebHostHiddenAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.WebHostHiddenAttribute\'.  Windows Runtime attribute types are" +
					" not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ExclusiveToAttribute : global::System.Attribute
	{
		public ExclusiveToAttribute(global::System.Type typeName)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ExclusiveToAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=true)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StaticAttribute : global::System.Attribute
	{
		public StaticAttribute(
					global::System.Type type, 
					uint version)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.StaticAttribute\'.  Windows Runtime attribute types are not co" +
					"nstructable.");
		}

		public StaticAttribute(
					global::System.Type type, 
					uint version, 
					string contractName)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.StaticAttribute\'.  Windows Runtime attribute types are not co" +
					"nstructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class MarshalingBehaviorAttribute : global::System.Attribute
	{
		public MarshalingBehaviorAttribute(global::Windows.Foundation.Metadata.MarshalingType behavior)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.MarshalingBehaviorAttribute\'.  Windows Runtime attribute type" +
					"s are not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ThreadingAttribute : global::System.Attribute
	{
		public ThreadingAttribute(global::Windows.Foundation.Metadata.ThreadingModel model)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ThreadingAttribute\'.  Windows Runtime attribute types are not" +
					" constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=true)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ComposableAttribute : global::System.Attribute
	{
		public ComposableAttribute(
					global::System.Type type, 
					global::Windows.Foundation.Metadata.CompositionType compositionType, 
					uint version)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ComposableAttribute\'.  Windows Runtime attribute types are no" +
					"t constructable.");
		}

		public ComposableAttribute(
					global::System.Type type, 
					global::Windows.Foundation.Metadata.CompositionType compositionType, 
					uint version, 
					string contract)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ComposableAttribute\'.  Windows Runtime attribute types are no" +
					"t constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=true)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ActivatableAttribute : global::System.Attribute
	{
		public ActivatableAttribute(uint version)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ActivatableAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}

		public ActivatableAttribute(
					uint version, 
					string type)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ActivatableAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}

		public ActivatableAttribute(
					global::System.Type type, 
					uint version, 
					string contractName)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ActivatableAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=true)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class VersionAttribute : global::System.Attribute
	{
		public VersionAttribute(uint version)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.VersionAttribute\'.  Windows Runtime attribute types are not c" +
					"onstructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ApiContractAttribute : global::System.Attribute
	{
		public ApiContractAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ApiContractAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DualApiPartitionAttribute : global::System.Attribute
	{
		public DualApiPartitionAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.DualApiPartitionAttribute\'.  Windows Runtime attribute types " +
					"are not constructable.");
		}
		public uint version;
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class MuseAttribute : global::System.Attribute
	{
		public MuseAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.MuseAttribute\'.  Windows Runtime attribute types are not cons" +
					"tructable.");
		}
		public uint Version;
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AllowMultipleAttribute : global::System.Attribute
	{
		public AllowMultipleAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.AllowMultipleAttribute\'.  Windows Runtime attribute types are" +
					" not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AttributeNameAttribute : global::System.Attribute
	{
		public AttributeNameAttribute(string A_0)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.AttributeNameAttribute\'.  Windows Runtime attribute types are" +
					" not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=true)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DeprecatedAttribute : global::System.Attribute
	{
		public DeprecatedAttribute(
					string message, 
					global::Windows.Foundation.Metadata.DeprecationType type, 
					uint version, 
					string contract)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.DeprecatedAttribute\'.  Windows Runtime attribute types are no" +
					"t constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class RemoteAsyncAttribute : global::System.Attribute
	{
		public RemoteAsyncAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.RemoteAsyncAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum MarshalingType
	{
		InvalidMarshaling = 0,
		None = 1,
		Agile = 2,
		Standard = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ThreadingModel
	{
		InvalidThreading = 0,
		STA = 1,
		MTA = 2,
		Both = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CompositionType
	{
		Protected = 1,
		Public = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum DeprecationType
	{
		Deprecate = 0,
		Remove = 1,
	}
}

namespace Windows.Globalization
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Globalization.ICalendar))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Calendar : global::System.__ComObject, global::Windows.Globalization.ICalendar
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Calendar()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.Globalization.Calendar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public void ChangeCalendarSystem(string value)
		{
			global::Windows.Globalization.ICalendar__Impl.Stubs.ChangeCalendarSystem(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public global::System.DateTimeOffset GetDateTime()
		{
			global::System.DateTimeOffset __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.GetDateTime(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LastEra")]
		public int get_LastEra()
		{
			int __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.get_LastEra(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Era")]
		public void put_Era(int value)
		{
			global::Windows.Globalization.ICalendar__Impl.Stubs.put_Era(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public string EraAsString()
		{
			string __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.EraAsString(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public string EraAsString(int idealLength)
		{
			string __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.EraAsString(
								this, 
								idealLength
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstYearInThisEra")]
		public int get_FirstYearInThisEra()
		{
			int __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.get_FirstYearInThisEra(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Year")]
		public void put_Year(int value)
		{
			global::Windows.Globalization.ICalendar__Impl.Stubs.put_Year(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstMonthInThisYear")]
		public int get_FirstMonthInThisYear()
		{
			int __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.get_FirstMonthInThisYear(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Month")]
		public void put_Month(int value)
		{
			global::Windows.Globalization.ICalendar__Impl.Stubs.put_Month(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstDayInThisMonth")]
		public int get_FirstDayInThisMonth()
		{
			int __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.get_FirstDayInThisMonth(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Day")]
		public int get_Day()
		{
			int __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.get_Day(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Day")]
		public void put_Day(int value)
		{
			global::Windows.Globalization.ICalendar__Impl.Stubs.put_Day(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Calendar(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Globalization.ILanguage))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Language : global::System.__ComObject, global::Windows.Globalization.ILanguage
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Language(string languageTag)
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_Globalization__ILanguageFactory_CreateLanguage(
								"Windows.Globalization.Language", 
								languageTag
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_Globalization__ILanguageFactory_CreateLanguage(
					string typeName, 
					string languageTag)
		{
			global::System.IntPtr __pRetVal;
			__pRetVal = global::Windows.Globalization.ILanguageFactory__Impl.Stubs.CreateLanguage(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Globalization.ILanguageFactory).TypeHandle
												), 
								languageTag
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal);
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		public string get_DisplayName()
		{
			string __retVal = global::Windows.Globalization.ILanguage__Impl.Stubs.get_DisplayName(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public Language(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Globalization.IGeographicRegion))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class GeographicRegion : global::System.__ComObject, global::Windows.Globalization.IGeographicRegion
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public GeographicRegion(string geographicRegionCode)
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_Globalization__IGeographicRegionFactory_CreateGeographicRegion(
								"Windows.Globalization.GeographicRegion", 
								geographicRegionCode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_Globalization__IGeographicRegionFactory_CreateGeographicRegion(
					string typeName, 
					string geographicRegionCode)
		{
			global::System.IntPtr __pRetVal;
			__pRetVal = global::Windows.Globalization.IGeographicRegionFactory__Impl.Stubs.CreateGeographicRegion(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Globalization.IGeographicRegionFactory).TypeHandle
												), 
								geographicRegionCode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal);
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		public string get_DisplayName()
		{
			string __retVal = global::Windows.Globalization.IGeographicRegion__Impl.Stubs.get_DisplayName(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public GeographicRegion(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CalendarIdentifiers : global::System.__ComObject
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Gregorian")]
		public static string get_Gregorian()
		{
			string retval;
			retval = __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Gregorian("Windows.Globalization.CalendarIdentifiers");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static string __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Gregorian(string typeName)
		{
			string __pRetVal;
			__pRetVal = global::Windows.Globalization.ICalendarIdentifiersStatics__Impl.Stubs.get_Gregorian(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Globalization.ICalendarIdentifiersStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Hijri")]
		public static string get_Hijri()
		{
			string retval;
			retval = __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Hijri("Windows.Globalization.CalendarIdentifiers");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static string __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Hijri(string typeName)
		{
			string __pRetVal;
			__pRetVal = global::Windows.Globalization.ICalendarIdentifiersStatics__Impl.Stubs.get_Hijri(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Globalization.ICalendarIdentifiersStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Japanese")]
		public static string get_Japanese()
		{
			string retval;
			retval = __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Japanese("Windows.Globalization.CalendarIdentifiers");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static string __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Japanese(string typeName)
		{
			string __pRetVal;
			__pRetVal = global::Windows.Globalization.ICalendarIdentifiersStatics__Impl.Stubs.get_Japanese(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Globalization.ICalendarIdentifiersStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public CalendarIdentifiers(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICalendar
	{
		void ChangeCalendarSystem(string value);

		global::System.DateTimeOffset GetDateTime();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LastEra")]
		int get_LastEra();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Era")]
		void put_Era(int value);

		string EraAsString();

		string EraAsString(int idealLength);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstYearInThisEra")]
		int get_FirstYearInThisEra();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Year")]
		void put_Year(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstMonthInThisYear")]
		int get_FirstMonthInThisYear();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Month")]
		void put_Month(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstDayInThisMonth")]
		int get_FirstDayInThisMonth();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Day")]
		int get_Day();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Day")]
		void put_Day(int value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILanguageFactory
	{
		global::System.IntPtr CreateLanguage(string languageTag);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILanguage
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		string get_DisplayName();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGeographicRegionFactory
	{
		global::System.IntPtr CreateGeographicRegion(string geographicRegionCode);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGeographicRegion
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		string get_DisplayName();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICalendarIdentifiersStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Gregorian")]
		string get_Gregorian();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Hijri")]
		string get_Hijri();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Japanese")]
		string get_Japanese();
	}
}

namespace Windows.Globalization.NumberFormatting
{
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INumberFormatter2
	{
	}
}

namespace Windows.Security.Cryptography.Certificates
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Security.Cryptography.Certificates.ICertificate))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Certificate : global::System.__ComObject, global::Windows.Security.Cryptography.Certificates.ICertificate
	{
		public Certificate(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICertificate
	{
	}
}

namespace Windows.Storage
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageFile))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageItem))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageItemProperties))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StorageFile : global::System.__ComObject, global::Windows.Storage.IStorageFile, global::Windows.Storage.Streams.IInputStreamReference, global::Windows.Storage.Streams.IRandomAccessStreamReference, global::Windows.Storage.IStorageItem, global::Windows.Storage.IStorageItemProperties, global::Windows.Storage.IStorageItemProperties2, global::Windows.Storage.IStorageItem2, global::Windows.Storage.IStorageItemPropertiesWithProvider, global::Windows.Storage.IStorageFilePropertiesWithAvailability, global::Windows.Storage.IStorageFile2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FileType")]
		public string get_FileType()
		{
			string __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.get_FileType(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentType")]
		public string get_ContentType()
		{
			string __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.get_ContentType(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStream> OpenAsync(global::Windows.Storage.FileAccessMode accessMode)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStream> __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.OpenAsync(
								this, 
								accessMode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageStreamTransaction> OpenTransactedWriteAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageStreamTransaction> __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.OpenTransactedWriteAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(global::Windows.Storage.IStorageFolder destinationFolder)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.CopyAsync(
								this, 
								destinationFolder
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.CopyAsync(
								this, 
								destinationFolder, 
								desiredNewName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName, 
					global::Windows.Storage.NameCollisionOption option)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.CopyAsync(
								this, 
								destinationFolder, 
								desiredNewName, 
								option
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncAction CopyAndReplaceAsync(global::Windows.Storage.IStorageFile fileToReplace)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.CopyAndReplaceAsync(
								this, 
								fileToReplace
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncAction MoveAsync(global::Windows.Storage.IStorageFolder destinationFolder)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.MoveAsync(
								this, 
								destinationFolder
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncAction MoveAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.MoveAsync(
								this, 
								destinationFolder, 
								desiredNewName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncAction MoveAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName, 
					global::Windows.Storage.NameCollisionOption option)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.MoveAsync(
								this, 
								destinationFolder, 
								desiredNewName, 
								option
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncAction MoveAndReplaceAsync(global::Windows.Storage.IStorageFile fileToReplace)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.MoveAndReplaceAsync(
								this, 
								fileToReplace
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Path")]
		public string get_Path()
		{
			string __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.get_Path(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		public string get_DisplayName()
		{
			string __retVal = global::Windows.Storage.IStorageItemProperties__Impl.Stubs.get_DisplayName(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public StorageFile(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageStreamTransaction))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StorageStreamTransaction : global::System.__ComObject, global::Windows.Storage.IStorageStreamTransaction, global::System.IDisposable
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		public StorageStreamTransaction(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageFolder))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StorageFolder : global::System.__ComObject, global::Windows.Storage.IStorageFolder, global::Windows.Storage.IStorageItem, global::Windows.Storage.Search.IStorageFolderQueryOperations, global::Windows.Storage.IStorageItemProperties, global::Windows.Storage.IStorageItemProperties2, global::Windows.Storage.IStorageItem2, global::Windows.Storage.IStorageFolder2, global::Windows.Storage.IStorageItemPropertiesWithProvider, global::Windows.Storage.IStorageFolder3
	{
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CreateFileAsync(string desiredName)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.CreateFileAsync(
								this, 
								desiredName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CreateFileAsync(
					string desiredName, 
					global::Windows.Storage.CreationCollisionOption options)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.CreateFileAsync(
								this, 
								desiredName, 
								options
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> CreateFolderAsync(string desiredName)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.CreateFolderAsync(
								this, 
								desiredName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> CreateFolderAsync(
					string desiredName, 
					global::Windows.Storage.CreationCollisionOption options)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.CreateFolderAsync(
								this, 
								desiredName, 
								options
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> GetFileAsync(string name)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.GetFileAsync(
								this, 
								name
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> GetFolderAsync(string name)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.GetFolderAsync(
								this, 
								name
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.IStorageItem> GetItemAsync(string name)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.IStorageItem> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.GetItemAsync(
								this, 
								name
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFile>> GetFilesAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFile>> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.GetFilesAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFolder>> GetFoldersAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFolder>> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.GetFoldersAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.IStorageItem>> GetItemsAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.IStorageItem>> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.GetItemsAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Path")]
		public string get_Path()
		{
			string __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.get_Path(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		public string get_DisplayName()
		{
			string __retVal = global::Windows.Storage.IStorageItemProperties__Impl.Stubs.get_DisplayName(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public StorageFolder(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FileIO : global::System.__ComObject
	{
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer> ReadBufferAsync(global::Windows.Storage.IStorageFile file)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer> retval;
			retval = __Factory_Windows_Storage__IFileIOStatics_ReadBufferAsync(
								"Windows.Storage.FileIO", 
								file
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer> __Factory_Windows_Storage__IFileIOStatics_ReadBufferAsync(
					string typeName, 
					global::Windows.Storage.IStorageFile file)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer> __pRetVal;
			__pRetVal = global::Windows.Storage.IFileIOStatics__Impl.Stubs.ReadBufferAsync(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Storage.IFileIOStatics).TypeHandle
												), 
								file
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public FileIO(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageItem
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Path")]
		string get_Path();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFile : global::Windows.Storage.IStorageItem, global::Windows.Storage.Streams.IRandomAccessStreamReference, global::Windows.Storage.Streams.IInputStreamReference
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FileType")]
		string get_FileType();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentType")]
		string get_ContentType();

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStream> OpenAsync(global::Windows.Storage.FileAccessMode accessMode);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageStreamTransaction> OpenTransactedWriteAsync();

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(global::Windows.Storage.IStorageFolder destinationFolder);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName, 
					global::Windows.Storage.NameCollisionOption option);

		global::Windows.Foundation.IAsyncAction CopyAndReplaceAsync(global::Windows.Storage.IStorageFile fileToReplace);

		global::Windows.Foundation.IAsyncAction MoveAsync(global::Windows.Storage.IStorageFolder destinationFolder);

		global::Windows.Foundation.IAsyncAction MoveAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName);

		global::Windows.Foundation.IAsyncAction MoveAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName, 
					global::Windows.Storage.NameCollisionOption option);

		global::Windows.Foundation.IAsyncAction MoveAndReplaceAsync(global::Windows.Storage.IStorageFile fileToReplace);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageStreamTransaction : global::System.IDisposable
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFolder : global::Windows.Storage.IStorageItem
	{
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CreateFileAsync(string desiredName);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CreateFileAsync(
					string desiredName, 
					global::Windows.Storage.CreationCollisionOption options);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> CreateFolderAsync(string desiredName);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> CreateFolderAsync(
					string desiredName, 
					global::Windows.Storage.CreationCollisionOption options);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> GetFileAsync(string name);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> GetFolderAsync(string name);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.IStorageItem> GetItemAsync(string name);

		global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFile>> GetFilesAsync();

		global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFolder>> GetFoldersAsync();

		global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.IStorageItem>> GetItemsAsync();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageItemProperties
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		string get_DisplayName();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageItemProperties2 : global::Windows.Storage.IStorageItemProperties
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageItem2 : global::Windows.Storage.IStorageItem
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFolder2
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageItemPropertiesWithProvider : global::Windows.Storage.IStorageItemProperties
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFolder3
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFilePropertiesWithAvailability
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFile2
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFileIOStatics
	{
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer> ReadBufferAsync(global::Windows.Storage.IStorageFile file);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum FileAccessMode
	{
		Read = 0,
		ReadWrite = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CreationCollisionOption
	{
		GenerateUniqueName = 0,
		ReplaceExisting = 1,
		FailIfExists = 2,
		OpenIfExists = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum NameCollisionOption
	{
		GenerateUniqueName = 0,
		ReplaceExisting = 1,
		FailIfExists = 2,
	}
}

namespace Windows.Storage.Pickers
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.Pickers.IFileOpenPicker))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FileOpenPicker : global::System.__ComObject, global::Windows.Storage.Pickers.IFileOpenPicker
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public FileOpenPicker()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.Storage.Pickers.FileOpenPicker");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SuggestedStartLocation")]
		public void put_SuggestedStartLocation(global::Windows.Storage.Pickers.PickerLocationId value)
		{
			global::Windows.Storage.Pickers.IFileOpenPicker__Impl.Stubs.put_SuggestedStartLocation(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FileTypeFilter")]
		public global::System.Collections.Generic.IList<string> get_FileTypeFilter()
		{
			global::System.Collections.Generic.IList<string> __retVal = global::Windows.Storage.Pickers.IFileOpenPicker__Impl.Stubs.get_FileTypeFilter(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> PickSingleFileAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.Pickers.IFileOpenPicker__Impl.Stubs.PickSingleFileAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public FileOpenPicker(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFileOpenPicker
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SuggestedStartLocation")]
		void put_SuggestedStartLocation(global::Windows.Storage.Pickers.PickerLocationId value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FileTypeFilter")]
		global::System.Collections.Generic.IList<string> get_FileTypeFilter();

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> PickSingleFileAsync();
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum PickerLocationId
	{
		DocumentsLibrary = 0,
		ComputerFolder = 1,
		Desktop = 2,
		Downloads = 3,
		HomeGroup = 4,
		MusicLibrary = 5,
		PicturesLibrary = 6,
		VideosLibrary = 7,
		Objects3D = 8,
		Unspecified = 9,
	}
}

namespace Windows.Storage.Search
{
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFolderQueryOperations
	{
	}
}

namespace Windows.Storage.Streams
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.Streams.IDataReader))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.IDisposable))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DataReader : global::System.__ComObject, global::Windows.Storage.Streams.IDataReader, global::System.IDisposable
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UnicodeEncoding")]
		public void put_UnicodeEncoding(global::Windows.Storage.Streams.UnicodeEncoding value)
		{
			global::Windows.Storage.Streams.IDataReader__Impl.Stubs.put_UnicodeEncoding(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public string ReadString(uint codeUnitCount)
		{
			string __retVal = global::Windows.Storage.Streams.IDataReader__Impl.Stubs.ReadString(
								this, 
								codeUnitCount
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public static global::Windows.Storage.Streams.DataReader FromBuffer(global::Windows.Storage.Streams.IBuffer buffer)
		{
			global::Windows.Storage.Streams.DataReader retval;
			retval = __Factory_Windows_Storage_Streams__IDataReaderStatics_FromBuffer(
								"Windows.Storage.Streams.DataReader", 
								buffer
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.Storage.Streams.DataReader __Factory_Windows_Storage_Streams__IDataReaderStatics_FromBuffer(
					string typeName, 
					global::Windows.Storage.Streams.IBuffer buffer)
		{
			global::Windows.Storage.Streams.DataReader __pRetVal;
			__pRetVal = global::Windows.Storage.Streams.IDataReaderStatics__Impl.Stubs.FromBuffer(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Storage.Streams.IDataReaderStatics).TypeHandle
												), 
								buffer
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public DataReader(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRandomAccessStream : global::System.IDisposable, global::Windows.Storage.Streams.IInputStream, global::Windows.Storage.Streams.IOutputStream
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Size")]
		ulong get_Size();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Size")]
		void put_Size(ulong value);

		global::Windows.Storage.Streams.IInputStream GetInputStreamAt(ulong position);

		global::Windows.Storage.Streams.IOutputStream GetOutputStreamAt(ulong position);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Position")]
		ulong get_Position();

		void Seek(ulong position);

		global::Windows.Storage.Streams.IRandomAccessStream CloneStream();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanRead")]
		bool get_CanRead();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanWrite")]
		bool get_CanWrite();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInputStream : global::System.IDisposable
	{
		global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IBuffer, uint> ReadAsync(
					global::Windows.Storage.Streams.IBuffer buffer, 
					uint count, 
					global::Windows.Storage.Streams.InputStreamOptions options);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBuffer
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Capacity")]
		uint get_Capacity();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Length")]
		uint get_Length();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Length")]
		void put_Length(uint value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IOutputStream : global::System.IDisposable
	{
		global::Windows.Foundation.IAsyncOperationWithProgress<uint, uint> WriteAsync(global::Windows.Storage.Streams.IBuffer buffer);

		global::Windows.Foundation.IAsyncOperation<bool> FlushAsync();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRandomAccessStreamReference
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInputStreamReference
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataReaderStatics
	{
		global::Windows.Storage.Streams.DataReader FromBuffer(global::Windows.Storage.Streams.IBuffer buffer);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataReader
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UnicodeEncoding")]
		void put_UnicodeEncoding(global::Windows.Storage.Streams.UnicodeEncoding value);

		string ReadString(uint codeUnitCount);
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum InputStreamOptions : uint
	{
		None = 0x0u,
		Partial = 0x1u,
		ReadAhead = 0x2u,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum UnicodeEncoding
	{
		Utf8 = 0,
		Utf16LE = 1,
		Utf16BE = 2,
	}
}

namespace Windows.System
{
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Launcher : global::System.__ComObject
	{
		public static global::Windows.Foundation.IAsyncOperation<bool> LaunchUriAsync(global::System.Uri uri)
		{
			global::Windows.Foundation.IAsyncOperation<bool> retval;
			retval = __Factory_Windows_System__ILauncherStatics_LaunchUriAsync(
								"Windows.System.Launcher", 
								uri
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.Foundation.IAsyncOperation<bool> __Factory_Windows_System__ILauncherStatics_LaunchUriAsync(
					string typeName, 
					global::System.Uri uri)
		{
			global::Windows.Foundation.IAsyncOperation<bool> __pRetVal;
			__pRetVal = global::Windows.System.ILauncherStatics__Impl.Stubs.LaunchUriAsync(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.System.ILauncherStatics).TypeHandle
												), 
								uri
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public Launcher(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILauncherStatics
	{
		global::Windows.Foundation.IAsyncOperation<bool> LaunchUriAsync(global::System.Uri uri);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum VirtualKey
	{
		None = 0,
		LeftButton = 1,
		RightButton = 2,
		Cancel = 3,
		MiddleButton = 4,
		XButton1 = 5,
		XButton2 = 6,
		Back = 8,
		Tab = 9,
		Clear = 12,
		Enter = 13,
		Shift = 16,
		Control = 17,
		Menu = 18,
		Pause = 19,
		CapitalLock = 20,
		Kana = 21,
		Hangul = 21,
		ImeOn = 22,
		Junja = 23,
		Final = 24,
		Hanja = 25,
		Kanji = 25,
		ImeOff = 26,
		Escape = 27,
		Convert = 28,
		NonConvert = 29,
		Accept = 30,
		ModeChange = 31,
		Space = 32,
		PageUp = 33,
		PageDown = 34,
		End = 35,
		Home = 36,
		Left = 37,
		Up = 38,
		Right = 39,
		Down = 40,
		Select = 41,
		Print = 42,
		Execute = 43,
		Snapshot = 44,
		Insert = 45,
		Delete = 46,
		Help = 47,
		Number0 = 48,
		Number1 = 49,
		Number2 = 50,
		Number3 = 51,
		Number4 = 52,
		Number5 = 53,
		Number6 = 54,
		Number7 = 55,
		Number8 = 56,
		Number9 = 57,
		A = 65,
		B = 66,
		C = 67,
		D = 68,
		E = 69,
		F = 70,
		G = 71,
		H = 72,
		I = 73,
		J = 74,
		K = 75,
		L = 76,
		M = 77,
		N = 78,
		O = 79,
		P = 80,
		Q = 81,
		R = 82,
		S = 83,
		T = 84,
		U = 85,
		V = 86,
		W = 87,
		X = 88,
		Y = 89,
		Z = 90,
		LeftWindows = 91,
		RightWindows = 92,
		Application = 93,
		Sleep = 95,
		NumberPad0 = 96,
		NumberPad1 = 97,
		NumberPad2 = 98,
		NumberPad3 = 99,
		NumberPad4 = 100,
		NumberPad5 = 101,
		NumberPad6 = 102,
		NumberPad7 = 103,
		NumberPad8 = 104,
		NumberPad9 = 105,
		Multiply = 106,
		Add = 107,
		Separator = 108,
		Subtract = 109,
		Decimal = 110,
		Divide = 111,
		F1 = 112,
		F2 = 113,
		F3 = 114,
		F4 = 115,
		F5 = 116,
		F6 = 117,
		F7 = 118,
		F8 = 119,
		F9 = 120,
		F10 = 121,
		F11 = 122,
		F12 = 123,
		F13 = 124,
		F14 = 125,
		F15 = 126,
		F16 = 127,
		F17 = 128,
		F18 = 129,
		F19 = 130,
		F20 = 131,
		F21 = 132,
		F22 = 133,
		F23 = 134,
		F24 = 135,
		NavigationView = 136,
		NavigationMenu = 137,
		NavigationUp = 138,
		NavigationDown = 139,
		NavigationLeft = 140,
		NavigationRight = 141,
		NavigationAccept = 142,
		NavigationCancel = 143,
		NumberKeyLock = 144,
		Scroll = 145,
		LeftShift = 160,
		RightShift = 161,
		LeftControl = 162,
		RightControl = 163,
		LeftMenu = 164,
		RightMenu = 165,
		GoBack = 166,
		GoForward = 167,
		Refresh = 168,
		Stop = 169,
		Search = 170,
		Favorites = 171,
		GoHome = 172,
		GamepadA = 195,
		GamepadB = 196,
		GamepadX = 197,
		GamepadY = 198,
		GamepadRightShoulder = 199,
		GamepadLeftShoulder = 200,
		GamepadLeftTrigger = 201,
		GamepadRightTrigger = 202,
		GamepadDPadUp = 203,
		GamepadDPadDown = 204,
		GamepadDPadLeft = 205,
		GamepadDPadRight = 206,
		GamepadMenu = 207,
		GamepadView = 208,
		GamepadLeftThumbstickButton = 209,
		GamepadRightThumbstickButton = 210,
		GamepadLeftThumbstickUp = 211,
		GamepadLeftThumbstickDown = 212,
		GamepadLeftThumbstickRight = 213,
		GamepadLeftThumbstickLeft = 214,
		GamepadRightThumbstickUp = 215,
		GamepadRightThumbstickDown = 216,
		GamepadRightThumbstickRight = 217,
		GamepadRightThumbstickLeft = 218,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum VirtualKeyModifiers : uint
	{
		None = 0x0u,
		Control = 0x1u,
		Menu = 0x2u,
		Shift = 0x4u,
		Windows = 0x8u,
	}
}

namespace Windows.UI
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.IColors))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Colors : global::System.__ComObject, global::Windows.UI.IColors
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Transparent")]
		public static global::Windows.UI.Color get_Transparent()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Transparent("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Transparent(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Transparent(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public Colors(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColorsStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Transparent")]
		global::Windows.UI.Color get_Transparent();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColors
	{
	}
}

namespace Windows.UI.Composition
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Composition.ICompositionObject))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class CompositionObject : global::System.__ComObject, global::Windows.UI.Composition.ICompositionObject, global::System.IDisposable, global::Windows.UI.Composition.IAnimationObject
	{
		public virtual void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		public CompositionObject(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Composition.IAnimationPropertyInfo))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AnimationPropertyInfo : global::Windows.UI.Composition.CompositionObject, global::Windows.UI.Composition.IAnimationPropertyInfo
	{
		public AnimationPropertyInfo(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Composition.ICompositor))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(131072)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Compositor : global::System.__ComObject, global::Windows.UI.Composition.ICompositor, global::System.IDisposable
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		public Compositor(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Composition.IVisual))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Visual : global::Windows.UI.Composition.CompositionObject, global::Windows.UI.Composition.IVisual
	{
		public Visual(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Composition.ICompositionBrush))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class CompositionBrush : global::Windows.UI.Composition.CompositionObject, global::Windows.UI.Composition.ICompositionBrush
	{
		public CompositionBrush(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICompositionObject
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimationObject
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimationPropertyInfo
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVisualElement
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICompositor
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVisual
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICompositionBrush
	{
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CompositionColorSpace
	{
		Auto = 0,
		Hsl = 1,
		Rgb = 2,
		HslLinear = 3,
		RgbLinear = 4,
	}
}

namespace Windows.UI.Core
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.ICoreWindow))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CoreWindow : global::System.__ComObject, global::Windows.UI.Core.ICoreWindow
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Dispatcher")]
		public global::Windows.UI.Core.CoreDispatcher get_Dispatcher()
		{
			global::Windows.UI.Core.CoreDispatcher __retVal = global::Windows.UI.Core.ICoreWindow__Impl.Stubs.get_Dispatcher(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public static global::Windows.UI.Core.CoreWindow GetForCurrentThread()
		{
			global::Windows.UI.Core.CoreWindow retval;
			retval = __Factory_Windows_UI_Core__ICoreWindowStatic_GetForCurrentThread("Windows.UI.Core.CoreWindow");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Core.CoreWindow __Factory_Windows_UI_Core__ICoreWindowStatic_GetForCurrentThread(string typeName)
		{
			global::Windows.UI.Core.CoreWindow __pRetVal;
			__pRetVal = global::Windows.UI.Core.ICoreWindowStatic__Impl.Stubs.GetForCurrentThread(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.Core.ICoreWindowStatic).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public CoreWindow(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.ICoreDispatcher))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CoreDispatcher : global::System.__ComObject, global::Windows.UI.Core.ICoreDispatcher
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasThreadAccess")]
		public bool get_HasThreadAccess()
		{
			bool __retVal = global::Windows.UI.Core.ICoreDispatcher__Impl.Stubs.get_HasThreadAccess(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncAction RunAsync(
					global::Windows.UI.Core.CoreDispatcherPriority priority, 
					global::Windows.UI.Core.DispatchedHandler agileCallback)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.UI.Core.ICoreDispatcher__Impl.Stubs.RunAsync(
								this, 
								priority, 
								agileCallback
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreDispatcher(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.ICoreCursor))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CoreCursor : global::System.__ComObject, global::Windows.UI.Core.ICoreCursor
	{
		public CoreCursor(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.IWindowActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class WindowActivatedEventArgs : global::System.__ComObject, global::Windows.UI.Core.IWindowActivatedEventArgs, global::Windows.UI.Core.ICoreWindowEventArgs
	{
		public WindowActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.ICoreWindowEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CoreWindowEventArgs : global::System.__ComObject, global::Windows.UI.Core.ICoreWindowEventArgs
	{
		public CoreWindowEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.IWindowSizeChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class WindowSizeChangedEventArgs : global::System.__ComObject, global::Windows.UI.Core.IWindowSizeChangedEventArgs, global::Windows.UI.Core.ICoreWindowEventArgs
	{
		public WindowSizeChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.IVisibilityChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class VisibilityChangedEventArgs : global::System.__ComObject, global::Windows.UI.Core.IVisibilityChangedEventArgs, global::Windows.UI.Core.ICoreWindowEventArgs
	{
		public VisibilityChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreWindowStatic
	{
		global::Windows.UI.Core.CoreWindow GetForCurrentThread();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreWindow
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Dispatcher")]
		global::Windows.UI.Core.CoreDispatcher get_Dispatcher();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreDispatcher
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasThreadAccess")]
		bool get_HasThreadAccess();

		global::Windows.Foundation.IAsyncAction RunAsync(
					global::Windows.UI.Core.CoreDispatcherPriority priority, 
					global::Windows.UI.Core.DispatchedHandler agileCallback);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void DispatchedHandler();

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreCursor
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWindowActivatedEventArgs : global::Windows.UI.Core.ICoreWindowEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreWindowEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWindowSizeChangedEventArgs : global::Windows.UI.Core.ICoreWindowEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVisibilityChangedEventArgs : global::Windows.UI.Core.ICoreWindowEventArgs
	{
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CoreDispatcherPriority
	{
		Idle = -2,
		Low = -1,
		Normal = 0,
		High = 1,
	}
}

namespace Windows.UI.Text
{
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITextDocument
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CaretType")]
		global::Windows.UI.Text.CaretType get_CaretType();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CaretType")]
		void put_CaretType(global::Windows.UI.Text.CaretType value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DefaultTabStop")]
		float get_DefaultTabStop();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DefaultTabStop")]
		void put_DefaultTabStop(float value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Selection")]
		global::Windows.UI.Text.ITextSelection get_Selection();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UndoLimit")]
		uint get_UndoLimit();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UndoLimit")]
		void put_UndoLimit(uint value);

		bool CanCopy();

		bool CanPaste();

		bool CanRedo();

		bool CanUndo();

		int ApplyDisplayUpdates();

		int BatchDisplayUpdates();

		void BeginUndoGroup();

		void EndUndoGroup();

		global::Windows.UI.Text.ITextCharacterFormat GetDefaultCharacterFormat();

		global::Windows.UI.Text.ITextParagraphFormat GetDefaultParagraphFormat();

		global::Windows.UI.Text.ITextRange GetRange(
					int startPosition, 
					int endPosition);

		global::Windows.UI.Text.ITextRange GetRangeFromPoint(
					global::Windows.Foundation.Point point, 
					global::Windows.UI.Text.PointOptions options);

		void GetText(
					global::Windows.UI.Text.TextGetOptions options, 
					out string value);

		void LoadFromStream(
					global::Windows.UI.Text.TextSetOptions options, 
					global::Windows.Storage.Streams.IRandomAccessStream value);

		void Redo();

		void SaveToStream(
					global::Windows.UI.Text.TextGetOptions options, 
					global::Windows.Storage.Streams.IRandomAccessStream value);

		void SetDefaultCharacterFormat(global::Windows.UI.Text.ITextCharacterFormat value);

		void SetDefaultParagraphFormat(global::Windows.UI.Text.ITextParagraphFormat value);

		void SetText(
					global::Windows.UI.Text.TextSetOptions options, 
					string value);

		void Undo();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITextSelection : global::Windows.UI.Text.ITextRange
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Options")]
		global::Windows.UI.Text.SelectionOptions get_Options();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Options")]
		void put_Options(global::Windows.UI.Text.SelectionOptions value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Type")]
		global::Windows.UI.Text.SelectionType get_Type();

		int EndKey(
					global::Windows.UI.Text.TextRangeUnit unit, 
					bool extend);

		int HomeKey(
					global::Windows.UI.Text.TextRangeUnit unit, 
					bool extend);

		int MoveDown(
					global::Windows.UI.Text.TextRangeUnit unit, 
					int count, 
					bool extend);

		int MoveLeft(
					global::Windows.UI.Text.TextRangeUnit unit, 
					int count, 
					bool extend);

		int MoveRight(
					global::Windows.UI.Text.TextRangeUnit unit, 
					int count, 
					bool extend);

		int MoveUp(
					global::Windows.UI.Text.TextRangeUnit unit, 
					int count, 
					bool extend);

		void TypeText(string value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITextRange
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Character")]
		char get_Character();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Character")]
		void put_Character(char value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CharacterFormat")]
		global::Windows.UI.Text.ITextCharacterFormat get_CharacterFormat();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CharacterFormat")]
		void put_CharacterFormat(global::Windows.UI.Text.ITextCharacterFormat value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FormattedText")]
		global::Windows.UI.Text.ITextRange get_FormattedText();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FormattedText")]
		void put_FormattedText(global::Windows.UI.Text.ITextRange value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "EndPosition")]
		int get_EndPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "EndPosition")]
		void put_EndPosition(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Gravity")]
		global::Windows.UI.Text.RangeGravity get_Gravity();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Gravity")]
		void put_Gravity(global::Windows.UI.Text.RangeGravity value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Length")]
		int get_Length();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Link")]
		string get_Link();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Link")]
		void put_Link(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ParagraphFormat")]
		global::Windows.UI.Text.ITextParagraphFormat get_ParagraphFormat();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ParagraphFormat")]
		void put_ParagraphFormat(global::Windows.UI.Text.ITextParagraphFormat value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StartPosition")]
		int get_StartPosition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "StartPosition")]
		void put_StartPosition(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StoryLength")]
		int get_StoryLength();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Text")]
		string get_Text();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Text")]
		void put_Text(string value);

		bool CanPaste(int format);

		void ChangeCase(global::Windows.UI.Text.LetterCase value);

		void Collapse(bool value);

		void Copy();

		void Cut();

		int Delete(
					global::Windows.UI.Text.TextRangeUnit unit, 
					int count);

		int EndOf(
					global::Windows.UI.Text.TextRangeUnit unit, 
					bool extend);

		int Expand(global::Windows.UI.Text.TextRangeUnit unit);

		int FindText(
					string value, 
					int scanLength, 
					global::Windows.UI.Text.FindOptions options);

		void GetCharacterUtf32(
					out uint value, 
					int offset);

		global::Windows.UI.Text.ITextRange GetClone();

		int GetIndex(global::Windows.UI.Text.TextRangeUnit unit);

		void GetPoint(
					global::Windows.UI.Text.HorizontalCharacterAlignment horizontalAlign, 
					global::Windows.UI.Text.VerticalCharacterAlignment verticalAlign, 
					global::Windows.UI.Text.PointOptions options, 
					out global::Windows.Foundation.Point point);

		void GetRect(
					global::Windows.UI.Text.PointOptions options, 
					out global::Windows.Foundation.Rect rect, 
					out int hit);

		void GetText(
					global::Windows.UI.Text.TextGetOptions options, 
					out string value);

		void GetTextViaStream(
					global::Windows.UI.Text.TextGetOptions options, 
					global::Windows.Storage.Streams.IRandomAccessStream value);

		bool InRange(global::Windows.UI.Text.ITextRange range);

		void InsertImage(
					int width, 
					int height, 
					int ascent, 
					global::Windows.UI.Text.VerticalCharacterAlignment verticalAlign, 
					string alternateText, 
					global::Windows.Storage.Streams.IRandomAccessStream value);

		bool InStory(global::Windows.UI.Text.ITextRange range);

		bool IsEqual(global::Windows.UI.Text.ITextRange range);

		int Move(
					global::Windows.UI.Text.TextRangeUnit unit, 
					int count);

		int MoveEnd(
					global::Windows.UI.Text.TextRangeUnit unit, 
					int count);

		int MoveStart(
					global::Windows.UI.Text.TextRangeUnit unit, 
					int count);

		void Paste(int format);

		void ScrollIntoView(global::Windows.UI.Text.PointOptions value);

		void MatchSelection();

		void SetIndex(
					global::Windows.UI.Text.TextRangeUnit unit, 
					int index, 
					bool extend);

		void SetPoint(
					global::Windows.Foundation.Point point, 
					global::Windows.UI.Text.PointOptions options, 
					bool extend);

		void SetRange(
					int startPosition, 
					int endPosition);

		void SetText(
					global::Windows.UI.Text.TextSetOptions options, 
					string value);

		void SetTextViaStream(
					global::Windows.UI.Text.TextSetOptions options, 
					global::Windows.Storage.Streams.IRandomAccessStream value);

		int StartOf(
					global::Windows.UI.Text.TextRangeUnit unit, 
					bool extend);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITextCharacterFormat
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITextParagraphFormat
	{
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct FontWeight
	{
		public ushort Weight;
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CaretType
	{
		Normal = 0,
		Null = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum RangeGravity
	{
		UIBehavior = 0,
		Backward = 1,
		Forward = 2,
		Inward = 3,
		Outward = 4,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum LetterCase
	{
		Lower = 0,
		Upper = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum TextRangeUnit
	{
		Character = 0,
		Word = 1,
		Sentence = 2,
		Paragraph = 3,
		Line = 4,
		Story = 5,
		Screen = 6,
		Section = 7,
		Window = 8,
		CharacterFormat = 9,
		ParagraphFormat = 10,
		Object = 11,
		HardParagraph = 12,
		Cluster = 13,
		Bold = 14,
		Italic = 15,
		Underline = 16,
		Strikethrough = 17,
		ProtectedText = 18,
		Link = 19,
		SmallCaps = 20,
		AllCaps = 21,
		Hidden = 22,
		Outline = 23,
		Shadow = 24,
		Imprint = 25,
		Disabled = 26,
		Revised = 27,
		Subscript = 28,
		Superscript = 29,
		FontBound = 30,
		LinkProtected = 31,
		ContentLink = 32,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum FindOptions : uint
	{
		None = 0x0u,
		Word = 0x2u,
		Case = 0x4u,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum HorizontalCharacterAlignment
	{
		Left = 0,
		Right = 1,
		Center = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum VerticalCharacterAlignment
	{
		Top = 0,
		Baseline = 1,
		Bottom = 2,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum PointOptions : uint
	{
		None = 0x0u,
		IncludeInset = 0x1u,
		Start = 0x20u,
		ClientCoordinates = 0x100u,
		AllowOffClient = 0x200u,
		Transform = 0x400u,
		NoHorizontalScroll = 0x10000u,
		NoVerticalScroll = 0x40000u,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum TextGetOptions : uint
	{
		None = 0x0u,
		AdjustCrlf = 0x1u,
		UseCrlf = 0x2u,
		UseObjectText = 0x4u,
		AllowFinalEop = 0x8u,
		NoHidden = 0x20u,
		IncludeNumbering = 0x40u,
		FormatRtf = 0x2000u,
		UseLf = 0x1000000u,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum TextSetOptions : uint
	{
		None = 0x0u,
		UnicodeBidi = 0x1u,
		Unlink = 0x8u,
		Unhide = 0x10u,
		CheckTextLimit = 0x20u,
		FormatRtf = 0x2000u,
		ApplyRtfDocumentDefaults = 0x4000u,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum SelectionOptions : uint
	{
		StartActive = 0x1u,
		AtEndOfLine = 0x2u,
		Overtype = 0x4u,
		Active = 0x8u,
		Replace = 0x10u,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum SelectionType
	{
		None = 0,
		InsertionPoint = 1,
		Normal = 2,
		InlineShape = 7,
		Shape = 8,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum FontStyle
	{
		Normal = 0,
		Oblique = 1,
		Italic = 2,
	}
}

namespace Windows.UI.ViewManagement
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.ViewManagement.IApplicationView))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.ViewManagement.IApplicationView3))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ApplicationView : global::System.__ComObject, global::Windows.UI.ViewManagement.IApplicationView, global::Windows.UI.ViewManagement.IApplicationView3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TitleBar")]
		public global::Windows.UI.ViewManagement.ApplicationViewTitleBar get_TitleBar()
		{
			global::Windows.UI.ViewManagement.ApplicationViewTitleBar __retVal = global::Windows.UI.ViewManagement.IApplicationView3__Impl.Stubs.get_TitleBar(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public static global::Windows.UI.ViewManagement.ApplicationView GetForCurrentView()
		{
			global::Windows.UI.ViewManagement.ApplicationView retval;
			retval = __Factory_Windows_UI_ViewManagement__IApplicationViewStatics2_GetForCurrentView("Windows.UI.ViewManagement.ApplicationView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.ViewManagement.ApplicationView __Factory_Windows_UI_ViewManagement__IApplicationViewStatics2_GetForCurrentView(string typeName)
		{
			global::Windows.UI.ViewManagement.ApplicationView __pRetVal;
			__pRetVal = global::Windows.UI.ViewManagement.IApplicationViewStatics2__Impl.Stubs.GetForCurrentView(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.ViewManagement.IApplicationViewStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public ApplicationView(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.ViewManagement.IApplicationViewTitleBar))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ApplicationViewTitleBar : global::System.__ComObject, global::Windows.UI.ViewManagement.IApplicationViewTitleBar
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ButtonBackgroundColor")]
		public void put_ButtonBackgroundColor(global::System.Nullable<global::Windows.UI.Color> value)
		{
			global::Windows.UI.ViewManagement.IApplicationViewTitleBar__Impl.Stubs.put_ButtonBackgroundColor(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ButtonInactiveBackgroundColor")]
		public void put_ButtonInactiveBackgroundColor(global::System.Nullable<global::Windows.UI.Color> value)
		{
			global::Windows.UI.ViewManagement.IApplicationViewTitleBar__Impl.Stubs.put_ButtonInactiveBackgroundColor(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ApplicationViewTitleBar(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationViewStatics2
	{
		global::Windows.UI.ViewManagement.ApplicationView GetForCurrentView();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationView
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationView3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TitleBar")]
		global::Windows.UI.ViewManagement.ApplicationViewTitleBar get_TitleBar();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationViewTitleBar
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ButtonBackgroundColor")]
		void put_ButtonBackgroundColor(global::System.Nullable<global::Windows.UI.Color> value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ButtonInactiveBackgroundColor")]
		void put_ButtonInactiveBackgroundColor(global::System.Nullable<global::Windows.UI.Color> value);
	}
}

namespace Windows.UI.Xaml
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IApplication))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IApplication2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IApplicationOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IApplicationOverrides2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Application : global::System.__ComObject, global::Windows.UI.Xaml.IApplication, global::Windows.UI.Xaml.IApplication2, global::Windows.UI.Xaml.IApplicationOverrides, global::Windows.UI.Xaml.IApplicationOverrides2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Application()
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml__IApplicationFactory_CreateInstance("Windows.UI.Xaml.Application");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml__IApplicationFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Application).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.IApplicationFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.IApplicationFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.IApplicationFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.IApplicationFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Resources")]
		public virtual global::Windows.UI.Xaml.ResourceDictionary get_Resources()
		{
			global::Windows.UI.Xaml.ResourceDictionary __retVal = global::Windows.UI.Xaml.IApplication__Impl.Stubs.get_Resources(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Resources")]
		public virtual void put_Resources(global::Windows.UI.Xaml.ResourceDictionary value)
		{
			global::Windows.UI.Xaml.IApplication__Impl.Stubs.put_Resources(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "UnhandledException")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_UnhandledException(global::Windows.UI.Xaml.UnhandledExceptionEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IApplication__Impl.Stubs.add_UnhandledException(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "UnhandledException")]
		public virtual void remove_UnhandledException(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IApplication__Impl.Stubs.remove_UnhandledException(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Suspending")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Suspending(global::Windows.UI.Xaml.SuspendingEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IApplication__Impl.Stubs.add_Suspending(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Suspending")]
		public virtual void remove_Suspending(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IApplication__Impl.Stubs.remove_Suspending(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Resuming")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Resuming(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IApplication__Impl.Stubs.add_Resuming(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Resuming")]
		public virtual void remove_Resuming(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IApplication__Impl.Stubs.remove_Resuming(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LeavingBackground")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LeavingBackground(global::Windows.UI.Xaml.LeavingBackgroundEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IApplication2__Impl.Stubs.add_LeavingBackground(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LeavingBackground")]
		public virtual void remove_LeavingBackground(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IApplication2__Impl.Stubs.remove_LeavingBackground(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "EnteredBackground")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_EnteredBackground(global::Windows.UI.Xaml.EnteredBackgroundEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IApplication2__Impl.Stubs.add_EnteredBackground(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "EnteredBackground")]
		public virtual void remove_EnteredBackground(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IApplication2__Impl.Stubs.remove_EnteredBackground(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnActivated(global::Windows.ApplicationModel.Activation.IActivatedEventArgs args)
		{
			this.OnActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnActivated(global::Windows.ApplicationModel.Activation.IActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnLaunched(global::Windows.ApplicationModel.Activation.LaunchActivatedEventArgs args)
		{
			this.OnLaunched(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnLaunched(global::Windows.ApplicationModel.Activation.LaunchActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnLaunched(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnFileActivated(global::Windows.ApplicationModel.Activation.FileActivatedEventArgs args)
		{
			this.OnFileActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnFileActivated(global::Windows.ApplicationModel.Activation.FileActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnFileActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnSearchActivated(global::Windows.ApplicationModel.Activation.SearchActivatedEventArgs args)
		{
			this.OnSearchActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnSearchActivated(global::Windows.ApplicationModel.Activation.SearchActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnSearchActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnShareTargetActivated(global::Windows.ApplicationModel.Activation.ShareTargetActivatedEventArgs args)
		{
			this.OnShareTargetActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnShareTargetActivated(global::Windows.ApplicationModel.Activation.ShareTargetActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnShareTargetActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnFileOpenPickerActivated(global::Windows.ApplicationModel.Activation.FileOpenPickerActivatedEventArgs args)
		{
			this.OnFileOpenPickerActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnFileOpenPickerActivated(global::Windows.ApplicationModel.Activation.FileOpenPickerActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnFileOpenPickerActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnFileSavePickerActivated(global::Windows.ApplicationModel.Activation.FileSavePickerActivatedEventArgs args)
		{
			this.OnFileSavePickerActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnFileSavePickerActivated(global::Windows.ApplicationModel.Activation.FileSavePickerActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnFileSavePickerActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnCachedFileUpdaterActivated(global::Windows.ApplicationModel.Activation.CachedFileUpdaterActivatedEventArgs args)
		{
			this.OnCachedFileUpdaterActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnCachedFileUpdaterActivated(global::Windows.ApplicationModel.Activation.CachedFileUpdaterActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnCachedFileUpdaterActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnWindowCreated(global::Windows.UI.Xaml.WindowCreatedEventArgs args)
		{
			this.OnWindowCreated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnWindowCreated(global::Windows.UI.Xaml.WindowCreatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnWindowCreated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides2.OnBackgroundActivated(global::Windows.ApplicationModel.Activation.BackgroundActivatedEventArgs args)
		{
			this.OnBackgroundActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnBackgroundActivated(global::Windows.ApplicationModel.Activation.BackgroundActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides2__Impl.Stubs.OnBackgroundActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static void Start(global::Windows.UI.Xaml.ApplicationInitializationCallback callback)
		{
			__Factory_Windows_UI_Xaml__IApplicationStatics_Start(
								"Windows.UI.Xaml.Application", 
								callback
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_UI_Xaml__IApplicationStatics_Start(
					string typeName, 
					global::Windows.UI.Xaml.ApplicationInitializationCallback callback)
		{
			global::Windows.UI.Xaml.IApplicationStatics__Impl.Stubs.Start(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.IApplicationStatics).TypeHandle
												), 
								callback
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static void LoadComponent(
					object component, 
					global::System.Uri resourceLocator, 
					global::Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation componentResourceLocation)
		{
			__Factory_Windows_UI_Xaml__IApplicationStatics_LoadComponent(
								"Windows.UI.Xaml.Application", 
								component, 
								resourceLocator, 
								componentResourceLocation
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_UI_Xaml__IApplicationStatics_LoadComponent(
					string typeName, 
					object component, 
					global::System.Uri resourceLocator, 
					global::Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation componentResourceLocation)
		{
			global::Windows.UI.Xaml.IApplicationStatics__Impl.Stubs.LoadComponent(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.IApplicationStatics).TypeHandle
												), 
								component, 
								resourceLocator, 
								componentResourceLocation
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Application(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IApplicationInitializationCallbackParams))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ApplicationInitializationCallbackParams : global::System.__ComObject, global::Windows.UI.Xaml.IApplicationInitializationCallbackParams
	{
		public ApplicationInitializationCallbackParams(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDependencyObject))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDependencyObject2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class DependencyObject : global::System.__ComObject, global::Windows.UI.Xaml.IDependencyObject, global::Windows.UI.Xaml.IDependencyObject2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		protected DependencyObject()
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml__IDependencyObjectFactory_CreateInstance("Windows.UI.Xaml.DependencyObject");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml__IDependencyObjectFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
			global::System.IntPtr __pRetVal_WithAggregation;
			__pRetVal_WithAggregation = global::Windows.UI.Xaml.IDependencyObjectFactory__Impl.Stubs.CreateInstance(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.IDependencyObjectFactory).TypeHandle
												), 
								outerInspectable, 
								out innerInspectable
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
			return innerInspectable;
		}

		public virtual long RegisterPropertyChangedCallback(
					global::Windows.UI.Xaml.DependencyProperty dp, 
					global::Windows.UI.Xaml.DependencyPropertyChangedCallback callback)
		{
			long __retVal = global::Windows.UI.Xaml.IDependencyObject2__Impl.Stubs.RegisterPropertyChangedCallback(
								this, 
								dp, 
								callback
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual void UnregisterPropertyChangedCallback(
					global::Windows.UI.Xaml.DependencyProperty dp, 
					long token)
		{
			global::Windows.UI.Xaml.IDependencyObject2__Impl.Stubs.UnregisterPropertyChangedCallback(
								this, 
								dp, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public DependencyObject(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDependencyProperty))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DependencyProperty : global::System.__ComObject, global::Windows.UI.Xaml.IDependencyProperty
	{
		public DependencyProperty(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IResourceDictionary))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IDictionary<object, object>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.ICollection<object>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>>))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ResourceDictionary : global::Windows.UI.Xaml.DependencyObject, global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<object, object>>, global::System.Collections.Generic.IDictionary<object, object>, global::Windows.UI.Xaml.IResourceDictionary, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>>
	{
		int global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<object, object>>.Count
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Count(((global::System.Collections.Generic.IDictionary<object, object>)this));
			}
		}

		bool global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<object, object>>.IsReadOnly
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.IsReadOnly(((global::System.Collections.Generic.IDictionary<object, object>)this));
			}
		}

		void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<object, object>>.Add(global::System.Collections.Generic.KeyValuePair<object, object> item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Add(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<object, object>>.Clear()
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Clear(((global::System.Collections.Generic.IDictionary<object, object>)this));
		}

		bool global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<object, object>>.Contains(global::System.Collections.Generic.KeyValuePair<object, object> item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Contains(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<object, object>>.CopyTo(
					global::System.Collections.Generic.KeyValuePair<object, object>[] array, 
					int arrayindex)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.CopyTo(
								this, 
								array, 
								arrayindex
							);
		}

		bool global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<object, object>>.Remove(global::System.Collections.Generic.KeyValuePair<object, object> item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Remove(
								this, 
								item
							);
		}

		object global::System.Collections.Generic.IDictionary<object, object>.this[object index]
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Indexer_Get(
									((global::System.Collections.Generic.IDictionary<object, object>)this), 
									index
								);
			}
			set
			{
				global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Indexer_Set(
									this, 
									index, 
									value
								);
			}
		}

		global::System.Collections.Generic.ICollection<object> global::System.Collections.Generic.IDictionary<object, object>.Keys
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Keys(((global::System.Collections.Generic.IDictionary<object, object>)this));
			}
		}

		global::System.Collections.Generic.ICollection<object> global::System.Collections.Generic.IDictionary<object, object>.Values
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Values(((global::System.Collections.Generic.IDictionary<object, object>)this));
			}
		}

		void global::System.Collections.Generic.IDictionary<object, object>.Add(
					object key, 
					object value)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Add(
								this, 
								key, 
								value
							);
		}

		bool global::System.Collections.Generic.IDictionary<object, object>.ContainsKey(object key)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.ContainsKey(
								((global::System.Collections.Generic.IDictionary<object, object>)this), 
								key
							);
		}

		bool global::System.Collections.Generic.IDictionary<object, object>.Remove(object key)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Remove(
								((global::System.Collections.Generic.IDictionary<object, object>)this), 
								key
							);
		}

		bool global::System.Collections.Generic.IDictionary<object, object>.TryGetValue(
					object key, 
					out object value)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.TryGetValue(
								this, 
								key, 
								out value
							);
		}

		global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<object, object>> global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>>.GetEnumerator()
		{
			return (global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<object, object>>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>>).TypeHandle
							);
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ResourceDictionary() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml__IResourceDictionaryFactory_CreateInstance("Windows.UI.Xaml.ResourceDictionary");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml__IResourceDictionaryFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.ResourceDictionary).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.IResourceDictionaryFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.IResourceDictionaryFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.IResourceDictionaryFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.IResourceDictionaryFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MergedDictionaries")]
		public virtual global::System.Collections.Generic.IList<global::Windows.UI.Xaml.ResourceDictionary> get_MergedDictionaries()
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.ResourceDictionary> __retVal = global::Windows.UI.Xaml.IResourceDictionary__Impl.Stubs.get_MergedDictionaries(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ThemeDictionaries")]
		public virtual global::System.Collections.Generic.IDictionary<object, object> get_ThemeDictionaries()
		{
			global::System.Collections.Generic.IDictionary<object, object> __retVal = global::Windows.UI.Xaml.IResourceDictionary__Impl.Stubs.get_ThemeDictionaries(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public ResourceDictionary(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUnhandledExceptionEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class UnhandledExceptionEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IUnhandledExceptionEventArgs
	{
		public UnhandledExceptionEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IWindowCreatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class WindowCreatedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IWindowCreatedEventArgs
	{
		public WindowCreatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement4))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement5))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement7))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement8))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement9))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement10))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElementOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElementOverrides7))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElementOverrides8))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElementOverrides9))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class UIElement : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.IUIElement, global::Windows.UI.Xaml.IUIElement2, global::Windows.UI.Xaml.IUIElement3, global::Windows.UI.Xaml.IUIElement4, global::Windows.UI.Xaml.IUIElement5, global::Windows.UI.Xaml.IUIElement7, global::Windows.UI.Xaml.IUIElement8, global::Windows.UI.Xaml.IUIElement9, global::Windows.UI.Xaml.IUIElement10, global::Windows.UI.Xaml.IUIElementOverrides, global::Windows.UI.Xaml.IUIElementOverrides7, global::Windows.UI.Xaml.IUIElementOverrides8, global::Windows.UI.Xaml.IUIElementOverrides9, global::Windows.UI.Composition.IAnimationObject, global::Windows.UI.Composition.IVisualElement
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Clip")]
		public virtual void put_Clip(global::Windows.UI.Xaml.Media.RectangleGeometry value)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.put_Clip(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsHitTestVisible")]
		public virtual bool get_IsHitTestVisible()
		{
			bool __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.get_IsHitTestVisible(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsHitTestVisible")]
		public virtual void put_IsHitTestVisible(bool value)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.put_IsHitTestVisible(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Visibility")]
		public virtual global::Windows.UI.Xaml.Visibility get_Visibility()
		{
			global::Windows.UI.Xaml.Visibility __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.get_Visibility(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Visibility")]
		public virtual void put_Visibility(global::Windows.UI.Xaml.Visibility value)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.put_Visibility(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "KeyUp")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_KeyUp(global::Windows.UI.Xaml.Input.KeyEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_KeyUp(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "KeyUp")]
		public virtual void remove_KeyUp(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_KeyUp(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "KeyDown")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_KeyDown(global::Windows.UI.Xaml.Input.KeyEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_KeyDown(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "KeyDown")]
		public virtual void remove_KeyDown(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_KeyDown(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "GotFocus")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_GotFocus(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_GotFocus(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "GotFocus")]
		public virtual void remove_GotFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_GotFocus(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LostFocus")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LostFocus(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_LostFocus(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LostFocus")]
		public virtual void remove_LostFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_LostFocus(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragEnter")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragEnter(global::Windows.UI.Xaml.DragEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_DragEnter(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragEnter")]
		public virtual void remove_DragEnter(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_DragEnter(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragLeave")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragLeave(global::Windows.UI.Xaml.DragEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_DragLeave(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragLeave")]
		public virtual void remove_DragLeave(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_DragLeave(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragOver")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragOver(global::Windows.UI.Xaml.DragEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_DragOver(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragOver")]
		public virtual void remove_DragOver(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_DragOver(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Drop")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Drop(global::Windows.UI.Xaml.DragEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_Drop(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Drop")]
		public virtual void remove_Drop(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_Drop(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerPressed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerPressed(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerPressed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerPressed")]
		public virtual void remove_PointerPressed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerPressed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerMoved")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerMoved(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerMoved(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerMoved")]
		public virtual void remove_PointerMoved(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerMoved(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerReleased")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerReleased(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerReleased(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerReleased")]
		public virtual void remove_PointerReleased(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerReleased(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerEntered")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerEntered(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerEntered(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerEntered")]
		public virtual void remove_PointerEntered(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerEntered(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerExited")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerExited(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerExited(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerExited")]
		public virtual void remove_PointerExited(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerExited(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerCaptureLost")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerCaptureLost(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerCaptureLost(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerCaptureLost")]
		public virtual void remove_PointerCaptureLost(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerCaptureLost(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerCanceled")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerCanceled(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerCanceled(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerCanceled")]
		public virtual void remove_PointerCanceled(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerCanceled(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerWheelChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerWheelChanged(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerWheelChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerWheelChanged")]
		public virtual void remove_PointerWheelChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerWheelChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Tapped")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Tapped(global::Windows.UI.Xaml.Input.TappedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_Tapped(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Tapped")]
		public virtual void remove_Tapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_Tapped(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DoubleTapped")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DoubleTapped(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_DoubleTapped(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DoubleTapped")]
		public virtual void remove_DoubleTapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_DoubleTapped(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Holding")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Holding(global::Windows.UI.Xaml.Input.HoldingEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_Holding(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Holding")]
		public virtual void remove_Holding(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_Holding(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "RightTapped")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_RightTapped(global::Windows.UI.Xaml.Input.RightTappedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_RightTapped(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "RightTapped")]
		public virtual void remove_RightTapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_RightTapped(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationStarting")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationStarting(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_ManipulationStarting(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationStarting")]
		public virtual void remove_ManipulationStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_ManipulationStarting(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationInertiaStarting")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationInertiaStarting(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_ManipulationInertiaStarting(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationInertiaStarting")]
		public virtual void remove_ManipulationInertiaStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_ManipulationInertiaStarting(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationStarted")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationStarted(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_ManipulationStarted(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationStarted")]
		public virtual void remove_ManipulationStarted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_ManipulationStarted(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationDelta")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationDelta(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_ManipulationDelta(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationDelta")]
		public virtual void remove_ManipulationDelta(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_ManipulationDelta(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationCompleted")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationCompleted(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_ManipulationCompleted(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationCompleted")]
		public virtual void remove_ManipulationCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_ManipulationCompleted(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragStarting")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragStarting(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement3__Impl.Stubs.add_DragStarting(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragStarting")]
		public virtual void remove_DragStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement3__Impl.Stubs.remove_DragStarting(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DropCompleted")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DropCompleted(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement3__Impl.Stubs.add_DropCompleted(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DropCompleted")]
		public virtual void remove_DropCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement3__Impl.Stubs.remove_DropCompleted(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContextFlyout")]
		public virtual global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase get_ContextFlyout()
		{
			global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase __retVal = global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.get_ContextFlyout(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContextFlyout")]
		public virtual void put_ContextFlyout(global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase value)
		{
			global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.put_ContextFlyout(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextRequested")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.ContextRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.add_ContextRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextRequested")]
		public virtual void remove_ContextRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.remove_ContextRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextCanceled")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextCanceled(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.RoutedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.add_ContextCanceled(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextCanceled")]
		public virtual void remove_ContextCanceled(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.remove_ContextCanceled(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyDisplayRequested")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyDisplayRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.add_AccessKeyDisplayRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyDisplayRequested")]
		public virtual void remove_AccessKeyDisplayRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.remove_AccessKeyDisplayRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyDisplayDismissed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyDisplayDismissed(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.add_AccessKeyDisplayDismissed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyDisplayDismissed")]
		public virtual void remove_AccessKeyDisplayDismissed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.remove_AccessKeyDisplayDismissed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyInvoked")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyInvoked(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyInvokedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.add_AccessKeyInvoked(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyInvoked")]
		public virtual void remove_AccessKeyInvoked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.remove_AccessKeyInvoked(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "GettingFocus")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_GettingFocus(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.GettingFocusEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.add_GettingFocus(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "GettingFocus")]
		public virtual void remove_GettingFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.remove_GettingFocus(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LosingFocus")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LosingFocus(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.LosingFocusEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.add_LosingFocus(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LosingFocus")]
		public virtual void remove_LosingFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.remove_LosingFocus(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NoFocusCandidateFound")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NoFocusCandidateFound(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.NoFocusCandidateFoundEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.add_NoFocusCandidateFound(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NoFocusCandidateFound")]
		public virtual void remove_NoFocusCandidateFound(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.remove_NoFocusCandidateFound(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "KeyboardAccelerators")]
		public virtual global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Input.KeyboardAccelerator> get_KeyboardAccelerators()
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Input.KeyboardAccelerator> __retVal = global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.get_KeyboardAccelerators(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CharacterReceived")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CharacterReceived(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.add_CharacterReceived(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CharacterReceived")]
		public virtual void remove_CharacterReceived(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.remove_CharacterReceived(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ProcessKeyboardAccelerators")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ProcessKeyboardAccelerators(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.add_ProcessKeyboardAccelerators(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ProcessKeyboardAccelerators")]
		public virtual void remove_ProcessKeyboardAccelerators(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.remove_ProcessKeyboardAccelerators(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PreviewKeyDown")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PreviewKeyDown(global::Windows.UI.Xaml.Input.KeyEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.add_PreviewKeyDown(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PreviewKeyDown")]
		public virtual void remove_PreviewKeyDown(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.remove_PreviewKeyDown(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PreviewKeyUp")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PreviewKeyUp(global::Windows.UI.Xaml.Input.KeyEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.add_PreviewKeyUp(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PreviewKeyUp")]
		public virtual void remove_PreviewKeyUp(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.remove_PreviewKeyUp(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "BringIntoViewRequested")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_BringIntoViewRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.BringIntoViewRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement8__Impl.Stubs.add_BringIntoViewRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "BringIntoViewRequested")]
		public virtual void remove_BringIntoViewRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement8__Impl.Stubs.remove_BringIntoViewRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Translation")]
		public virtual global::System.Numerics.Vector3 get_Translation()
		{
			global::System.Numerics.Vector3 __retVal = global::Windows.UI.Xaml.IUIElement9__Impl.Stubs.get_Translation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Translation")]
		public virtual void put_Translation(global::System.Numerics.Vector3 value)
		{
			global::Windows.UI.Xaml.IUIElement9__Impl.Stubs.put_Translation(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Shadow")]
		public virtual global::Windows.UI.Xaml.Media.Shadow get_Shadow()
		{
			global::Windows.UI.Xaml.Media.Shadow __retVal = global::Windows.UI.Xaml.IUIElement10__Impl.Stubs.get_Shadow(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Shadow")]
		public virtual void put_Shadow(global::Windows.UI.Xaml.Media.Shadow value)
		{
			global::Windows.UI.Xaml.IUIElement10__Impl.Stubs.put_Shadow(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer global::Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal_1 = this.OnCreateAutomationPeer();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal = global::Windows.UI.Xaml.IUIElementOverrides__Impl.Stubs.OnCreateAutomationPeer(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.IUIElementOverrides.OnDisconnectVisualChildren()
		{
			this.OnDisconnectVisualChildren();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnDisconnectVisualChildren()
		{
			global::Windows.UI.Xaml.IUIElementOverrides__Impl.Stubs.OnDisconnectVisualChildren(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> global::Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting(
					global::Windows.Foundation.Point point, 
					global::Windows.Foundation.Rect boundingRect)
		{
			global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> __retVal_1 = this.FindSubElementsForTouchTargeting(
								point, 
								boundingRect
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> FindSubElementsForTouchTargeting(
					global::Windows.Foundation.Point point, 
					global::Windows.Foundation.Rect boundingRect)
		{
			global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> __retVal = global::Windows.UI.Xaml.IUIElementOverrides__Impl.Stubs.FindSubElementsForTouchTargeting(
								this, 
								point, 
								boundingRect
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.DependencyObject> global::Windows.UI.Xaml.IUIElementOverrides7.GetChildrenInTabFocusOrder()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.DependencyObject> __retVal_1 = this.GetChildrenInTabFocusOrder();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.DependencyObject> GetChildrenInTabFocusOrder()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.DependencyObject> __retVal = global::Windows.UI.Xaml.IUIElementOverrides7__Impl.Stubs.GetChildrenInTabFocusOrder(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.IUIElementOverrides7.OnProcessKeyboardAccelerators(global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs args)
		{
			this.OnProcessKeyboardAccelerators(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnProcessKeyboardAccelerators(global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs args)
		{
			global::Windows.UI.Xaml.IUIElementOverrides7__Impl.Stubs.OnProcessKeyboardAccelerators(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IUIElementOverrides8.OnKeyboardAcceleratorInvoked(global::Windows.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs args)
		{
			this.OnKeyboardAcceleratorInvoked(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnKeyboardAcceleratorInvoked(global::Windows.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs args)
		{
			global::Windows.UI.Xaml.IUIElementOverrides8__Impl.Stubs.OnKeyboardAcceleratorInvoked(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IUIElementOverrides8.OnBringIntoViewRequested(global::Windows.UI.Xaml.BringIntoViewRequestedEventArgs e)
		{
			this.OnBringIntoViewRequested(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnBringIntoViewRequested(global::Windows.UI.Xaml.BringIntoViewRequestedEventArgs e)
		{
			global::Windows.UI.Xaml.IUIElementOverrides8__Impl.Stubs.OnBringIntoViewRequested(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IUIElementOverrides9.PopulatePropertyInfoOverride(
					string propertyName, 
					global::Windows.UI.Composition.AnimationPropertyInfo animationPropertyInfo)
		{
			this.PopulatePropertyInfoOverride(
								propertyName, 
								animationPropertyInfo
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void PopulatePropertyInfoOverride(
					string propertyName, 
					global::Windows.UI.Composition.AnimationPropertyInfo animationPropertyInfo)
		{
			global::Windows.UI.Xaml.IUIElementOverrides9__Impl.Stubs.PopulatePropertyInfoOverride(
								this, 
								propertyName, 
								animationPropertyInfo
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public UIElement(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RoutedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IRoutedEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public RoutedEventArgs()
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml__IRoutedEventArgsFactory_CreateInstance("Windows.UI.Xaml.RoutedEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml__IRoutedEventArgsFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.RoutedEventArgs).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.IRoutedEventArgsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.IRoutedEventArgsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.IRoutedEventArgsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.IRoutedEventArgsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public RoutedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDragEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DragEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.IDragEventArgs
	{
		public DragEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDragStartingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DragStartingEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.IDragStartingEventArgs
	{
		public DragStartingEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDropCompletedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DropCompletedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.IDropCompletedEventArgs
	{
		public DropCompletedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElement))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElement2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElement3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElement4))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElement6))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElement7))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElementProtected7))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElementOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElementOverrides2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class FrameworkElement : global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.IFrameworkElement, global::Windows.UI.Xaml.IFrameworkElement2, global::Windows.UI.Xaml.IFrameworkElement3, global::Windows.UI.Xaml.IFrameworkElement4, global::Windows.UI.Xaml.IFrameworkElement6, global::Windows.UI.Xaml.IFrameworkElement7, global::Windows.UI.Xaml.IFrameworkElementProtected7, global::Windows.UI.Xaml.IFrameworkElementOverrides, global::Windows.UI.Xaml.IFrameworkElementOverrides2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		protected FrameworkElement() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml__IFrameworkElementFactory_CreateInstance("Windows.UI.Xaml.FrameworkElement");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml__IFrameworkElementFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
			global::System.IntPtr __pRetVal_WithAggregation;
			__pRetVal_WithAggregation = global::Windows.UI.Xaml.IFrameworkElementFactory__Impl.Stubs.CreateInstance(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.IFrameworkElementFactory).TypeHandle
												), 
								outerInspectable, 
								out innerInspectable
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
			return innerInspectable;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Resources")]
		public virtual global::Windows.UI.Xaml.ResourceDictionary get_Resources()
		{
			global::Windows.UI.Xaml.ResourceDictionary __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.get_Resources(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Resources")]
		public virtual void put_Resources(global::Windows.UI.Xaml.ResourceDictionary value)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.put_Resources(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActualWidth")]
		public virtual double get_ActualWidth()
		{
			double __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.get_ActualWidth(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActualHeight")]
		public virtual double get_ActualHeight()
		{
			double __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.get_ActualHeight(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Width")]
		public virtual double get_Width()
		{
			double __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.get_Width(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Width")]
		public virtual void put_Width(double value)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.put_Width(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Height")]
		public virtual double get_Height()
		{
			double __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.get_Height(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Height")]
		public virtual void put_Height(double value)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.put_Height(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinWidth")]
		public virtual double get_MinWidth()
		{
			double __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.get_MinWidth(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinWidth")]
		public virtual void put_MinWidth(double value)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.put_MinWidth(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxWidth")]
		public virtual double get_MaxWidth()
		{
			double __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.get_MaxWidth(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxWidth")]
		public virtual void put_MaxWidth(double value)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.put_MaxWidth(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalAlignment")]
		public virtual global::Windows.UI.Xaml.HorizontalAlignment get_HorizontalAlignment()
		{
			global::Windows.UI.Xaml.HorizontalAlignment __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.get_HorizontalAlignment(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalAlignment")]
		public virtual void put_HorizontalAlignment(global::Windows.UI.Xaml.HorizontalAlignment value)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.put_HorizontalAlignment(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalAlignment")]
		public virtual global::Windows.UI.Xaml.VerticalAlignment get_VerticalAlignment()
		{
			global::Windows.UI.Xaml.VerticalAlignment __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.get_VerticalAlignment(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalAlignment")]
		public virtual void put_VerticalAlignment(global::Windows.UI.Xaml.VerticalAlignment value)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.put_VerticalAlignment(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Margin")]
		public virtual global::Windows.UI.Xaml.Thickness get_Margin()
		{
			global::Windows.UI.Xaml.Thickness __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.get_Margin(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Margin")]
		public virtual void put_Margin(global::Windows.UI.Xaml.Thickness value)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.put_Margin(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Style")]
		public virtual global::Windows.UI.Xaml.Style get_Style()
		{
			global::Windows.UI.Xaml.Style __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.get_Style(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Style")]
		public virtual void put_Style(global::Windows.UI.Xaml.Style value)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.put_Style(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Loaded")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Loaded(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.add_Loaded(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Loaded")]
		public virtual void remove_Loaded(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.remove_Loaded(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Unloaded")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Unloaded(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.add_Unloaded(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Unloaded")]
		public virtual void remove_Unloaded(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.remove_Unloaded(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SizeChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SizeChanged(global::Windows.UI.Xaml.SizeChangedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.add_SizeChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SizeChanged")]
		public virtual void remove_SizeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.remove_SizeChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LayoutUpdated")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LayoutUpdated(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.add_LayoutUpdated(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LayoutUpdated")]
		public virtual void remove_LayoutUpdated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.remove_LayoutUpdated(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RequestedTheme")]
		public virtual global::Windows.UI.Xaml.ElementTheme get_RequestedTheme()
		{
			global::Windows.UI.Xaml.ElementTheme __retVal = global::Windows.UI.Xaml.IFrameworkElement2__Impl.Stubs.get_RequestedTheme(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "RequestedTheme")]
		public virtual void put_RequestedTheme(global::Windows.UI.Xaml.ElementTheme value)
		{
			global::Windows.UI.Xaml.IFrameworkElement2__Impl.Stubs.put_RequestedTheme(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DataContextChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DataContextChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement2__Impl.Stubs.add_DataContextChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DataContextChanged")]
		public virtual void remove_DataContextChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement2__Impl.Stubs.remove_DataContextChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Loading")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Loading(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement3__Impl.Stubs.add_Loading(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Loading")]
		public virtual void remove_Loading(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement3__Impl.Stubs.remove_Loading(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FocusVisualMargin")]
		public virtual global::Windows.UI.Xaml.Thickness get_FocusVisualMargin()
		{
			global::Windows.UI.Xaml.Thickness __retVal = global::Windows.UI.Xaml.IFrameworkElement4__Impl.Stubs.get_FocusVisualMargin(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FocusVisualMargin")]
		public virtual void put_FocusVisualMargin(global::Windows.UI.Xaml.Thickness value)
		{
			global::Windows.UI.Xaml.IFrameworkElement4__Impl.Stubs.put_FocusVisualMargin(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ActualThemeChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ActualThemeChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement6__Impl.Stubs.add_ActualThemeChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ActualThemeChanged")]
		public virtual void remove_ActualThemeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement6__Impl.Stubs.remove_ActualThemeChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "EffectiveViewportChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_EffectiveViewportChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.EffectiveViewportChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement7__Impl.Stubs.add_EffectiveViewportChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "EffectiveViewportChanged")]
		public virtual void remove_EffectiveViewportChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement7__Impl.Stubs.remove_EffectiveViewportChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IFrameworkElementProtected7.InvalidateViewport()
		{
			this.InvalidateViewport();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void InvalidateViewport()
		{
			global::Windows.UI.Xaml.IFrameworkElementProtected7__Impl.Stubs.InvalidateViewport(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		global::Windows.Foundation.Size global::Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride(global::Windows.Foundation.Size availableSize)
		{
			global::Windows.Foundation.Size __retVal_1 = this.MeasureOverride(availableSize);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.Foundation.Size MeasureOverride(global::Windows.Foundation.Size availableSize)
		{
			global::Windows.Foundation.Size __retVal = global::Windows.UI.Xaml.IFrameworkElementOverrides__Impl.Stubs.MeasureOverride(
								this, 
								availableSize
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.Foundation.Size global::Windows.UI.Xaml.IFrameworkElementOverrides.ArrangeOverride(global::Windows.Foundation.Size finalSize)
		{
			global::Windows.Foundation.Size __retVal_1 = this.ArrangeOverride(finalSize);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.Foundation.Size ArrangeOverride(global::Windows.Foundation.Size finalSize)
		{
			global::Windows.Foundation.Size __retVal = global::Windows.UI.Xaml.IFrameworkElementOverrides__Impl.Stubs.ArrangeOverride(
								this, 
								finalSize
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.IFrameworkElementOverrides.OnApplyTemplate()
		{
			this.OnApplyTemplate();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnApplyTemplate()
		{
			global::Windows.UI.Xaml.IFrameworkElementOverrides__Impl.Stubs.OnApplyTemplate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		bool global::Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore(
					string stateName, 
					bool useTransitions)
		{
			bool __retVal_1 = this.GoToElementStateCore(
								stateName, 
								useTransitions
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool GoToElementStateCore(
					string stateName, 
					bool useTransitions)
		{
			bool __retVal = global::Windows.UI.Xaml.IFrameworkElementOverrides2__Impl.Stubs.GoToElementStateCore(
								this, 
								stateName, 
								useTransitions
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public FrameworkElement(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IStyle))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Style : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.IStyle
	{
		public Style(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.ISizeChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SizeChangedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.ISizeChangedEventArgs
	{
		public SizeChangedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDataContextChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DataContextChangedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IDataContextChangedEventArgs
	{
		public DataContextChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IEffectiveViewportChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class EffectiveViewportChangedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IEffectiveViewportChangedEventArgs
	{
		public EffectiveViewportChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkTemplate))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class FrameworkTemplate : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.IFrameworkTemplate
	{
		public FrameworkTemplate(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDependencyPropertyChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DependencyPropertyChangedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IDependencyPropertyChangedEventArgs
	{
		public DependencyPropertyChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IBringIntoViewRequestedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class BringIntoViewRequestedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.IBringIntoViewRequestedEventArgs
	{
		public BringIntoViewRequestedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IExceptionRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ExceptionRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.IExceptionRoutedEventArgs
	{
		public ExceptionRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDataTemplate))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class DataTemplate : global::Windows.UI.Xaml.FrameworkTemplate, global::Windows.UI.Xaml.IDataTemplate
	{
		public DataTemplate(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.ISetterBase))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class SetterBase : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.ISetterBase
	{
		public SetterBase(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.ITargetPropertyPath))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TargetPropertyPath : global::System.__ComObject, global::Windows.UI.Xaml.ITargetPropertyPath
	{
		public TargetPropertyPath(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.ISetter))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.ISetter2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Setter : global::Windows.UI.Xaml.SetterBase, global::Windows.UI.Xaml.ISetter, global::Windows.UI.Xaml.ISetter2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Setter() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Setter");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Property")]
		public global::Windows.UI.Xaml.DependencyProperty get_Property()
		{
			global::Windows.UI.Xaml.DependencyProperty __retVal = global::Windows.UI.Xaml.ISetter__Impl.Stubs.get_Property(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Property")]
		public void put_Property(global::Windows.UI.Xaml.DependencyProperty value)
		{
			global::Windows.UI.Xaml.ISetter__Impl.Stubs.put_Property(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Value")]
		public object get_Value()
		{
			object __retVal = global::Windows.UI.Xaml.ISetter__Impl.Stubs.get_Value(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Value")]
		public void put_Value(object value)
		{
			global::Windows.UI.Xaml.ISetter__Impl.Stubs.put_Value(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Target")]
		public global::Windows.UI.Xaml.TargetPropertyPath get_Target()
		{
			global::Windows.UI.Xaml.TargetPropertyPath __retVal = global::Windows.UI.Xaml.ISetter2__Impl.Stubs.get_Target(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Target")]
		public void put_Target(global::Windows.UI.Xaml.TargetPropertyPath value)
		{
			global::Windows.UI.Xaml.ISetter2__Impl.Stubs.put_Target(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Setter(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IVisualStateGroup))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class VisualStateGroup : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.IVisualStateGroup
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public VisualStateGroup() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.VisualStateGroup");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "States")]
		public global::System.Collections.Generic.IList<global::Windows.UI.Xaml.VisualState> get_States()
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.VisualState> __retVal = global::Windows.UI.Xaml.IVisualStateGroup__Impl.Stubs.get_States(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CurrentStateChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CurrentStateChanged(global::Windows.UI.Xaml.VisualStateChangedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IVisualStateGroup__Impl.Stubs.add_CurrentStateChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CurrentStateChanged")]
		public void remove_CurrentStateChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IVisualStateGroup__Impl.Stubs.remove_CurrentStateChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CurrentStateChanging")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CurrentStateChanging(global::Windows.UI.Xaml.VisualStateChangedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IVisualStateGroup__Impl.Stubs.add_CurrentStateChanging(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CurrentStateChanging")]
		public void remove_CurrentStateChanging(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IVisualStateGroup__Impl.Stubs.remove_CurrentStateChanging(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public VisualStateGroup(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IVisualState))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IVisualState2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class VisualState : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.IVisualState, global::Windows.UI.Xaml.IVisualState2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public VisualState() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.VisualState");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Storyboard")]
		public global::Windows.UI.Xaml.Media.Animation.Storyboard get_Storyboard()
		{
			global::Windows.UI.Xaml.Media.Animation.Storyboard __retVal = global::Windows.UI.Xaml.IVisualState__Impl.Stubs.get_Storyboard(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Storyboard")]
		public void put_Storyboard(global::Windows.UI.Xaml.Media.Animation.Storyboard value)
		{
			global::Windows.UI.Xaml.IVisualState__Impl.Stubs.put_Storyboard(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Setters")]
		public global::Windows.UI.Xaml.SetterBaseCollection get_Setters()
		{
			global::Windows.UI.Xaml.SetterBaseCollection __retVal = global::Windows.UI.Xaml.IVisualState2__Impl.Stubs.get_Setters(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public VisualState(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.ISetterBaseCollection))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.SetterBase>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.SetterBase>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.SetterBase>))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SetterBaseCollection : global::System.__ComObject, global::Windows.UI.Xaml.ISetterBaseCollection, global::System.Collections.Generic.IList<global::Windows.UI.Xaml.SetterBase>, global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.SetterBase>, global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.SetterBase>
	{
		int global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.SetterBase>.Count
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Count(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.SetterBase>)this));
			}
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.SetterBase>.IsReadOnly
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.IsReadOnly(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.SetterBase>)this));
			}
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.SetterBase>.Add(global::Windows.UI.Xaml.SetterBase item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Add(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.SetterBase>.Clear()
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Clear(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.SetterBase>)this));
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.SetterBase>.Contains(global::Windows.UI.Xaml.SetterBase item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Contains(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.SetterBase>.CopyTo(
					global::Windows.UI.Xaml.SetterBase[] array, 
					int arrayindex)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.CopyTo(
								this, 
								array, 
								arrayindex
							);
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.SetterBase>.Remove(global::Windows.UI.Xaml.SetterBase item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Remove(
								this, 
								item
							);
		}

		global::Windows.UI.Xaml.SetterBase global::System.Collections.Generic.IList<global::Windows.UI.Xaml.SetterBase>.this[int index]
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Indexer_Get(
									((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.SetterBase>)this), 
									index
								);
			}
			set
			{
				global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Indexer_Set(
									this, 
									index, 
									value
								);
			}
		}

		int global::System.Collections.Generic.IList<global::Windows.UI.Xaml.SetterBase>.IndexOf(global::Windows.UI.Xaml.SetterBase item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.IndexOf(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.IList<global::Windows.UI.Xaml.SetterBase>.Insert(
					int index, 
					global::Windows.UI.Xaml.SetterBase item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Insert(
								this, 
								index, 
								item
							);
		}

		void global::System.Collections.Generic.IList<global::Windows.UI.Xaml.SetterBase>.RemoveAt(int index)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.RemoveAt(
								((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.SetterBase>)this), 
								index
							);
		}

		global::System.Collections.Generic.IEnumerator<global::Windows.UI.Xaml.SetterBase> global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.SetterBase>.GetEnumerator()
		{
			global::System.RuntimeTypeHandle dummySharedDynamicAdapter = typeof(global::System.Runtime.InteropServices.WindowsRuntime.IIterableSharedReferenceTypesDynamicAdapter<global::Windows.UI.Xaml.SetterBase>).TypeHandle;
			return (global::System.Collections.Generic.IEnumerator<global::Windows.UI.Xaml.SetterBase>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.SetterBase>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.SetterBase>).TypeHandle
							);
		}

		public SetterBaseCollection(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IVisualStateChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class VisualStateChangedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IVisualStateChangedEventArgs
	{
		public VisualStateChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IVisualStateManager))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class VisualStateManager : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.IVisualStateManager, global::Windows.UI.Xaml.IVisualStateManagerProtected, global::Windows.UI.Xaml.IVisualStateManagerOverrides
	{
		void global::Windows.UI.Xaml.IVisualStateManagerProtected.RaiseCurrentStateChanging(
					global::Windows.UI.Xaml.VisualStateGroup stateGroup, 
					global::Windows.UI.Xaml.VisualState oldState, 
					global::Windows.UI.Xaml.VisualState newState, 
					global::Windows.UI.Xaml.Controls.Control control)
		{
			this.RaiseCurrentStateChanging(
								stateGroup, 
								oldState, 
								newState, 
								control
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void RaiseCurrentStateChanging(
					global::Windows.UI.Xaml.VisualStateGroup stateGroup, 
					global::Windows.UI.Xaml.VisualState oldState, 
					global::Windows.UI.Xaml.VisualState newState, 
					global::Windows.UI.Xaml.Controls.Control control)
		{
			global::__Interop.McgHelpers.FailFastForReducedMethod();
		}

		void global::Windows.UI.Xaml.IVisualStateManagerProtected.RaiseCurrentStateChanged(
					global::Windows.UI.Xaml.VisualStateGroup stateGroup, 
					global::Windows.UI.Xaml.VisualState oldState, 
					global::Windows.UI.Xaml.VisualState newState, 
					global::Windows.UI.Xaml.Controls.Control control)
		{
			this.RaiseCurrentStateChanged(
								stateGroup, 
								oldState, 
								newState, 
								control
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void RaiseCurrentStateChanged(
					global::Windows.UI.Xaml.VisualStateGroup stateGroup, 
					global::Windows.UI.Xaml.VisualState oldState, 
					global::Windows.UI.Xaml.VisualState newState, 
					global::Windows.UI.Xaml.Controls.Control control)
		{
			global::__Interop.McgHelpers.FailFastForReducedMethod();
		}

		bool global::Windows.UI.Xaml.IVisualStateManagerOverrides.GoToStateCore(
					global::Windows.UI.Xaml.Controls.Control control, 
					global::Windows.UI.Xaml.FrameworkElement templateRoot, 
					string stateName, 
					global::Windows.UI.Xaml.VisualStateGroup group, 
					global::Windows.UI.Xaml.VisualState state, 
					bool useTransitions)
		{
			bool __retVal = this.GoToStateCore(
								control, 
								templateRoot, 
								stateName, 
								group, 
								state, 
								useTransitions
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		protected virtual bool GoToStateCore(
					global::Windows.UI.Xaml.Controls.Control control, 
					global::Windows.UI.Xaml.FrameworkElement templateRoot, 
					string stateName, 
					global::Windows.UI.Xaml.VisualStateGroup group, 
					global::Windows.UI.Xaml.VisualState state, 
					bool useTransitions)
		{
			global::__Interop.McgHelpers.FailFastForReducedMethod();
			return default(bool);
		}

		public static global::System.Collections.Generic.IList<global::Windows.UI.Xaml.VisualStateGroup> GetVisualStateGroups(global::Windows.UI.Xaml.FrameworkElement obj)
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.VisualStateGroup> retval;
			retval = __Factory_Windows_UI_Xaml__IVisualStateManagerStatics_GetVisualStateGroups(
								"Windows.UI.Xaml.VisualStateManager", 
								obj
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::System.Collections.Generic.IList<global::Windows.UI.Xaml.VisualStateGroup> __Factory_Windows_UI_Xaml__IVisualStateManagerStatics_GetVisualStateGroups(
					string typeName, 
					global::Windows.UI.Xaml.FrameworkElement obj)
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.VisualStateGroup> __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.IVisualStateManagerStatics__Impl.Stubs.GetVisualStateGroups(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.IVisualStateManagerStatics).TypeHandle
												), 
								obj
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public VisualStateManager(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IBrushTransition))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(458752)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class BrushTransition : global::System.__ComObject, global::Windows.UI.Xaml.IBrushTransition
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public BrushTransition()
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml__IBrushTransitionFactory_CreateInstance("Windows.UI.Xaml.BrushTransition");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml__IBrushTransitionFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.BrushTransition).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.IBrushTransitionFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.IBrushTransitionFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.IBrushTransitionFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.IBrushTransitionFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Duration")]
		public virtual global::System.TimeSpan get_Duration()
		{
			global::System.TimeSpan __retVal = global::Windows.UI.Xaml.IBrushTransition__Impl.Stubs.get_Duration(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Duration")]
		public virtual void put_Duration(global::System.TimeSpan value)
		{
			global::Windows.UI.Xaml.IBrushTransition__Impl.Stubs.put_Duration(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public BrushTransition(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IWindow))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IWindow2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Window : global::System.__ComObject, global::Windows.UI.Xaml.IWindow, global::Windows.UI.Xaml.IWindow2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		public global::Windows.UI.Xaml.UIElement get_Content()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Windows.UI.Xaml.IWindow__Impl.Stubs.get_Content(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		public void put_Content(global::Windows.UI.Xaml.UIElement value)
		{
			global::Windows.UI.Xaml.IWindow__Impl.Stubs.put_Content(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Activated")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Activated(global::Windows.UI.Xaml.WindowActivatedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IWindow__Impl.Stubs.add_Activated(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Activated")]
		public void remove_Activated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IWindow__Impl.Stubs.remove_Activated(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closed")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closed(global::Windows.UI.Xaml.WindowClosedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IWindow__Impl.Stubs.add_Closed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closed")]
		public void remove_Closed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IWindow__Impl.Stubs.remove_Closed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SizeChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SizeChanged(global::Windows.UI.Xaml.WindowSizeChangedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IWindow__Impl.Stubs.add_SizeChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SizeChanged")]
		public void remove_SizeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IWindow__Impl.Stubs.remove_SizeChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "VisibilityChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_VisibilityChanged(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IWindow__Impl.Stubs.add_VisibilityChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "VisibilityChanged")]
		public void remove_VisibilityChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IWindow__Impl.Stubs.remove_VisibilityChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void Activate()
		{
			global::Windows.UI.Xaml.IWindow__Impl.Stubs.Activate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void SetTitleBar(global::Windows.UI.Xaml.UIElement value)
		{
			global::Windows.UI.Xaml.IWindow2__Impl.Stubs.SetTitleBar(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		public static global::Windows.UI.Xaml.Window get_Current()
		{
			global::Windows.UI.Xaml.Window retval;
			retval = __Factory_Windows_UI_Xaml__IWindowStatics_get_Current("Windows.UI.Xaml.Window");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.Window __Factory_Windows_UI_Xaml__IWindowStatics_get_Current(string typeName)
		{
			global::Windows.UI.Xaml.Window __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.IWindowStatics__Impl.Stubs.get_Current(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.Xaml.IWindowStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public Window(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationStatics
	{
		void Start(global::Windows.UI.Xaml.ApplicationInitializationCallback callback);

		void LoadComponent(
					object component, 
					global::System.Uri resourceLocator, 
					global::Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation componentResourceLocation);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ApplicationInitializationCallback(global::Windows.UI.Xaml.ApplicationInitializationCallbackParams p);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationInitializationCallbackParams
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplication
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Resources")]
		global::Windows.UI.Xaml.ResourceDictionary get_Resources();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Resources")]
		void put_Resources(global::Windows.UI.Xaml.ResourceDictionary value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "UnhandledException")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_UnhandledException(global::Windows.UI.Xaml.UnhandledExceptionEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "UnhandledException")]
		void remove_UnhandledException(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Suspending")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Suspending(global::Windows.UI.Xaml.SuspendingEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Suspending")]
		void remove_Suspending(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Resuming")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Resuming(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Resuming")]
		void remove_Resuming(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDependencyObjectFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDependencyObject
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDependencyObject2
	{
		long RegisterPropertyChangedCallback(
					global::Windows.UI.Xaml.DependencyProperty dp, 
					global::Windows.UI.Xaml.DependencyPropertyChangedCallback callback);

		void UnregisterPropertyChangedCallback(
					global::Windows.UI.Xaml.DependencyProperty dp, 
					long token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDependencyProperty
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void DependencyPropertyChangedCallback(
				global::Windows.UI.Xaml.DependencyObject sender, 
				global::Windows.UI.Xaml.DependencyProperty dp);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceDictionaryFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceDictionary
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MergedDictionaries")]
		global::System.Collections.Generic.IList<global::Windows.UI.Xaml.ResourceDictionary> get_MergedDictionaries();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ThemeDictionaries")]
		global::System.Collections.Generic.IDictionary<object, object> get_ThemeDictionaries();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void UnhandledExceptionEventHandler(
				object sender, 
				global::Windows.UI.Xaml.UnhandledExceptionEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUnhandledExceptionEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void SuspendingEventHandler(
				object sender, 
				global::Windows.ApplicationModel.SuspendingEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplication2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LeavingBackground")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LeavingBackground(global::Windows.UI.Xaml.LeavingBackgroundEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LeavingBackground")]
		void remove_LeavingBackground(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "EnteredBackground")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_EnteredBackground(global::Windows.UI.Xaml.EnteredBackgroundEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "EnteredBackground")]
		void remove_EnteredBackground(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void LeavingBackgroundEventHandler(
				object sender, 
				global::Windows.ApplicationModel.LeavingBackgroundEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void EnteredBackgroundEventHandler(
				object sender, 
				global::Windows.ApplicationModel.EnteredBackgroundEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationOverrides
	{
		void OnActivated(global::Windows.ApplicationModel.Activation.IActivatedEventArgs args);

		void OnLaunched(global::Windows.ApplicationModel.Activation.LaunchActivatedEventArgs args);

		void OnFileActivated(global::Windows.ApplicationModel.Activation.FileActivatedEventArgs args);

		void OnSearchActivated(global::Windows.ApplicationModel.Activation.SearchActivatedEventArgs args);

		void OnShareTargetActivated(global::Windows.ApplicationModel.Activation.ShareTargetActivatedEventArgs args);

		void OnFileOpenPickerActivated(global::Windows.ApplicationModel.Activation.FileOpenPickerActivatedEventArgs args);

		void OnFileSavePickerActivated(global::Windows.ApplicationModel.Activation.FileSavePickerActivatedEventArgs args);

		void OnCachedFileUpdaterActivated(global::Windows.ApplicationModel.Activation.CachedFileUpdaterActivatedEventArgs args);

		void OnWindowCreated(global::Windows.UI.Xaml.WindowCreatedEventArgs args);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWindowCreatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationOverrides2
	{
		void OnBackgroundActivated(global::Windows.ApplicationModel.Activation.BackgroundActivatedEventArgs args);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Clip")]
		void put_Clip(global::Windows.UI.Xaml.Media.RectangleGeometry value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsHitTestVisible")]
		bool get_IsHitTestVisible();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsHitTestVisible")]
		void put_IsHitTestVisible(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Visibility")]
		global::Windows.UI.Xaml.Visibility get_Visibility();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Visibility")]
		void put_Visibility(global::Windows.UI.Xaml.Visibility value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "KeyUp")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_KeyUp(global::Windows.UI.Xaml.Input.KeyEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "KeyUp")]
		void remove_KeyUp(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "KeyDown")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_KeyDown(global::Windows.UI.Xaml.Input.KeyEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "KeyDown")]
		void remove_KeyDown(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "GotFocus")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_GotFocus(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "GotFocus")]
		void remove_GotFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LostFocus")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LostFocus(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LostFocus")]
		void remove_LostFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragEnter")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragEnter(global::Windows.UI.Xaml.DragEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragEnter")]
		void remove_DragEnter(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragLeave")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragLeave(global::Windows.UI.Xaml.DragEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragLeave")]
		void remove_DragLeave(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragOver")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragOver(global::Windows.UI.Xaml.DragEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragOver")]
		void remove_DragOver(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Drop")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Drop(global::Windows.UI.Xaml.DragEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Drop")]
		void remove_Drop(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerPressed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerPressed(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerPressed")]
		void remove_PointerPressed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerMoved")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerMoved(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerMoved")]
		void remove_PointerMoved(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerReleased")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerReleased(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerReleased")]
		void remove_PointerReleased(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerEntered")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerEntered(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerEntered")]
		void remove_PointerEntered(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerExited")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerExited(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerExited")]
		void remove_PointerExited(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerCaptureLost")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerCaptureLost(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerCaptureLost")]
		void remove_PointerCaptureLost(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerCanceled")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerCanceled(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerCanceled")]
		void remove_PointerCanceled(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerWheelChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerWheelChanged(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerWheelChanged")]
		void remove_PointerWheelChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Tapped")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Tapped(global::Windows.UI.Xaml.Input.TappedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Tapped")]
		void remove_Tapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DoubleTapped")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DoubleTapped(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DoubleTapped")]
		void remove_DoubleTapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Holding")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Holding(global::Windows.UI.Xaml.Input.HoldingEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Holding")]
		void remove_Holding(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "RightTapped")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_RightTapped(global::Windows.UI.Xaml.Input.RightTappedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "RightTapped")]
		void remove_RightTapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationStarting")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationStarting(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationStarting")]
		void remove_ManipulationStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationInertiaStarting")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationInertiaStarting(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationInertiaStarting")]
		void remove_ManipulationInertiaStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationStarted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationStarted(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationStarted")]
		void remove_ManipulationStarted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationDelta")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationDelta(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationDelta")]
		void remove_ManipulationDelta(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationCompleted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationCompleted(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationCompleted")]
		void remove_ManipulationCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRoutedEventArgsFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void RoutedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.RoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void DragEventHandler(
				object sender, 
				global::Windows.UI.Xaml.DragEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDragEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement2
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragStarting")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragStarting(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragStarting")]
		void remove_DragStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DropCompleted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DropCompleted(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DropCompleted")]
		void remove_DropCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDragStartingEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDropCompletedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement4
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContextFlyout")]
		global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase get_ContextFlyout();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContextFlyout")]
		void put_ContextFlyout(global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.ContextRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextRequested")]
		void remove_ContextRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextCanceled")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextCanceled(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.RoutedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextCanceled")]
		void remove_ContextCanceled(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyDisplayRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyDisplayRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyDisplayRequested")]
		void remove_AccessKeyDisplayRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyDisplayDismissed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyDisplayDismissed(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyDisplayDismissed")]
		void remove_AccessKeyDisplayDismissed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyInvoked")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyInvoked(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyInvokedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyInvoked")]
		void remove_AccessKeyInvoked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElementFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElement
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Resources")]
		global::Windows.UI.Xaml.ResourceDictionary get_Resources();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Resources")]
		void put_Resources(global::Windows.UI.Xaml.ResourceDictionary value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActualWidth")]
		double get_ActualWidth();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ActualHeight")]
		double get_ActualHeight();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Width")]
		double get_Width();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Width")]
		void put_Width(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Height")]
		double get_Height();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Height")]
		void put_Height(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinWidth")]
		double get_MinWidth();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinWidth")]
		void put_MinWidth(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxWidth")]
		double get_MaxWidth();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxWidth")]
		void put_MaxWidth(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalAlignment")]
		global::Windows.UI.Xaml.HorizontalAlignment get_HorizontalAlignment();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalAlignment")]
		void put_HorizontalAlignment(global::Windows.UI.Xaml.HorizontalAlignment value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalAlignment")]
		global::Windows.UI.Xaml.VerticalAlignment get_VerticalAlignment();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalAlignment")]
		void put_VerticalAlignment(global::Windows.UI.Xaml.VerticalAlignment value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Margin")]
		global::Windows.UI.Xaml.Thickness get_Margin();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Margin")]
		void put_Margin(global::Windows.UI.Xaml.Thickness value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Style")]
		global::Windows.UI.Xaml.Style get_Style();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Style")]
		void put_Style(global::Windows.UI.Xaml.Style value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Loaded")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Loaded(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Loaded")]
		void remove_Loaded(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Unloaded")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Unloaded(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Unloaded")]
		void remove_Unloaded(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SizeChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SizeChanged(global::Windows.UI.Xaml.SizeChangedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SizeChanged")]
		void remove_SizeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LayoutUpdated")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LayoutUpdated(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LayoutUpdated")]
		void remove_LayoutUpdated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStyle
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void SizeChangedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.SizeChangedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISizeChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElement2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RequestedTheme")]
		global::Windows.UI.Xaml.ElementTheme get_RequestedTheme();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "RequestedTheme")]
		void put_RequestedTheme(global::Windows.UI.Xaml.ElementTheme value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DataContextChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DataContextChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DataContextChanged")]
		void remove_DataContextChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataContextChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElement3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Loading")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Loading(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Loading")]
		void remove_Loading(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElement4
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FocusVisualMargin")]
		global::Windows.UI.Xaml.Thickness get_FocusVisualMargin();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FocusVisualMargin")]
		void put_FocusVisualMargin(global::Windows.UI.Xaml.Thickness value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElement6
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ActualThemeChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ActualThemeChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ActualThemeChanged")]
		void remove_ActualThemeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElement7
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "EffectiveViewportChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_EffectiveViewportChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.EffectiveViewportChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "EffectiveViewportChanged")]
		void remove_EffectiveViewportChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IEffectiveViewportChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElementProtected7
	{
		void InvalidateViewport();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElementOverrides
	{
		global::Windows.Foundation.Size MeasureOverride(global::Windows.Foundation.Size availableSize);

		global::Windows.Foundation.Size ArrangeOverride(global::Windows.Foundation.Size finalSize);

		void OnApplyTemplate();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElementOverrides2
	{
		bool GoToElementStateCore(
					string stateName, 
					bool useTransitions);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkTemplate
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void DependencyPropertyChangedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDependencyPropertyChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement5
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "GettingFocus")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_GettingFocus(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.GettingFocusEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "GettingFocus")]
		void remove_GettingFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LosingFocus")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LosingFocus(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.LosingFocusEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LosingFocus")]
		void remove_LosingFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NoFocusCandidateFound")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NoFocusCandidateFound(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.NoFocusCandidateFoundEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NoFocusCandidateFound")]
		void remove_NoFocusCandidateFound(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement7
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "KeyboardAccelerators")]
		global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Input.KeyboardAccelerator> get_KeyboardAccelerators();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CharacterReceived")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CharacterReceived(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CharacterReceived")]
		void remove_CharacterReceived(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ProcessKeyboardAccelerators")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ProcessKeyboardAccelerators(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ProcessKeyboardAccelerators")]
		void remove_ProcessKeyboardAccelerators(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PreviewKeyDown")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PreviewKeyDown(global::Windows.UI.Xaml.Input.KeyEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PreviewKeyDown")]
		void remove_PreviewKeyDown(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PreviewKeyUp")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PreviewKeyUp(global::Windows.UI.Xaml.Input.KeyEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PreviewKeyUp")]
		void remove_PreviewKeyUp(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement8
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "BringIntoViewRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_BringIntoViewRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.BringIntoViewRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "BringIntoViewRequested")]
		void remove_BringIntoViewRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBringIntoViewRequestedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement9
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Translation")]
		global::System.Numerics.Vector3 get_Translation();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Translation")]
		void put_Translation(global::System.Numerics.Vector3 value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement10
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Shadow")]
		global::Windows.UI.Xaml.Media.Shadow get_Shadow();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Shadow")]
		void put_Shadow(global::Windows.UI.Xaml.Media.Shadow value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElementOverrides
	{
		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer OnCreateAutomationPeer();

		void OnDisconnectVisualChildren();

		global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> FindSubElementsForTouchTargeting(
					global::Windows.Foundation.Point point, 
					global::Windows.Foundation.Rect boundingRect);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElementOverrides7
	{
		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.DependencyObject> GetChildrenInTabFocusOrder();

		void OnProcessKeyboardAccelerators(global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs args);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElementOverrides8
	{
		void OnKeyboardAcceleratorInvoked(global::Windows.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs args);

		void OnBringIntoViewRequested(global::Windows.UI.Xaml.BringIntoViewRequestedEventArgs e);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElementOverrides9
	{
		void PopulatePropertyInfoOverride(
					string propertyName, 
					global::Windows.UI.Composition.AnimationPropertyInfo animationPropertyInfo);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ExceptionRoutedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.ExceptionRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IExceptionRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataTemplate
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISetterBase
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITargetPropertyPath
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISetter
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Property")]
		global::Windows.UI.Xaml.DependencyProperty get_Property();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Property")]
		void put_Property(global::Windows.UI.Xaml.DependencyProperty value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Value")]
		object get_Value();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Value")]
		void put_Value(object value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISetter2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Target")]
		global::Windows.UI.Xaml.TargetPropertyPath get_Target();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Target")]
		void put_Target(global::Windows.UI.Xaml.TargetPropertyPath value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVisualStateGroup
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "States")]
		global::System.Collections.Generic.IList<global::Windows.UI.Xaml.VisualState> get_States();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CurrentStateChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CurrentStateChanged(global::Windows.UI.Xaml.VisualStateChangedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CurrentStateChanged")]
		void remove_CurrentStateChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CurrentStateChanging")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CurrentStateChanging(global::Windows.UI.Xaml.VisualStateChangedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CurrentStateChanging")]
		void remove_CurrentStateChanging(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVisualState
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Storyboard")]
		global::Windows.UI.Xaml.Media.Animation.Storyboard get_Storyboard();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Storyboard")]
		void put_Storyboard(global::Windows.UI.Xaml.Media.Animation.Storyboard value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVisualState2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Setters")]
		global::Windows.UI.Xaml.SetterBaseCollection get_Setters();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISetterBaseCollection
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void VisualStateChangedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.VisualStateChangedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVisualStateChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVisualStateManagerStatics
	{
		global::System.Collections.Generic.IList<global::Windows.UI.Xaml.VisualStateGroup> GetVisualStateGroups(global::Windows.UI.Xaml.FrameworkElement obj);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVisualStateManager
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVisualStateManagerProtected
	{
		void RaiseCurrentStateChanging(
					global::Windows.UI.Xaml.VisualStateGroup stateGroup, 
					global::Windows.UI.Xaml.VisualState oldState, 
					global::Windows.UI.Xaml.VisualState newState, 
					global::Windows.UI.Xaml.Controls.Control control);

		void RaiseCurrentStateChanged(
					global::Windows.UI.Xaml.VisualStateGroup stateGroup, 
					global::Windows.UI.Xaml.VisualState oldState, 
					global::Windows.UI.Xaml.VisualState newState, 
					global::Windows.UI.Xaml.Controls.Control control);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVisualStateManagerOverrides
	{
		bool GoToStateCore(
					global::Windows.UI.Xaml.Controls.Control control, 
					global::Windows.UI.Xaml.FrameworkElement templateRoot, 
					string stateName, 
					global::Windows.UI.Xaml.VisualStateGroup group, 
					global::Windows.UI.Xaml.VisualState state, 
					bool useTransitions);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBrushTransitionFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBrushTransition
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Duration")]
		global::System.TimeSpan get_Duration();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Duration")]
		void put_Duration(global::System.TimeSpan value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWindowStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		global::Windows.UI.Xaml.Window get_Current();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWindow
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		global::Windows.UI.Xaml.UIElement get_Content();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		void put_Content(global::Windows.UI.Xaml.UIElement value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Activated")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Activated(global::Windows.UI.Xaml.WindowActivatedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Activated")]
		void remove_Activated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closed(global::Windows.UI.Xaml.WindowClosedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closed")]
		void remove_Closed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SizeChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SizeChanged(global::Windows.UI.Xaml.WindowSizeChangedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SizeChanged")]
		void remove_SizeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "VisibilityChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_VisibilityChanged(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "VisibilityChanged")]
		void remove_VisibilityChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		void Activate();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void WindowActivatedEventHandler(
				object sender, 
				global::Windows.UI.Core.WindowActivatedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void WindowClosedEventHandler(
				object sender, 
				global::Windows.UI.Core.CoreWindowEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void WindowSizeChangedEventHandler(
				object sender, 
				global::Windows.UI.Core.WindowSizeChangedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void WindowVisibilityChangedEventHandler(
				object sender, 
				global::Windows.UI.Core.VisibilityChangedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWindow2
	{
		void SetTitleBar(global::Windows.UI.Xaml.UIElement value);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum Visibility
	{
		Visible = 0,
		Collapsed = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum HorizontalAlignment
	{
		Left = 0,
		Center = 1,
		Right = 2,
		Stretch = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum VerticalAlignment
	{
		Top = 0,
		Center = 1,
		Bottom = 2,
		Stretch = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ElementTheme
	{
		Default = 0,
		Light = 1,
		Dark = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum TextWrapping
	{
		NoWrap = 1,
		Wrap = 2,
		WrapWholeWords = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum TextAlignment
	{
		Center = 0,
		Left = 1,
		Start = 1,
		Right = 2,
		End = 2,
		Justify = 3,
		DetectFromContent = 4,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum TextReadingOrder
	{
		Default = 0,
		UseFlowDirection = 0,
		DetectFromContent = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ApplicationTheme
	{
		Light = 0,
		Dark = 1,
	}
}

namespace Windows.UI.Xaml.Automation
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.IAutomationProperties))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AutomationProperties : global::System.__ComObject, global::Windows.UI.Xaml.Automation.IAutomationProperties
	{
		public static global::Windows.UI.Xaml.Automation.Peers.AccessibilityView GetAccessibilityView(global::Windows.UI.Xaml.DependencyObject element)
		{
			global::Windows.UI.Xaml.Automation.Peers.AccessibilityView retval;
			retval = __Factory_Windows_UI_Xaml_Automation__IAutomationPropertiesStatics2_GetAccessibilityView(
								"Windows.UI.Xaml.Automation.AutomationProperties", 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.Automation.Peers.AccessibilityView __Factory_Windows_UI_Xaml_Automation__IAutomationPropertiesStatics2_GetAccessibilityView(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject element)
		{
			global::Windows.UI.Xaml.Automation.Peers.AccessibilityView __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.Automation.IAutomationPropertiesStatics2__Impl.Stubs.GetAccessibilityView(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Automation.IAutomationPropertiesStatics2).TypeHandle
												), 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static void SetAccessibilityView(
					global::Windows.UI.Xaml.DependencyObject element, 
					global::Windows.UI.Xaml.Automation.Peers.AccessibilityView value)
		{
			__Factory_Windows_UI_Xaml_Automation__IAutomationPropertiesStatics2_SetAccessibilityView(
								"Windows.UI.Xaml.Automation.AutomationProperties", 
								element, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_UI_Xaml_Automation__IAutomationPropertiesStatics2_SetAccessibilityView(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject element, 
					global::Windows.UI.Xaml.Automation.Peers.AccessibilityView value)
		{
			global::Windows.UI.Xaml.Automation.IAutomationPropertiesStatics2__Impl.Stubs.SetAccessibilityView(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Automation.IAutomationPropertiesStatics2).TypeHandle
												), 
								element, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public AutomationProperties(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPropertiesStatics2
	{
		global::Windows.UI.Xaml.Automation.Peers.AccessibilityView GetAccessibilityView(global::Windows.UI.Xaml.DependencyObject element);

		void SetAccessibilityView(
					global::Windows.UI.Xaml.DependencyObject element, 
					global::Windows.UI.Xaml.Automation.Peers.AccessibilityView value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationProperties
	{
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ExpandCollapseState
	{
		Collapsed = 0,
		Expanded = 1,
		PartiallyExpanded = 2,
		LeafNode = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ToggleState
	{
		Off = 0,
		On = 1,
		Indeterminate = 2,
	}
}

namespace Windows.UI.Xaml.Automation.Peers
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides6))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides8))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides9))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class AutomationPeer : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer5, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer6, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer7, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer8, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer9, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides6, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides8, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides9
	{
		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected.PeerFromProvider(global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple provider)
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal_1 = this.PeerFromProvider(provider);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationPeer PeerFromProvider(global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple provider)
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Stubs.PeerFromProvider(
								this, 
								provider
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected.ProviderFromPeer(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer peer)
		{
			global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple __retVal_1 = this.ProviderFromPeer(peer);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple ProviderFromPeer(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer peer)
		{
			global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Stubs.ProviderFromPeer(
								this, 
								peer
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		object global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetPatternCore(global::Windows.UI.Xaml.Automation.Peers.PatternInterface patternInterface)
		{
			object __retVal_1 = this.GetPatternCore(patternInterface);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual object GetPatternCore(global::Windows.UI.Xaml.Automation.Peers.PatternInterface patternInterface)
		{
			object __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetPatternCore(
								this, 
								patternInterface
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetAcceleratorKeyCore()
		{
			string __retVal_1 = this.GetAcceleratorKeyCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetAcceleratorKeyCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetAcceleratorKeyCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetAccessKeyCore()
		{
			string __retVal_1 = this.GetAccessKeyCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetAccessKeyCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetAccessKeyCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationControlType global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetAutomationControlTypeCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationControlType __retVal_1 = this.GetAutomationControlTypeCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationControlType GetAutomationControlTypeCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationControlType __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetAutomationControlTypeCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetAutomationIdCore()
		{
			string __retVal_1 = this.GetAutomationIdCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetAutomationIdCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetAutomationIdCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.Foundation.Rect global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetBoundingRectangleCore()
		{
			global::Windows.Foundation.Rect __retVal_1 = this.GetBoundingRectangleCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.Foundation.Rect GetBoundingRectangleCore()
		{
			global::Windows.Foundation.Rect __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetBoundingRectangleCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetChildrenCore()
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal_1 = this.GetChildrenCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetChildrenCore()
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetChildrenCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetClassNameCore()
		{
			string __retVal_1 = this.GetClassNameCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetClassNameCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetClassNameCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.Foundation.Point global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetClickablePointCore()
		{
			global::Windows.Foundation.Point __retVal_1 = this.GetClickablePointCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.Foundation.Point GetClickablePointCore()
		{
			global::Windows.Foundation.Point __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetClickablePointCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetHelpTextCore()
		{
			string __retVal_1 = this.GetHelpTextCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetHelpTextCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetHelpTextCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetItemStatusCore()
		{
			string __retVal_1 = this.GetItemStatusCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetItemStatusCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetItemStatusCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetItemTypeCore()
		{
			string __retVal_1 = this.GetItemTypeCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetItemTypeCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetItemTypeCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetLabeledByCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal_1 = this.GetLabeledByCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationPeer GetLabeledByCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetLabeledByCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetLocalizedControlTypeCore()
		{
			string __retVal_1 = this.GetLocalizedControlTypeCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetLocalizedControlTypeCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetLocalizedControlTypeCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetNameCore()
		{
			string __retVal_1 = this.GetNameCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetNameCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetNameCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetOrientationCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation __retVal_1 = this.GetOrientationCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation GetOrientationCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetOrientationCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.HasKeyboardFocusCore()
		{
			bool __retVal_1 = this.HasKeyboardFocusCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool HasKeyboardFocusCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.HasKeyboardFocusCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsContentElementCore()
		{
			bool __retVal_1 = this.IsContentElementCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsContentElementCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsContentElementCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsControlElementCore()
		{
			bool __retVal_1 = this.IsControlElementCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsControlElementCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsControlElementCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsEnabledCore()
		{
			bool __retVal_1 = this.IsEnabledCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsEnabledCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsEnabledCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsKeyboardFocusableCore()
		{
			bool __retVal_1 = this.IsKeyboardFocusableCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsKeyboardFocusableCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsKeyboardFocusableCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsOffscreenCore()
		{
			bool __retVal_1 = this.IsOffscreenCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsOffscreenCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsOffscreenCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsPasswordCore()
		{
			bool __retVal_1 = this.IsPasswordCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsPasswordCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsPasswordCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsRequiredForFormCore()
		{
			bool __retVal_1 = this.IsRequiredForFormCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsRequiredForFormCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsRequiredForFormCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.SetFocusCore()
		{
			this.SetFocusCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void SetFocusCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.SetFocusCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetPeerFromPointCore(global::Windows.Foundation.Point point)
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal_1 = this.GetPeerFromPointCore(point);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationPeer GetPeerFromPointCore(global::Windows.Foundation.Point point)
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetPeerFromPointCore(
								this, 
								point
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetLiveSettingCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting __retVal_1 = this.GetLiveSettingCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting GetLiveSettingCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetLiveSettingCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2.ShowContextMenuCore()
		{
			this.ShowContextMenuCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void ShowContextMenuCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Stubs.ShowContextMenuCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2.GetControlledPeersCore()
		{
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal_1 = this.GetControlledPeersCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetControlledPeersCore()
		{
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Stubs.GetControlledPeersCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		object global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.NavigateCore(global::Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection direction)
		{
			object __retVal_1 = this.NavigateCore(direction);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual object NavigateCore(global::Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection direction)
		{
			object __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.NavigateCore(
								this, 
								direction
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		object global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetElementFromPointCore(global::Windows.Foundation.Point pointInWindowCoordinates)
		{
			object __retVal_1 = this.GetElementFromPointCore(pointInWindowCoordinates);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual object GetElementFromPointCore(global::Windows.Foundation.Point pointInWindowCoordinates)
		{
			object __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetElementFromPointCore(
								this, 
								pointInWindowCoordinates
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		object global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetFocusedElementCore()
		{
			object __retVal_1 = this.GetFocusedElementCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual object GetFocusedElementCore()
		{
			object __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetFocusedElementCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetAnnotationsCore()
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> __retVal_1 = this.GetAnnotationsCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> GetAnnotationsCore()
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetAnnotationsCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		int global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetPositionInSetCore()
		{
			int __retVal_1 = this.GetPositionInSetCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual int GetPositionInSetCore()
		{
			int __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetPositionInSetCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		int global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetSizeOfSetCore()
		{
			int __retVal_1 = this.GetSizeOfSetCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual int GetSizeOfSetCore()
		{
			int __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetSizeOfSetCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		int global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetLevelCore()
		{
			int __retVal_1 = this.GetLevelCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual int GetLevelCore()
		{
			int __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetLevelCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4.GetLandmarkTypeCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType __retVal_1 = this.GetLandmarkTypeCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType GetLandmarkTypeCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Stubs.GetLandmarkTypeCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4.GetLocalizedLandmarkTypeCore()
		{
			string __retVal_1 = this.GetLocalizedLandmarkTypeCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetLocalizedLandmarkTypeCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Stubs.GetLocalizedLandmarkTypeCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.IsPeripheralCore()
		{
			bool __retVal_1 = this.IsPeripheralCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsPeripheralCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.IsPeripheralCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.IsDataValidForFormCore()
		{
			bool __retVal_1 = this.IsDataValidForFormCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsDataValidForFormCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.IsDataValidForFormCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.GetFullDescriptionCore()
		{
			string __retVal_1 = this.GetFullDescriptionCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetFullDescriptionCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.GetFullDescriptionCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.GetDescribedByCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal_1 = this.GetDescribedByCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetDescribedByCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.GetDescribedByCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.GetFlowsToCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal_1 = this.GetFlowsToCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetFlowsToCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.GetFlowsToCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.GetFlowsFromCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal_1 = this.GetFlowsFromCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetFlowsFromCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.GetFlowsFromCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		int global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides6.GetCultureCore()
		{
			int __retVal_1 = this.GetCultureCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual int GetCultureCore()
		{
			int __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides6__Impl.Stubs.GetCultureCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides8.GetHeadingLevelCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel __retVal_1 = this.GetHeadingLevelCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel GetHeadingLevelCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides8__Impl.Stubs.GetHeadingLevelCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides9.IsDialogCore()
		{
			bool __retVal_1 = this.IsDialogCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsDialogCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides9__Impl.Stubs.IsDialogCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public AutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AutomationPeerAnnotation : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AutomationPeerAnnotation() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public AutomationPeerAnnotation(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class FrameworkElementAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.AutomationPeer, global::Windows.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeer
	{
		public FrameworkElementAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RangeBaseAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Windows.UI.Xaml.Automation.Peers.IRangeBaseAutomationPeer, global::Windows.UI.Xaml.Automation.Provider.IRangeValueProvider
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsReadOnly")]
		public virtual bool get_IsReadOnly()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Provider.IRangeValueProvider__Impl.Stubs.get_IsReadOnly(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LargeChange")]
		public virtual double get_LargeChange()
		{
			double __retVal = global::Windows.UI.Xaml.Automation.Provider.IRangeValueProvider__Impl.Stubs.get_LargeChange(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Maximum")]
		public virtual double get_Maximum()
		{
			double __retVal = global::Windows.UI.Xaml.Automation.Provider.IRangeValueProvider__Impl.Stubs.get_Maximum(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Minimum")]
		public virtual double get_Minimum()
		{
			double __retVal = global::Windows.UI.Xaml.Automation.Provider.IRangeValueProvider__Impl.Stubs.get_Minimum(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SmallChange")]
		public virtual double get_SmallChange()
		{
			double __retVal = global::Windows.UI.Xaml.Automation.Provider.IRangeValueProvider__Impl.Stubs.get_SmallChange(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Value")]
		public virtual double get_Value()
		{
			double __retVal = global::Windows.UI.Xaml.Automation.Provider.IRangeValueProvider__Impl.Stubs.get_Value(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public virtual void SetValue(double value)
		{
			global::Windows.UI.Xaml.Automation.Provider.IRangeValueProvider__Impl.Stubs.SetValue(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public RangeBaseAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.ISliderAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class SliderAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.RangeBaseAutomationPeer, global::Windows.UI.Xaml.Automation.Peers.ISliderAutomationPeer
	{
		public SliderAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ButtonBaseAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Windows.UI.Xaml.Automation.Peers.IButtonBaseAutomationPeer
	{
		public ButtonBaseAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IButtonAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ButtonAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.ButtonBaseAutomationPeer, global::Windows.UI.Xaml.Automation.Peers.IButtonAutomationPeer, global::Windows.UI.Xaml.Automation.Provider.IInvokeProvider
	{
		public virtual void Invoke()
		{
			global::Windows.UI.Xaml.Automation.Provider.IInvokeProvider__Impl.Stubs.Invoke(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ButtonAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IListViewItemAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ListViewItemAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Windows.UI.Xaml.Automation.Peers.IListViewItemAutomationPeer
	{
		public ListViewItemAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IItemAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ItemAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.AutomationPeer, global::Windows.UI.Xaml.Automation.Peers.IItemAutomationPeer
	{
		public ItemAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IItemsControlAutomationPeer))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerOverrides2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ItemsControlAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer, global::Windows.UI.Xaml.Automation.Peers.IItemsControlAutomationPeer, global::Windows.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerOverrides2
	{
		global::Windows.UI.Xaml.Automation.Peers.ItemAutomationPeer global::Windows.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerOverrides2.OnCreateItemAutomationPeer(object item)
		{
			global::Windows.UI.Xaml.Automation.Peers.ItemAutomationPeer __retVal_1 = this.OnCreateItemAutomationPeer(item);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.ItemAutomationPeer OnCreateItemAutomationPeer(object item)
		{
			global::Windows.UI.Xaml.Automation.Peers.ItemAutomationPeer __retVal = global::Windows.UI.Xaml.Automation.Peers.IItemsControlAutomationPeerOverrides2__Impl.Stubs.OnCreateItemAutomationPeer(
								this, 
								item
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public ItemsControlAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.ISelectorAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class SelectorAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.ItemsControlAutomationPeer, global::Windows.UI.Xaml.Automation.Peers.ISelectorAutomationPeer
	{
		public SelectorAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ListViewBaseAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.SelectorAutomationPeer, global::Windows.UI.Xaml.Automation.Peers.IListViewBaseAutomationPeer
	{
		public ListViewBaseAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IListViewAutomationPeer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ListViewAutomationPeer : global::Windows.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer, global::Windows.UI.Xaml.Automation.Peers.IListViewAutomationPeer
	{
		public ListViewAutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer2
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer3
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer4
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer5
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer6
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer7
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer8
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer9
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerProtected
	{
		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer PeerFromProvider(global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple provider);

		global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple ProviderFromPeer(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer peer);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides
	{
		object GetPatternCore(global::Windows.UI.Xaml.Automation.Peers.PatternInterface patternInterface);

		string GetAcceleratorKeyCore();

		string GetAccessKeyCore();

		global::Windows.UI.Xaml.Automation.Peers.AutomationControlType GetAutomationControlTypeCore();

		string GetAutomationIdCore();

		global::Windows.Foundation.Rect GetBoundingRectangleCore();

		global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetChildrenCore();

		string GetClassNameCore();

		global::Windows.Foundation.Point GetClickablePointCore();

		string GetHelpTextCore();

		string GetItemStatusCore();

		string GetItemTypeCore();

		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer GetLabeledByCore();

		string GetLocalizedControlTypeCore();

		string GetNameCore();

		global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation GetOrientationCore();

		bool HasKeyboardFocusCore();

		bool IsContentElementCore();

		bool IsControlElementCore();

		bool IsEnabledCore();

		bool IsKeyboardFocusableCore();

		bool IsOffscreenCore();

		bool IsPasswordCore();

		bool IsRequiredForFormCore();

		void SetFocusCore();

		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer GetPeerFromPointCore(global::Windows.Foundation.Point point);

		global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting GetLiveSettingCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides2
	{
		void ShowContextMenuCore();

		global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetControlledPeersCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides3
	{
		object NavigateCore(global::Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection direction);

		object GetElementFromPointCore(global::Windows.Foundation.Point pointInWindowCoordinates);

		object GetFocusedElementCore();

		global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> GetAnnotationsCore();

		int GetPositionInSetCore();

		int GetSizeOfSetCore();

		int GetLevelCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerAnnotation
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides4
	{
		global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType GetLandmarkTypeCore();

		string GetLocalizedLandmarkTypeCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides5
	{
		bool IsPeripheralCore();

		bool IsDataValidForFormCore();

		string GetFullDescriptionCore();

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetDescribedByCore();

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetFlowsToCore();

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetFlowsFromCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides6
	{
		int GetCultureCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides8
	{
		global::Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel GetHeadingLevelCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides9
	{
		bool IsDialogCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElementAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRangeBaseAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISliderAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IButtonBaseAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IButtonAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IListViewItemAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IItemAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IItemsControlAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IItemsControlAutomationPeerOverrides2
	{
		global::Windows.UI.Xaml.Automation.Peers.ItemAutomationPeer OnCreateItemAutomationPeer(object item);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISelectorAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IListViewBaseAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IListViewAutomationPeer
	{
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum PatternInterface
	{
		Invoke = 0,
		Selection = 1,
		Value = 2,
		RangeValue = 3,
		Scroll = 4,
		ScrollItem = 5,
		ExpandCollapse = 6,
		Grid = 7,
		GridItem = 8,
		MultipleView = 9,
		Window = 10,
		SelectionItem = 11,
		Dock = 12,
		Table = 13,
		TableItem = 14,
		Toggle = 15,
		Transform = 16,
		Text = 17,
		ItemContainer = 18,
		VirtualizedItem = 19,
		Text2 = 20,
		TextChild = 21,
		TextRange = 22,
		Annotation = 23,
		Drag = 24,
		DropTarget = 25,
		ObjectModel = 26,
		Spreadsheet = 27,
		SpreadsheetItem = 28,
		Styles = 29,
		Transform2 = 30,
		SynchronizedInput = 31,
		TextEdit = 32,
		CustomNavigation = 33,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationControlType
	{
		Button = 0,
		Calendar = 1,
		CheckBox = 2,
		ComboBox = 3,
		Edit = 4,
		Hyperlink = 5,
		Image = 6,
		ListItem = 7,
		List = 8,
		Menu = 9,
		MenuBar = 10,
		MenuItem = 11,
		ProgressBar = 12,
		RadioButton = 13,
		ScrollBar = 14,
		Slider = 15,
		Spinner = 16,
		StatusBar = 17,
		Tab = 18,
		TabItem = 19,
		Text = 20,
		ToolBar = 21,
		ToolTip = 22,
		Tree = 23,
		TreeItem = 24,
		Custom = 25,
		Group = 26,
		Thumb = 27,
		DataGrid = 28,
		DataItem = 29,
		Document = 30,
		SplitButton = 31,
		Window = 32,
		Pane = 33,
		Header = 34,
		HeaderItem = 35,
		Table = 36,
		TitleBar = 37,
		Separator = 38,
		SemanticZoom = 39,
		AppBar = 40,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationOrientation
	{
		None = 0,
		Horizontal = 1,
		Vertical = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationLiveSetting
	{
		Off = 0,
		Polite = 1,
		Assertive = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationNavigationDirection
	{
		Parent = 0,
		NextSibling = 1,
		PreviousSibling = 2,
		FirstChild = 3,
		LastChild = 4,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationLandmarkType
	{
		None = 0,
		Custom = 1,
		Form = 2,
		Main = 3,
		Navigation = 4,
		Search = 5,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationHeadingLevel
	{
		None = 0,
		Level1 = 1,
		Level2 = 2,
		Level3 = 3,
		Level4 = 4,
		Level5 = 5,
		Level6 = 6,
		Level7 = 7,
		Level8 = 8,
		Level9 = 9,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AccessibilityView
	{
		Raw = 0,
		Control = 1,
		Content = 2,
	}
}

namespace Windows.UI.Xaml.Automation.Provider
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class IRawElementProviderSimple : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple
	{
		public IRawElementProviderSimple(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IIRawElementProviderSimple
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInvokeProvider
	{
		void Invoke();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRangeValueProvider
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsReadOnly")]
		bool get_IsReadOnly();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LargeChange")]
		double get_LargeChange();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Maximum")]
		double get_Maximum();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Minimum")]
		double get_Minimum();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SmallChange")]
		double get_SmallChange();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Value")]
		double get_Value();

		void SetValue(double value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IExpandCollapseProvider
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExpandCollapseState")]
		global::Windows.UI.Xaml.Automation.ExpandCollapseState get_ExpandCollapseState();

		void Collapse();

		void Expand();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IToggleProvider
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ToggleState")]
		global::Windows.UI.Xaml.Automation.ToggleState get_ToggleState();

		void Toggle();
	}
}

namespace Windows.UI.Xaml.Controls
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IControl))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IControl3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IControl4))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IControl7))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IControlProtected))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IControlOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IControlOverrides6))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Control : global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.Controls.IControl, global::Windows.UI.Xaml.Controls.IControl2, global::Windows.UI.Xaml.Controls.IControl3, global::Windows.UI.Xaml.Controls.IControl4, global::Windows.UI.Xaml.Controls.IControl5, global::Windows.UI.Xaml.Controls.IControl7, global::Windows.UI.Xaml.Controls.IControlProtected, global::Windows.UI.Xaml.Controls.IControlOverrides, global::Windows.UI.Xaml.Controls.IControlOverrides6
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		protected Control() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IControlFactory_CreateInstance("Windows.UI.Xaml.Controls.Control");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IControlFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
			global::System.IntPtr __pRetVal_WithAggregation;
			__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IControlFactory__Impl.Stubs.CreateInstance(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Controls.IControlFactory).TypeHandle
												), 
								outerInspectable, 
								out innerInspectable
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
			return innerInspectable;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontSize")]
		public virtual double get_FontSize()
		{
			double __retVal = global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.get_FontSize(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontSize")]
		public virtual void put_FontSize(double value)
		{
			global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.put_FontSize(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontFamily")]
		public virtual global::Windows.UI.Xaml.Media.FontFamily get_FontFamily()
		{
			global::Windows.UI.Xaml.Media.FontFamily __retVal = global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.get_FontFamily(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontFamily")]
		public virtual void put_FontFamily(global::Windows.UI.Xaml.Media.FontFamily value)
		{
			global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.put_FontFamily(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontWeight")]
		public virtual global::Windows.UI.Text.FontWeight get_FontWeight()
		{
			global::Windows.UI.Text.FontWeight __retVal = global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.get_FontWeight(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontWeight")]
		public virtual void put_FontWeight(global::Windows.UI.Text.FontWeight value)
		{
			global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.put_FontWeight(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Foreground")]
		public virtual global::Windows.UI.Xaml.Media.Brush get_Foreground()
		{
			global::Windows.UI.Xaml.Media.Brush __retVal = global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.get_Foreground(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Foreground")]
		public virtual void put_Foreground(global::Windows.UI.Xaml.Media.Brush value)
		{
			global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.put_Foreground(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsTabStop")]
		public virtual bool get_IsTabStop()
		{
			bool __retVal = global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.get_IsTabStop(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsTabStop")]
		public virtual void put_IsTabStop(bool value)
		{
			global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.put_IsTabStop(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Template")]
		public virtual global::Windows.UI.Xaml.Controls.ControlTemplate get_Template()
		{
			global::Windows.UI.Xaml.Controls.ControlTemplate __retVal = global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.get_Template(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Template")]
		public virtual void put_Template(global::Windows.UI.Xaml.Controls.ControlTemplate value)
		{
			global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.put_Template(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Padding")]
		public virtual global::Windows.UI.Xaml.Thickness get_Padding()
		{
			global::Windows.UI.Xaml.Thickness __retVal = global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.get_Padding(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Padding")]
		public virtual void put_Padding(global::Windows.UI.Xaml.Thickness value)
		{
			global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.put_Padding(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalContentAlignment")]
		public virtual global::Windows.UI.Xaml.HorizontalAlignment get_HorizontalContentAlignment()
		{
			global::Windows.UI.Xaml.HorizontalAlignment __retVal = global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.get_HorizontalContentAlignment(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalContentAlignment")]
		public virtual void put_HorizontalContentAlignment(global::Windows.UI.Xaml.HorizontalAlignment value)
		{
			global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.put_HorizontalContentAlignment(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalContentAlignment")]
		public virtual global::Windows.UI.Xaml.VerticalAlignment get_VerticalContentAlignment()
		{
			global::Windows.UI.Xaml.VerticalAlignment __retVal = global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.get_VerticalContentAlignment(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalContentAlignment")]
		public virtual void put_VerticalContentAlignment(global::Windows.UI.Xaml.VerticalAlignment value)
		{
			global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.put_VerticalContentAlignment(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Background")]
		public virtual global::Windows.UI.Xaml.Media.Brush get_Background()
		{
			global::Windows.UI.Xaml.Media.Brush __retVal = global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.get_Background(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Background")]
		public virtual void put_Background(global::Windows.UI.Xaml.Media.Brush value)
		{
			global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.put_Background(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BorderThickness")]
		public virtual global::Windows.UI.Xaml.Thickness get_BorderThickness()
		{
			global::Windows.UI.Xaml.Thickness __retVal = global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.get_BorderThickness(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BorderThickness")]
		public virtual void put_BorderThickness(global::Windows.UI.Xaml.Thickness value)
		{
			global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.put_BorderThickness(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BorderBrush")]
		public virtual global::Windows.UI.Xaml.Media.Brush get_BorderBrush()
		{
			global::Windows.UI.Xaml.Media.Brush __retVal = global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.get_BorderBrush(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BorderBrush")]
		public virtual void put_BorderBrush(global::Windows.UI.Xaml.Media.Brush value)
		{
			global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.put_BorderBrush(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "IsEnabledChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_IsEnabledChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.add_IsEnabledChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "IsEnabledChanged")]
		public virtual void remove_IsEnabledChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.remove_IsEnabledChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UseSystemFocusVisuals")]
		public virtual bool get_UseSystemFocusVisuals()
		{
			bool __retVal = global::Windows.UI.Xaml.Controls.IControl3__Impl.Stubs.get_UseSystemFocusVisuals(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UseSystemFocusVisuals")]
		public virtual void put_UseSystemFocusVisuals(bool value)
		{
			global::Windows.UI.Xaml.Controls.IControl3__Impl.Stubs.put_UseSystemFocusVisuals(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "FocusEngaged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_FocusEngaged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.FocusEngagedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IControl4__Impl.Stubs.add_FocusEngaged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "FocusEngaged")]
		public virtual void remove_FocusEngaged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IControl4__Impl.Stubs.remove_FocusEngaged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "FocusDisengaged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_FocusDisengaged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.FocusDisengagedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IControl4__Impl.Stubs.add_FocusDisengaged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "FocusDisengaged")]
		public virtual void remove_FocusDisengaged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IControl4__Impl.Stubs.remove_FocusDisengaged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BackgroundSizing")]
		public virtual global::Windows.UI.Xaml.Controls.BackgroundSizing get_BackgroundSizing()
		{
			global::Windows.UI.Xaml.Controls.BackgroundSizing __retVal = global::Windows.UI.Xaml.Controls.IControl7__Impl.Stubs.get_BackgroundSizing(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BackgroundSizing")]
		public virtual void put_BackgroundSizing(global::Windows.UI.Xaml.Controls.BackgroundSizing value)
		{
			global::Windows.UI.Xaml.Controls.IControl7__Impl.Stubs.put_BackgroundSizing(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CornerRadius")]
		public virtual global::Windows.UI.Xaml.CornerRadius get_CornerRadius()
		{
			global::Windows.UI.Xaml.CornerRadius __retVal = global::Windows.UI.Xaml.Controls.IControl7__Impl.Stubs.get_CornerRadius(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CornerRadius")]
		public virtual void put_CornerRadius(global::Windows.UI.Xaml.CornerRadius value)
		{
			global::Windows.UI.Xaml.Controls.IControl7__Impl.Stubs.put_CornerRadius(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		object global::Windows.UI.Xaml.Controls.IControlProtected.get_DefaultStyleKey()
		{
			object __retVal_1 = this.get_DefaultStyleKey();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DefaultStyleKey")]
		protected virtual object get_DefaultStyleKey()
		{
			object __retVal = global::Windows.UI.Xaml.Controls.IControlProtected__Impl.Stubs.get_DefaultStyleKey(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.Controls.IControlProtected.put_DefaultStyleKey(object value)
		{
			this.put_DefaultStyleKey(value);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DefaultStyleKey")]
		protected virtual void put_DefaultStyleKey(object value)
		{
			global::Windows.UI.Xaml.Controls.IControlProtected__Impl.Stubs.put_DefaultStyleKey(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		global::Windows.UI.Xaml.DependencyObject global::Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild(string childName)
		{
			global::Windows.UI.Xaml.DependencyObject __retVal_1 = this.GetTemplateChild(childName);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.DependencyObject GetTemplateChild(string childName)
		{
			global::Windows.UI.Xaml.DependencyObject __retVal = global::Windows.UI.Xaml.Controls.IControlProtected__Impl.Stubs.GetTemplateChild(
								this, 
								childName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerEntered(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerEntered(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerEntered(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerEntered(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerPressed(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerPressed(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerPressed(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerPressed(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerMoved(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerMoved(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerMoved(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerMoved(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerReleased(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerReleased(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerReleased(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerReleased(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerExited(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerExited(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerExited(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerExited(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCaptureLost(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerCaptureLost(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerCaptureLost(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerCaptureLost(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCanceled(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerCanceled(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerCanceled(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerCanceled(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerWheelChanged(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerWheelChanged(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerWheelChanged(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerWheelChanged(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnTapped(global::Windows.UI.Xaml.Input.TappedRoutedEventArgs e)
		{
			this.OnTapped(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnTapped(global::Windows.UI.Xaml.Input.TappedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnTapped(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnDoubleTapped(global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs e)
		{
			this.OnDoubleTapped(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnDoubleTapped(global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnDoubleTapped(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnHolding(global::Windows.UI.Xaml.Input.HoldingRoutedEventArgs e)
		{
			this.OnHolding(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnHolding(global::Windows.UI.Xaml.Input.HoldingRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnHolding(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnRightTapped(global::Windows.UI.Xaml.Input.RightTappedRoutedEventArgs e)
		{
			this.OnRightTapped(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnRightTapped(global::Windows.UI.Xaml.Input.RightTappedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnRightTapped(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarting(global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e)
		{
			this.OnManipulationStarting(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnManipulationStarting(global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnManipulationStarting(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationInertiaStarting(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e)
		{
			this.OnManipulationInertiaStarting(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnManipulationInertiaStarting(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnManipulationInertiaStarting(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarted(global::Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e)
		{
			this.OnManipulationStarted(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnManipulationStarted(global::Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnManipulationStarted(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationDelta(global::Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e)
		{
			this.OnManipulationDelta(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnManipulationDelta(global::Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnManipulationDelta(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationCompleted(global::Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e)
		{
			this.OnManipulationCompleted(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnManipulationCompleted(global::Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnManipulationCompleted(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			this.OnKeyUp(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnKeyUp(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			this.OnKeyDown(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnKeyDown(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnGotFocus(global::Windows.UI.Xaml.RoutedEventArgs e)
		{
			this.OnGotFocus(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnGotFocus(global::Windows.UI.Xaml.RoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnGotFocus(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnLostFocus(global::Windows.UI.Xaml.RoutedEventArgs e)
		{
			this.OnLostFocus(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnLostFocus(global::Windows.UI.Xaml.RoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnLostFocus(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnDragEnter(global::Windows.UI.Xaml.DragEventArgs e)
		{
			this.OnDragEnter(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnDragEnter(global::Windows.UI.Xaml.DragEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnDragEnter(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnDragLeave(global::Windows.UI.Xaml.DragEventArgs e)
		{
			this.OnDragLeave(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnDragLeave(global::Windows.UI.Xaml.DragEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnDragLeave(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnDragOver(global::Windows.UI.Xaml.DragEventArgs e)
		{
			this.OnDragOver(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnDragOver(global::Windows.UI.Xaml.DragEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnDragOver(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnDrop(global::Windows.UI.Xaml.DragEventArgs e)
		{
			this.OnDrop(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnDrop(global::Windows.UI.Xaml.DragEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnDrop(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides6.OnPreviewKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			this.OnPreviewKeyDown(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPreviewKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides6__Impl.Stubs.OnPreviewKeyDown(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides6.OnPreviewKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			this.OnPreviewKeyUp(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPreviewKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides6__Impl.Stubs.OnPreviewKeyUp(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides6.OnCharacterReceived(global::Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs e)
		{
			this.OnCharacterReceived(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnCharacterReceived(global::Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides6__Impl.Stubs.OnCharacterReceived(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Control(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IControlTemplate))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ControlTemplate : global::Windows.UI.Xaml.FrameworkTemplate, global::Windows.UI.Xaml.Controls.IControlTemplate
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ControlTemplate() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Controls.ControlTemplate");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TargetType")]
		public global::System.Type get_TargetType()
		{
			global::System.Type __retVal = global::Windows.UI.Xaml.Controls.IControlTemplate__Impl.Stubs.get_TargetType(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TargetType")]
		public void put_TargetType(global::System.Type value)
		{
			global::Windows.UI.Xaml.Controls.IControlTemplate__Impl.Stubs.put_TargetType(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ControlTemplate(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IFocusEngagedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FocusEngagedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Controls.IFocusEngagedEventArgs
	{
		public FocusEngagedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IFocusDisengagedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FocusDisengagedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Controls.IFocusDisengagedEventArgs
	{
		public FocusDisengagedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IImage))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Image : global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.Controls.IImage
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Image() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Controls.Image");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		public global::Windows.UI.Xaml.Media.ImageSource get_Source()
		{
			global::Windows.UI.Xaml.Media.ImageSource __retVal = global::Windows.UI.Xaml.Controls.IImage__Impl.Stubs.get_Source(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Source")]
		public void put_Source(global::Windows.UI.Xaml.Media.ImageSource value)
		{
			global::Windows.UI.Xaml.Controls.IImage__Impl.Stubs.put_Source(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ImageFailed")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ImageFailed(global::Windows.UI.Xaml.ExceptionRoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IImage__Impl.Stubs.add_ImageFailed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ImageFailed")]
		public void remove_ImageFailed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IImage__Impl.Stubs.remove_ImageFailed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ImageOpened")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ImageOpened(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IImage__Impl.Stubs.add_ImageOpened(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ImageOpened")]
		public void remove_ImageOpened(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IImage__Impl.Stubs.remove_ImageOpened(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Image(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IContentControl))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IContentControlOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ContentControl : global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.IContentControl, global::Windows.UI.Xaml.Controls.IContentControlOverrides
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ContentControl() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IContentControlFactory_CreateInstance("Windows.UI.Xaml.Controls.ContentControl");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IContentControlFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.ContentControl).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IContentControlFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IContentControlFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IContentControlFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IContentControlFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		public virtual object get_Content()
		{
			object __retVal = global::Windows.UI.Xaml.Controls.IContentControl__Impl.Stubs.get_Content(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		public virtual void put_Content(object value)
		{
			global::Windows.UI.Xaml.Controls.IContentControl__Impl.Stubs.put_Content(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentTemplate")]
		public virtual global::Windows.UI.Xaml.DataTemplate get_ContentTemplate()
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Windows.UI.Xaml.Controls.IContentControl__Impl.Stubs.get_ContentTemplate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContentTemplate")]
		public virtual void put_ContentTemplate(global::Windows.UI.Xaml.DataTemplate value)
		{
			global::Windows.UI.Xaml.Controls.IContentControl__Impl.Stubs.put_ContentTemplate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentTransitions")]
		public virtual global::Windows.UI.Xaml.Media.Animation.TransitionCollection get_ContentTransitions()
		{
			global::Windows.UI.Xaml.Media.Animation.TransitionCollection __retVal = global::Windows.UI.Xaml.Controls.IContentControl__Impl.Stubs.get_ContentTransitions(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContentTransitions")]
		public virtual void put_ContentTransitions(global::Windows.UI.Xaml.Media.Animation.TransitionCollection value)
		{
			global::Windows.UI.Xaml.Controls.IContentControl__Impl.Stubs.put_ContentTransitions(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IContentControlOverrides.OnContentChanged(
					object oldContent, 
					object newContent)
		{
			this.OnContentChanged(
								oldContent, 
								newContent
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnContentChanged(
					object oldContent, 
					object newContent)
		{
			global::Windows.UI.Xaml.Controls.IContentControlOverrides__Impl.Stubs.OnContentChanged(
								this, 
								oldContent, 
								newContent
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IContentControlOverrides.OnContentTemplateChanged(
					global::Windows.UI.Xaml.DataTemplate oldContentTemplate, 
					global::Windows.UI.Xaml.DataTemplate newContentTemplate)
		{
			this.OnContentTemplateChanged(
								oldContentTemplate, 
								newContentTemplate
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnContentTemplateChanged(
					global::Windows.UI.Xaml.DataTemplate oldContentTemplate, 
					global::Windows.UI.Xaml.DataTemplate newContentTemplate)
		{
			global::Windows.UI.Xaml.Controls.IContentControlOverrides__Impl.Stubs.OnContentTemplateChanged(
								this, 
								oldContentTemplate, 
								newContentTemplate
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IContentControlOverrides.OnContentTemplateSelectorChanged(
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldContentTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newContentTemplateSelector)
		{
			this.OnContentTemplateSelectorChanged(
								oldContentTemplateSelector, 
								newContentTemplateSelector
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnContentTemplateSelectorChanged(
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldContentTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newContentTemplateSelector)
		{
			global::Windows.UI.Xaml.Controls.IContentControlOverrides__Impl.Stubs.OnContentTemplateSelectorChanged(
								this, 
								oldContentTemplateSelector, 
								newContentTemplateSelector
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ContentControl(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IDataTemplateSelector))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class DataTemplateSelector : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IDataTemplateSelector, global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides, global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2
	{
		global::Windows.UI.Xaml.DataTemplate global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides.SelectTemplateCore(
					object item, 
					global::Windows.UI.Xaml.DependencyObject container)
		{
			global::Windows.UI.Xaml.DataTemplate __retVal_1 = this.SelectTemplateCore(
								item, 
								container
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.DataTemplate SelectTemplateCore(
					object item, 
					global::Windows.UI.Xaml.DependencyObject container)
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides__Impl.Stubs.SelectTemplateCore(
								this, 
								item, 
								container
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.DataTemplate global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2.SelectTemplateCore(object item)
		{
			global::Windows.UI.Xaml.DataTemplate __retVal_1 = this.SelectTemplateCore(item);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.DataTemplate SelectTemplateCore(object item)
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2__Impl.Stubs.SelectTemplateCore(
								this, 
								item
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public DataTemplateSelector(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IButton))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Button : global::Windows.UI.Xaml.Controls.Primitives.ButtonBase, global::Windows.UI.Xaml.Controls.IButton
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Button() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IButtonFactory_CreateInstance("Windows.UI.Xaml.Controls.Button");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IButtonFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.Button).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IButtonFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IButtonFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IButtonFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IButtonFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public Button(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IToolTipService))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ToolTipService : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IToolTipService
	{
		public static global::Windows.UI.Xaml.Controls.Primitives.PlacementMode GetPlacement(global::Windows.UI.Xaml.DependencyObject element)
		{
			global::Windows.UI.Xaml.Controls.Primitives.PlacementMode retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IToolTipServiceStatics_GetPlacement(
								"Windows.UI.Xaml.Controls.ToolTipService", 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.Controls.Primitives.PlacementMode __Factory_Windows_UI_Xaml_Controls__IToolTipServiceStatics_GetPlacement(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject element)
		{
			global::Windows.UI.Xaml.Controls.Primitives.PlacementMode __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.Controls.IToolTipServiceStatics__Impl.Stubs.GetPlacement(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Controls.IToolTipServiceStatics).TypeHandle
												), 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static void SetPlacement(
					global::Windows.UI.Xaml.DependencyObject element, 
					global::Windows.UI.Xaml.Controls.Primitives.PlacementMode value)
		{
			__Factory_Windows_UI_Xaml_Controls__IToolTipServiceStatics_SetPlacement(
								"Windows.UI.Xaml.Controls.ToolTipService", 
								element, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_UI_Xaml_Controls__IToolTipServiceStatics_SetPlacement(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject element, 
					global::Windows.UI.Xaml.Controls.Primitives.PlacementMode value)
		{
			global::Windows.UI.Xaml.Controls.IToolTipServiceStatics__Impl.Stubs.SetPlacement(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Controls.IToolTipServiceStatics).TypeHandle
												), 
								element, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static object GetToolTip(global::Windows.UI.Xaml.DependencyObject element)
		{
			object retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IToolTipServiceStatics_GetToolTip(
								"Windows.UI.Xaml.Controls.ToolTipService", 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static object __Factory_Windows_UI_Xaml_Controls__IToolTipServiceStatics_GetToolTip(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject element)
		{
			object __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.Controls.IToolTipServiceStatics__Impl.Stubs.GetToolTip(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Controls.IToolTipServiceStatics).TypeHandle
												), 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static void SetToolTip(
					global::Windows.UI.Xaml.DependencyObject element, 
					object value)
		{
			__Factory_Windows_UI_Xaml_Controls__IToolTipServiceStatics_SetToolTip(
								"Windows.UI.Xaml.Controls.ToolTipService", 
								element, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_UI_Xaml_Controls__IToolTipServiceStatics_SetToolTip(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject element, 
					object value)
		{
			global::Windows.UI.Xaml.Controls.IToolTipServiceStatics__Impl.Stubs.SetToolTip(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Controls.IToolTipServiceStatics).TypeHandle
												), 
								element, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ToolTipService(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.ITextBlock))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.ITextBlock6))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TextBlock : global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.Controls.ITextBlock, global::Windows.UI.Xaml.Controls.ITextBlock6
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public TextBlock() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Controls.TextBlock");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontSize")]
		public double get_FontSize()
		{
			double __retVal = global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.get_FontSize(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontSize")]
		public void put_FontSize(double value)
		{
			global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.put_FontSize(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontFamily")]
		public global::Windows.UI.Xaml.Media.FontFamily get_FontFamily()
		{
			global::Windows.UI.Xaml.Media.FontFamily __retVal = global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.get_FontFamily(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontFamily")]
		public void put_FontFamily(global::Windows.UI.Xaml.Media.FontFamily value)
		{
			global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.put_FontFamily(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Foreground")]
		public global::Windows.UI.Xaml.Media.Brush get_Foreground()
		{
			global::Windows.UI.Xaml.Media.Brush __retVal = global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.get_Foreground(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Foreground")]
		public void put_Foreground(global::Windows.UI.Xaml.Media.Brush value)
		{
			global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.put_Foreground(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TextWrapping")]
		public global::Windows.UI.Xaml.TextWrapping get_TextWrapping()
		{
			global::Windows.UI.Xaml.TextWrapping __retVal = global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.get_TextWrapping(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TextWrapping")]
		public void put_TextWrapping(global::Windows.UI.Xaml.TextWrapping value)
		{
			global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.put_TextWrapping(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TextAlignment")]
		public global::Windows.UI.Xaml.TextAlignment get_TextAlignment()
		{
			global::Windows.UI.Xaml.TextAlignment __retVal = global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.get_TextAlignment(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TextAlignment")]
		public void put_TextAlignment(global::Windows.UI.Xaml.TextAlignment value)
		{
			global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.put_TextAlignment(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Text")]
		public string get_Text()
		{
			string __retVal = global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.get_Text(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Text")]
		public void put_Text(string value)
		{
			global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.put_Text(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Padding")]
		public global::Windows.UI.Xaml.Thickness get_Padding()
		{
			global::Windows.UI.Xaml.Thickness __retVal = global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.get_Padding(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Padding")]
		public void put_Padding(global::Windows.UI.Xaml.Thickness value)
		{
			global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.put_Padding(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SelectionChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SelectionChanged(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.add_SelectionChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SelectionChanged")]
		public void remove_SelectionChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.remove_SelectionChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextMenuOpening")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextMenuOpening(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.add_ContextMenuOpening(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextMenuOpening")]
		public void remove_ContextMenuOpening(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.remove_ContextMenuOpening(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "IsTextTrimmedChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_IsTextTrimmedChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBlock, global::Windows.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.ITextBlock6__Impl.Stubs.add_IsTextTrimmedChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "IsTextTrimmedChanged")]
		public void remove_IsTextTrimmedChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.ITextBlock6__Impl.Stubs.remove_IsTextTrimmedChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public TextBlock(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IContextMenuEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ContextMenuEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Controls.IContextMenuEventArgs
	{
		public ContextMenuEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class IsTextTrimmedChangedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs
	{
		public IsTextTrimmedChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IRichEditBox))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IRichEditBox2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IRichEditBox3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IRichEditBox6))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IRichEditBox7))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IRichEditBox8))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RichEditBox : global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.IRichEditBox, global::Windows.UI.Xaml.Controls.IRichEditBox2, global::Windows.UI.Xaml.Controls.IRichEditBox3, global::Windows.UI.Xaml.Controls.IRichEditBox6, global::Windows.UI.Xaml.Controls.IRichEditBox7, global::Windows.UI.Xaml.Controls.IRichEditBox8
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public RichEditBox() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IRichEditBoxFactory_CreateInstance("Windows.UI.Xaml.Controls.RichEditBox");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IRichEditBoxFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.RichEditBox).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IRichEditBoxFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IRichEditBoxFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IRichEditBoxFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IRichEditBoxFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TextWrapping")]
		public virtual global::Windows.UI.Xaml.TextWrapping get_TextWrapping()
		{
			global::Windows.UI.Xaml.TextWrapping __retVal = global::Windows.UI.Xaml.Controls.IRichEditBox__Impl.Stubs.get_TextWrapping(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TextWrapping")]
		public virtual void put_TextWrapping(global::Windows.UI.Xaml.TextWrapping value)
		{
			global::Windows.UI.Xaml.Controls.IRichEditBox__Impl.Stubs.put_TextWrapping(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Document")]
		public virtual global::Windows.UI.Text.ITextDocument get_Document()
		{
			global::Windows.UI.Text.ITextDocument __retVal = global::Windows.UI.Xaml.Controls.IRichEditBox__Impl.Stubs.get_Document(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TextChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TextChanged(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IRichEditBox__Impl.Stubs.add_TextChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TextChanged")]
		public virtual void remove_TextChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IRichEditBox__Impl.Stubs.remove_TextChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SelectionChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SelectionChanged(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IRichEditBox__Impl.Stubs.add_SelectionChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SelectionChanged")]
		public virtual void remove_SelectionChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IRichEditBox__Impl.Stubs.remove_SelectionChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextMenuOpening")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextMenuOpening(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IRichEditBox__Impl.Stubs.add_ContextMenuOpening(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextMenuOpening")]
		public virtual void remove_ContextMenuOpening(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IRichEditBox__Impl.Stubs.remove_ContextMenuOpening(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionHighlightColor")]
		public virtual global::Windows.UI.Xaml.Media.SolidColorBrush get_SelectionHighlightColor()
		{
			global::Windows.UI.Xaml.Media.SolidColorBrush __retVal = global::Windows.UI.Xaml.Controls.IRichEditBox2__Impl.Stubs.get_SelectionHighlightColor(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectionHighlightColor")]
		public virtual void put_SelectionHighlightColor(global::Windows.UI.Xaml.Media.SolidColorBrush value)
		{
			global::Windows.UI.Xaml.Controls.IRichEditBox2__Impl.Stubs.put_SelectionHighlightColor(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Paste")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Paste(global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IRichEditBox2__Impl.Stubs.add_Paste(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Paste")]
		public virtual void remove_Paste(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IRichEditBox2__Impl.Stubs.remove_Paste(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TextCompositionStarted")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TextCompositionStarted(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.RichEditBox, global::Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IRichEditBox3__Impl.Stubs.add_TextCompositionStarted(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TextCompositionStarted")]
		public virtual void remove_TextCompositionStarted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IRichEditBox3__Impl.Stubs.remove_TextCompositionStarted(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TextCompositionChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TextCompositionChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.RichEditBox, global::Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IRichEditBox3__Impl.Stubs.add_TextCompositionChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TextCompositionChanged")]
		public virtual void remove_TextCompositionChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IRichEditBox3__Impl.Stubs.remove_TextCompositionChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TextCompositionEnded")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TextCompositionEnded(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.RichEditBox, global::Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IRichEditBox3__Impl.Stubs.add_TextCompositionEnded(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TextCompositionEnded")]
		public virtual void remove_TextCompositionEnded(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IRichEditBox3__Impl.Stubs.remove_TextCompositionEnded(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CandidateWindowBoundsChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CandidateWindowBoundsChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.RichEditBox, global::Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IRichEditBox3__Impl.Stubs.add_CandidateWindowBoundsChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CandidateWindowBoundsChanged")]
		public virtual void remove_CandidateWindowBoundsChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IRichEditBox3__Impl.Stubs.remove_CandidateWindowBoundsChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TextChanging")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TextChanging(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.RichEditBox, global::Windows.UI.Xaml.Controls.RichEditBoxTextChangingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IRichEditBox3__Impl.Stubs.add_TextChanging(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TextChanging")]
		public virtual void remove_TextChanging(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IRichEditBox3__Impl.Stubs.remove_TextChanging(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CopyingToClipboard")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CopyingToClipboard(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.RichEditBox, global::Windows.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IRichEditBox6__Impl.Stubs.add_CopyingToClipboard(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CopyingToClipboard")]
		public virtual void remove_CopyingToClipboard(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IRichEditBox6__Impl.Stubs.remove_CopyingToClipboard(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CuttingToClipboard")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CuttingToClipboard(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.RichEditBox, global::Windows.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IRichEditBox6__Impl.Stubs.add_CuttingToClipboard(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CuttingToClipboard")]
		public virtual void remove_CuttingToClipboard(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IRichEditBox6__Impl.Stubs.remove_CuttingToClipboard(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentLinkForegroundColor")]
		public virtual global::Windows.UI.Xaml.Media.SolidColorBrush get_ContentLinkForegroundColor()
		{
			global::Windows.UI.Xaml.Media.SolidColorBrush __retVal = global::Windows.UI.Xaml.Controls.IRichEditBox7__Impl.Stubs.get_ContentLinkForegroundColor(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContentLinkForegroundColor")]
		public virtual void put_ContentLinkForegroundColor(global::Windows.UI.Xaml.Media.SolidColorBrush value)
		{
			global::Windows.UI.Xaml.Controls.IRichEditBox7__Impl.Stubs.put_ContentLinkForegroundColor(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentLinkBackgroundColor")]
		public virtual global::Windows.UI.Xaml.Media.SolidColorBrush get_ContentLinkBackgroundColor()
		{
			global::Windows.UI.Xaml.Media.SolidColorBrush __retVal = global::Windows.UI.Xaml.Controls.IRichEditBox7__Impl.Stubs.get_ContentLinkBackgroundColor(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContentLinkBackgroundColor")]
		public virtual void put_ContentLinkBackgroundColor(global::Windows.UI.Xaml.Media.SolidColorBrush value)
		{
			global::Windows.UI.Xaml.Controls.IRichEditBox7__Impl.Stubs.put_ContentLinkBackgroundColor(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContentLinkChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContentLinkChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.RichEditBox, global::Windows.UI.Xaml.Controls.ContentLinkChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IRichEditBox7__Impl.Stubs.add_ContentLinkChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContentLinkChanged")]
		public virtual void remove_ContentLinkChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IRichEditBox7__Impl.Stubs.remove_ContentLinkChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContentLinkInvoked")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContentLinkInvoked(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.RichEditBox, global::Windows.UI.Xaml.Documents.ContentLinkInvokedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IRichEditBox7__Impl.Stubs.add_ContentLinkInvoked(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContentLinkInvoked")]
		public virtual void remove_ContentLinkInvoked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IRichEditBox7__Impl.Stubs.remove_ContentLinkInvoked(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionFlyout")]
		public virtual global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase get_SelectionFlyout()
		{
			global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase __retVal = global::Windows.UI.Xaml.Controls.IRichEditBox8__Impl.Stubs.get_SelectionFlyout(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectionFlyout")]
		public virtual void put_SelectionFlyout(global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase value)
		{
			global::Windows.UI.Xaml.Controls.IRichEditBox8__Impl.Stubs.put_SelectionFlyout(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SelectionChanging")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SelectionChanging(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.RichEditBox, global::Windows.UI.Xaml.Controls.RichEditBoxSelectionChangingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IRichEditBox8__Impl.Stubs.add_SelectionChanging(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SelectionChanging")]
		public virtual void remove_SelectionChanging(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IRichEditBox8__Impl.Stubs.remove_SelectionChanging(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public RichEditBox(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.ITextControlPasteEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TextControlPasteEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.ITextControlPasteEventArgs
	{
		public TextControlPasteEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.ITextCompositionStartedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TextCompositionStartedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.ITextCompositionStartedEventArgs
	{
		public TextCompositionStartedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.ITextCompositionChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TextCompositionChangedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.ITextCompositionChangedEventArgs
	{
		public TextCompositionChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.ITextCompositionEndedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TextCompositionEndedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.ITextCompositionEndedEventArgs
	{
		public TextCompositionEndedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CandidateWindowBoundsChangedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs
	{
		public CandidateWindowBoundsChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IRichEditBoxTextChangingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class RichEditBoxTextChangingEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IRichEditBoxTextChangingEventArgs
	{
		public RichEditBoxTextChangingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.ITextControlCopyingToClipboardEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TextControlCopyingToClipboardEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.ITextControlCopyingToClipboardEventArgs
	{
		public TextControlCopyingToClipboardEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.ITextControlCuttingToClipboardEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TextControlCuttingToClipboardEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.ITextControlCuttingToClipboardEventArgs
	{
		public TextControlCuttingToClipboardEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IContentLinkChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ContentLinkChangedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IContentLinkChangedEventArgs
	{
		public ContentLinkChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IRichEditBoxSelectionChangingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class RichEditBoxSelectionChangingEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IRichEditBoxSelectionChangingEventArgs
	{
		public RichEditBoxSelectionChangingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IScrollViewer))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IScrollViewer2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IScrollViewer3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IScrollViewer4))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ScrollViewer : global::Windows.UI.Xaml.Controls.ContentControl, global::Windows.UI.Xaml.Controls.IScrollViewer, global::Windows.UI.Xaml.Controls.IScrollViewer2, global::Windows.UI.Xaml.Controls.IScrollViewer3, global::Windows.UI.Xaml.Controls.IScrollViewer4
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ScrollViewer() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Controls.ScrollViewer");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalScrollBarVisibility")]
		public global::Windows.UI.Xaml.Controls.ScrollBarVisibility get_HorizontalScrollBarVisibility()
		{
			global::Windows.UI.Xaml.Controls.ScrollBarVisibility __retVal = global::Windows.UI.Xaml.Controls.IScrollViewer__Impl.Stubs.get_HorizontalScrollBarVisibility(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalScrollBarVisibility")]
		public void put_HorizontalScrollBarVisibility(global::Windows.UI.Xaml.Controls.ScrollBarVisibility value)
		{
			global::Windows.UI.Xaml.Controls.IScrollViewer__Impl.Stubs.put_HorizontalScrollBarVisibility(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalScrollBarVisibility")]
		public global::Windows.UI.Xaml.Controls.ScrollBarVisibility get_VerticalScrollBarVisibility()
		{
			global::Windows.UI.Xaml.Controls.ScrollBarVisibility __retVal = global::Windows.UI.Xaml.Controls.IScrollViewer__Impl.Stubs.get_VerticalScrollBarVisibility(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalScrollBarVisibility")]
		public void put_VerticalScrollBarVisibility(global::Windows.UI.Xaml.Controls.ScrollBarVisibility value)
		{
			global::Windows.UI.Xaml.Controls.IScrollViewer__Impl.Stubs.put_VerticalScrollBarVisibility(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsHorizontalRailEnabled")]
		public bool get_IsHorizontalRailEnabled()
		{
			bool __retVal = global::Windows.UI.Xaml.Controls.IScrollViewer__Impl.Stubs.get_IsHorizontalRailEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsHorizontalRailEnabled")]
		public void put_IsHorizontalRailEnabled(bool value)
		{
			global::Windows.UI.Xaml.Controls.IScrollViewer__Impl.Stubs.put_IsHorizontalRailEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsVerticalRailEnabled")]
		public bool get_IsVerticalRailEnabled()
		{
			bool __retVal = global::Windows.UI.Xaml.Controls.IScrollViewer__Impl.Stubs.get_IsVerticalRailEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsVerticalRailEnabled")]
		public void put_IsVerticalRailEnabled(bool value)
		{
			global::Windows.UI.Xaml.Controls.IScrollViewer__Impl.Stubs.put_IsVerticalRailEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalScrollMode")]
		public global::Windows.UI.Xaml.Controls.ScrollMode get_HorizontalScrollMode()
		{
			global::Windows.UI.Xaml.Controls.ScrollMode __retVal = global::Windows.UI.Xaml.Controls.IScrollViewer__Impl.Stubs.get_HorizontalScrollMode(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalScrollMode")]
		public void put_HorizontalScrollMode(global::Windows.UI.Xaml.Controls.ScrollMode value)
		{
			global::Windows.UI.Xaml.Controls.IScrollViewer__Impl.Stubs.put_HorizontalScrollMode(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalScrollMode")]
		public global::Windows.UI.Xaml.Controls.ScrollMode get_VerticalScrollMode()
		{
			global::Windows.UI.Xaml.Controls.ScrollMode __retVal = global::Windows.UI.Xaml.Controls.IScrollViewer__Impl.Stubs.get_VerticalScrollMode(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalScrollMode")]
		public void put_VerticalScrollMode(global::Windows.UI.Xaml.Controls.ScrollMode value)
		{
			global::Windows.UI.Xaml.Controls.IScrollViewer__Impl.Stubs.put_VerticalScrollMode(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ZoomMode")]
		public global::Windows.UI.Xaml.Controls.ZoomMode get_ZoomMode()
		{
			global::Windows.UI.Xaml.Controls.ZoomMode __retVal = global::Windows.UI.Xaml.Controls.IScrollViewer__Impl.Stubs.get_ZoomMode(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ZoomMode")]
		public void put_ZoomMode(global::Windows.UI.Xaml.Controls.ZoomMode value)
		{
			global::Windows.UI.Xaml.Controls.IScrollViewer__Impl.Stubs.put_ZoomMode(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ViewChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ViewChanged(global::System.EventHandler<global::Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IScrollViewer__Impl.Stubs.add_ViewChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ViewChanged")]
		public void remove_ViewChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IScrollViewer__Impl.Stubs.remove_ViewChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsDeferredScrollingEnabled")]
		public bool get_IsDeferredScrollingEnabled()
		{
			bool __retVal = global::Windows.UI.Xaml.Controls.IScrollViewer__Impl.Stubs.get_IsDeferredScrollingEnabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsDeferredScrollingEnabled")]
		public void put_IsDeferredScrollingEnabled(bool value)
		{
			global::Windows.UI.Xaml.Controls.IScrollViewer__Impl.Stubs.put_IsDeferredScrollingEnabled(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ViewChanging")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ViewChanging(global::System.EventHandler<global::Windows.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IScrollViewer2__Impl.Stubs.add_ViewChanging(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ViewChanging")]
		public void remove_ViewChanging(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IScrollViewer2__Impl.Stubs.remove_ViewChanging(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DirectManipulationStarted")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DirectManipulationStarted(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IScrollViewer3__Impl.Stubs.add_DirectManipulationStarted(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DirectManipulationStarted")]
		public void remove_DirectManipulationStarted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IScrollViewer3__Impl.Stubs.remove_DirectManipulationStarted(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DirectManipulationCompleted")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DirectManipulationCompleted(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IScrollViewer3__Impl.Stubs.add_DirectManipulationCompleted(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DirectManipulationCompleted")]
		public void remove_DirectManipulationCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IScrollViewer3__Impl.Stubs.remove_DirectManipulationCompleted(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AnchorRequested")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AnchorRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ScrollViewer, global::Windows.UI.Xaml.Controls.AnchorRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IScrollViewer4__Impl.Stubs.add_AnchorRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AnchorRequested")]
		public void remove_AnchorRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IScrollViewer4__Impl.Stubs.remove_AnchorRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static global::Windows.UI.Xaml.Controls.ScrollBarVisibility GetHorizontalScrollBarVisibility(global::Windows.UI.Xaml.DependencyObject element)
		{
			global::Windows.UI.Xaml.Controls.ScrollBarVisibility retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IScrollViewerStatics_GetHorizontalScrollBarVisibility(
								"Windows.UI.Xaml.Controls.ScrollViewer", 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.Controls.ScrollBarVisibility __Factory_Windows_UI_Xaml_Controls__IScrollViewerStatics_GetHorizontalScrollBarVisibility(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject element)
		{
			global::Windows.UI.Xaml.Controls.ScrollBarVisibility __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.Controls.IScrollViewerStatics__Impl.Stubs.GetHorizontalScrollBarVisibility(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Controls.IScrollViewerStatics).TypeHandle
												), 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static void SetHorizontalScrollBarVisibility(
					global::Windows.UI.Xaml.DependencyObject element, 
					global::Windows.UI.Xaml.Controls.ScrollBarVisibility horizontalScrollBarVisibility)
		{
			__Factory_Windows_UI_Xaml_Controls__IScrollViewerStatics_SetHorizontalScrollBarVisibility(
								"Windows.UI.Xaml.Controls.ScrollViewer", 
								element, 
								horizontalScrollBarVisibility
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_UI_Xaml_Controls__IScrollViewerStatics_SetHorizontalScrollBarVisibility(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject element, 
					global::Windows.UI.Xaml.Controls.ScrollBarVisibility horizontalScrollBarVisibility)
		{
			global::Windows.UI.Xaml.Controls.IScrollViewerStatics__Impl.Stubs.SetHorizontalScrollBarVisibility(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Controls.IScrollViewerStatics).TypeHandle
												), 
								element, 
								horizontalScrollBarVisibility
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static global::Windows.UI.Xaml.Controls.ScrollBarVisibility GetVerticalScrollBarVisibility(global::Windows.UI.Xaml.DependencyObject element)
		{
			global::Windows.UI.Xaml.Controls.ScrollBarVisibility retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IScrollViewerStatics_GetVerticalScrollBarVisibility(
								"Windows.UI.Xaml.Controls.ScrollViewer", 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.Controls.ScrollBarVisibility __Factory_Windows_UI_Xaml_Controls__IScrollViewerStatics_GetVerticalScrollBarVisibility(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject element)
		{
			global::Windows.UI.Xaml.Controls.ScrollBarVisibility __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.Controls.IScrollViewerStatics__Impl.Stubs.GetVerticalScrollBarVisibility(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Controls.IScrollViewerStatics).TypeHandle
												), 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static void SetVerticalScrollBarVisibility(
					global::Windows.UI.Xaml.DependencyObject element, 
					global::Windows.UI.Xaml.Controls.ScrollBarVisibility verticalScrollBarVisibility)
		{
			__Factory_Windows_UI_Xaml_Controls__IScrollViewerStatics_SetVerticalScrollBarVisibility(
								"Windows.UI.Xaml.Controls.ScrollViewer", 
								element, 
								verticalScrollBarVisibility
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_UI_Xaml_Controls__IScrollViewerStatics_SetVerticalScrollBarVisibility(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject element, 
					global::Windows.UI.Xaml.Controls.ScrollBarVisibility verticalScrollBarVisibility)
		{
			global::Windows.UI.Xaml.Controls.IScrollViewerStatics__Impl.Stubs.SetVerticalScrollBarVisibility(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Controls.IScrollViewerStatics).TypeHandle
												), 
								element, 
								verticalScrollBarVisibility
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static global::Windows.UI.Xaml.Controls.ScrollMode GetHorizontalScrollMode(global::Windows.UI.Xaml.DependencyObject element)
		{
			global::Windows.UI.Xaml.Controls.ScrollMode retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IScrollViewerStatics_GetHorizontalScrollMode(
								"Windows.UI.Xaml.Controls.ScrollViewer", 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.Controls.ScrollMode __Factory_Windows_UI_Xaml_Controls__IScrollViewerStatics_GetHorizontalScrollMode(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject element)
		{
			global::Windows.UI.Xaml.Controls.ScrollMode __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.Controls.IScrollViewerStatics__Impl.Stubs.GetHorizontalScrollMode(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Controls.IScrollViewerStatics).TypeHandle
												), 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static void SetHorizontalScrollMode(
					global::Windows.UI.Xaml.DependencyObject element, 
					global::Windows.UI.Xaml.Controls.ScrollMode horizontalScrollMode)
		{
			__Factory_Windows_UI_Xaml_Controls__IScrollViewerStatics_SetHorizontalScrollMode(
								"Windows.UI.Xaml.Controls.ScrollViewer", 
								element, 
								horizontalScrollMode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_UI_Xaml_Controls__IScrollViewerStatics_SetHorizontalScrollMode(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject element, 
					global::Windows.UI.Xaml.Controls.ScrollMode horizontalScrollMode)
		{
			global::Windows.UI.Xaml.Controls.IScrollViewerStatics__Impl.Stubs.SetHorizontalScrollMode(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Controls.IScrollViewerStatics).TypeHandle
												), 
								element, 
								horizontalScrollMode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static global::Windows.UI.Xaml.Controls.ScrollMode GetVerticalScrollMode(global::Windows.UI.Xaml.DependencyObject element)
		{
			global::Windows.UI.Xaml.Controls.ScrollMode retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IScrollViewerStatics_GetVerticalScrollMode(
								"Windows.UI.Xaml.Controls.ScrollViewer", 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.Controls.ScrollMode __Factory_Windows_UI_Xaml_Controls__IScrollViewerStatics_GetVerticalScrollMode(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject element)
		{
			global::Windows.UI.Xaml.Controls.ScrollMode __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.Controls.IScrollViewerStatics__Impl.Stubs.GetVerticalScrollMode(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Controls.IScrollViewerStatics).TypeHandle
												), 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static void SetVerticalScrollMode(
					global::Windows.UI.Xaml.DependencyObject element, 
					global::Windows.UI.Xaml.Controls.ScrollMode verticalScrollMode)
		{
			__Factory_Windows_UI_Xaml_Controls__IScrollViewerStatics_SetVerticalScrollMode(
								"Windows.UI.Xaml.Controls.ScrollViewer", 
								element, 
								verticalScrollMode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_UI_Xaml_Controls__IScrollViewerStatics_SetVerticalScrollMode(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject element, 
					global::Windows.UI.Xaml.Controls.ScrollMode verticalScrollMode)
		{
			global::Windows.UI.Xaml.Controls.IScrollViewerStatics__Impl.Stubs.SetVerticalScrollMode(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Controls.IScrollViewerStatics).TypeHandle
												), 
								element, 
								verticalScrollMode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static bool GetIsDeferredScrollingEnabled(global::Windows.UI.Xaml.DependencyObject element)
		{
			bool retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IScrollViewerStatics_GetIsDeferredScrollingEnabled(
								"Windows.UI.Xaml.Controls.ScrollViewer", 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static bool __Factory_Windows_UI_Xaml_Controls__IScrollViewerStatics_GetIsDeferredScrollingEnabled(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject element)
		{
			bool __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.Controls.IScrollViewerStatics__Impl.Stubs.GetIsDeferredScrollingEnabled(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Controls.IScrollViewerStatics).TypeHandle
												), 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static void SetIsDeferredScrollingEnabled(
					global::Windows.UI.Xaml.DependencyObject element, 
					bool isDeferredScrollingEnabled)
		{
			__Factory_Windows_UI_Xaml_Controls__IScrollViewerStatics_SetIsDeferredScrollingEnabled(
								"Windows.UI.Xaml.Controls.ScrollViewer", 
								element, 
								isDeferredScrollingEnabled
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_UI_Xaml_Controls__IScrollViewerStatics_SetIsDeferredScrollingEnabled(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject element, 
					bool isDeferredScrollingEnabled)
		{
			global::Windows.UI.Xaml.Controls.IScrollViewerStatics__Impl.Stubs.SetIsDeferredScrollingEnabled(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Controls.IScrollViewerStatics).TypeHandle
												), 
								element, 
								isDeferredScrollingEnabled
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ScrollViewer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IScrollViewerViewChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ScrollViewerViewChangedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IScrollViewerViewChangedEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ScrollViewerViewChangedEventArgs()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public ScrollViewerViewChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IScrollViewerViewChangingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ScrollViewerViewChangingEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IScrollViewerViewChangingEventArgs
	{
		public ScrollViewerViewChangingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IAnchorRequestedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AnchorRequestedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IAnchorRequestedEventArgs
	{
		public AnchorRequestedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IPanel))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Panel : global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.Controls.IPanel
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Children")]
		public virtual global::Windows.UI.Xaml.Controls.UIElementCollection get_Children()
		{
			global::Windows.UI.Xaml.Controls.UIElementCollection __retVal = global::Windows.UI.Xaml.Controls.IPanel__Impl.Stubs.get_Children(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Background")]
		public virtual global::Windows.UI.Xaml.Media.Brush get_Background()
		{
			global::Windows.UI.Xaml.Media.Brush __retVal = global::Windows.UI.Xaml.Controls.IPanel__Impl.Stubs.get_Background(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Background")]
		public virtual void put_Background(global::Windows.UI.Xaml.Media.Brush value)
		{
			global::Windows.UI.Xaml.Controls.IPanel__Impl.Stubs.put_Background(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Panel(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.UIElement>))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class UIElementCollection : global::System.__ComObject, global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>, global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>, global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.UIElement>
	{
		int global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>.Count
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Count(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>)this));
			}
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>.IsReadOnly
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.IsReadOnly(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>)this));
			}
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>.Add(global::Windows.UI.Xaml.UIElement item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Add(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>.Clear()
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Clear(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>)this));
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>.Contains(global::Windows.UI.Xaml.UIElement item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Contains(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>.CopyTo(
					global::Windows.UI.Xaml.UIElement[] array, 
					int arrayindex)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.CopyTo(
								this, 
								array, 
								arrayindex
							);
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>.Remove(global::Windows.UI.Xaml.UIElement item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Remove(
								this, 
								item
							);
		}

		global::Windows.UI.Xaml.UIElement global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>.this[int index]
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Indexer_Get(
									((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>)this), 
									index
								);
			}
			set
			{
				global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Indexer_Set(
									this, 
									index, 
									value
								);
			}
		}

		int global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>.IndexOf(global::Windows.UI.Xaml.UIElement item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.IndexOf(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>.Insert(
					int index, 
					global::Windows.UI.Xaml.UIElement item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Insert(
								this, 
								index, 
								item
							);
		}

		void global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>.RemoveAt(int index)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.RemoveAt(
								((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>)this), 
								index
							);
		}

		global::System.Collections.Generic.IEnumerator<global::Windows.UI.Xaml.UIElement> global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.UIElement>.GetEnumerator()
		{
			global::System.RuntimeTypeHandle dummySharedDynamicAdapter = typeof(global::System.Runtime.InteropServices.WindowsRuntime.IIterableSharedReferenceTypesDynamicAdapter<global::Windows.UI.Xaml.UIElement>).TypeHandle;
			return (global::System.Collections.Generic.IEnumerator<global::Windows.UI.Xaml.UIElement>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.UIElement>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.UIElement>).TypeHandle
							);
		}

		public UIElementCollection(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IGrid))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IGrid2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IGrid3))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Grid : global::Windows.UI.Xaml.Controls.Panel, global::Windows.UI.Xaml.Controls.IGrid, global::Windows.UI.Xaml.Controls.IGrid2, global::Windows.UI.Xaml.Controls.IGrid3
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Grid() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IGridFactory_CreateInstance("Windows.UI.Xaml.Controls.Grid");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IGridFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.Grid).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IGridFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IGridFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IGridFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IGridFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RowDefinitions")]
		public virtual global::Windows.UI.Xaml.Controls.RowDefinitionCollection get_RowDefinitions()
		{
			global::Windows.UI.Xaml.Controls.RowDefinitionCollection __retVal = global::Windows.UI.Xaml.Controls.IGrid__Impl.Stubs.get_RowDefinitions(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColumnDefinitions")]
		public virtual global::Windows.UI.Xaml.Controls.ColumnDefinitionCollection get_ColumnDefinitions()
		{
			global::Windows.UI.Xaml.Controls.ColumnDefinitionCollection __retVal = global::Windows.UI.Xaml.Controls.IGrid__Impl.Stubs.get_ColumnDefinitions(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BorderBrush")]
		public virtual global::Windows.UI.Xaml.Media.Brush get_BorderBrush()
		{
			global::Windows.UI.Xaml.Media.Brush __retVal = global::Windows.UI.Xaml.Controls.IGrid2__Impl.Stubs.get_BorderBrush(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BorderBrush")]
		public virtual void put_BorderBrush(global::Windows.UI.Xaml.Media.Brush value)
		{
			global::Windows.UI.Xaml.Controls.IGrid2__Impl.Stubs.put_BorderBrush(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BorderThickness")]
		public virtual global::Windows.UI.Xaml.Thickness get_BorderThickness()
		{
			global::Windows.UI.Xaml.Thickness __retVal = global::Windows.UI.Xaml.Controls.IGrid2__Impl.Stubs.get_BorderThickness(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BorderThickness")]
		public virtual void put_BorderThickness(global::Windows.UI.Xaml.Thickness value)
		{
			global::Windows.UI.Xaml.Controls.IGrid2__Impl.Stubs.put_BorderThickness(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CornerRadius")]
		public virtual global::Windows.UI.Xaml.CornerRadius get_CornerRadius()
		{
			global::Windows.UI.Xaml.CornerRadius __retVal = global::Windows.UI.Xaml.Controls.IGrid2__Impl.Stubs.get_CornerRadius(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CornerRadius")]
		public virtual void put_CornerRadius(global::Windows.UI.Xaml.CornerRadius value)
		{
			global::Windows.UI.Xaml.Controls.IGrid2__Impl.Stubs.put_CornerRadius(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Padding")]
		public virtual global::Windows.UI.Xaml.Thickness get_Padding()
		{
			global::Windows.UI.Xaml.Thickness __retVal = global::Windows.UI.Xaml.Controls.IGrid2__Impl.Stubs.get_Padding(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Padding")]
		public virtual void put_Padding(global::Windows.UI.Xaml.Thickness value)
		{
			global::Windows.UI.Xaml.Controls.IGrid2__Impl.Stubs.put_Padding(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColumnSpacing")]
		public virtual double get_ColumnSpacing()
		{
			double __retVal = global::Windows.UI.Xaml.Controls.IGrid3__Impl.Stubs.get_ColumnSpacing(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ColumnSpacing")]
		public virtual void put_ColumnSpacing(double value)
		{
			global::Windows.UI.Xaml.Controls.IGrid3__Impl.Stubs.put_ColumnSpacing(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static int GetRow(global::Windows.UI.Xaml.FrameworkElement element)
		{
			int retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IGridStatics_GetRow(
								"Windows.UI.Xaml.Controls.Grid", 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static int __Factory_Windows_UI_Xaml_Controls__IGridStatics_GetRow(
					string typeName, 
					global::Windows.UI.Xaml.FrameworkElement element)
		{
			int __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.Controls.IGridStatics__Impl.Stubs.GetRow(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Controls.IGridStatics).TypeHandle
												), 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static void SetRow(
					global::Windows.UI.Xaml.FrameworkElement element, 
					int value)
		{
			__Factory_Windows_UI_Xaml_Controls__IGridStatics_SetRow(
								"Windows.UI.Xaml.Controls.Grid", 
								element, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_UI_Xaml_Controls__IGridStatics_SetRow(
					string typeName, 
					global::Windows.UI.Xaml.FrameworkElement element, 
					int value)
		{
			global::Windows.UI.Xaml.Controls.IGridStatics__Impl.Stubs.SetRow(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Controls.IGridStatics).TypeHandle
												), 
								element, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static int GetColumn(global::Windows.UI.Xaml.FrameworkElement element)
		{
			int retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IGridStatics_GetColumn(
								"Windows.UI.Xaml.Controls.Grid", 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static int __Factory_Windows_UI_Xaml_Controls__IGridStatics_GetColumn(
					string typeName, 
					global::Windows.UI.Xaml.FrameworkElement element)
		{
			int __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.Controls.IGridStatics__Impl.Stubs.GetColumn(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Controls.IGridStatics).TypeHandle
												), 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static void SetColumn(
					global::Windows.UI.Xaml.FrameworkElement element, 
					int value)
		{
			__Factory_Windows_UI_Xaml_Controls__IGridStatics_SetColumn(
								"Windows.UI.Xaml.Controls.Grid", 
								element, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_UI_Xaml_Controls__IGridStatics_SetColumn(
					string typeName, 
					global::Windows.UI.Xaml.FrameworkElement element, 
					int value)
		{
			global::Windows.UI.Xaml.Controls.IGridStatics__Impl.Stubs.SetColumn(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Controls.IGridStatics).TypeHandle
												), 
								element, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static int GetRowSpan(global::Windows.UI.Xaml.FrameworkElement element)
		{
			int retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IGridStatics_GetRowSpan(
								"Windows.UI.Xaml.Controls.Grid", 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static int __Factory_Windows_UI_Xaml_Controls__IGridStatics_GetRowSpan(
					string typeName, 
					global::Windows.UI.Xaml.FrameworkElement element)
		{
			int __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.Controls.IGridStatics__Impl.Stubs.GetRowSpan(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Controls.IGridStatics).TypeHandle
												), 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static void SetRowSpan(
					global::Windows.UI.Xaml.FrameworkElement element, 
					int value)
		{
			__Factory_Windows_UI_Xaml_Controls__IGridStatics_SetRowSpan(
								"Windows.UI.Xaml.Controls.Grid", 
								element, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_UI_Xaml_Controls__IGridStatics_SetRowSpan(
					string typeName, 
					global::Windows.UI.Xaml.FrameworkElement element, 
					int value)
		{
			global::Windows.UI.Xaml.Controls.IGridStatics__Impl.Stubs.SetRowSpan(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Controls.IGridStatics).TypeHandle
												), 
								element, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Grid(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.RowDefinition>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Controls.RowDefinition>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Controls.RowDefinition>))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class RowDefinitionCollection : global::System.__ComObject, global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.RowDefinition>, global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Controls.RowDefinition>, global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Controls.RowDefinition>
	{
		int global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Controls.RowDefinition>.Count
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Count(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.RowDefinition>)this));
			}
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Controls.RowDefinition>.IsReadOnly
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.IsReadOnly(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.RowDefinition>)this));
			}
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Controls.RowDefinition>.Add(global::Windows.UI.Xaml.Controls.RowDefinition item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Add(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Controls.RowDefinition>.Clear()
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Clear(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.RowDefinition>)this));
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Controls.RowDefinition>.Contains(global::Windows.UI.Xaml.Controls.RowDefinition item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Contains(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Controls.RowDefinition>.CopyTo(
					global::Windows.UI.Xaml.Controls.RowDefinition[] array, 
					int arrayindex)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.CopyTo(
								this, 
								array, 
								arrayindex
							);
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Controls.RowDefinition>.Remove(global::Windows.UI.Xaml.Controls.RowDefinition item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Remove(
								this, 
								item
							);
		}

		global::Windows.UI.Xaml.Controls.RowDefinition global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.RowDefinition>.this[int index]
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Indexer_Get(
									((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.RowDefinition>)this), 
									index
								);
			}
			set
			{
				global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Indexer_Set(
									this, 
									index, 
									value
								);
			}
		}

		int global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.RowDefinition>.IndexOf(global::Windows.UI.Xaml.Controls.RowDefinition item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.IndexOf(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.RowDefinition>.Insert(
					int index, 
					global::Windows.UI.Xaml.Controls.RowDefinition item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Insert(
								this, 
								index, 
								item
							);
		}

		void global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.RowDefinition>.RemoveAt(int index)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.RemoveAt(
								((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.RowDefinition>)this), 
								index
							);
		}

		global::System.Collections.Generic.IEnumerator<global::Windows.UI.Xaml.Controls.RowDefinition> global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Controls.RowDefinition>.GetEnumerator()
		{
			global::System.RuntimeTypeHandle dummySharedDynamicAdapter = typeof(global::System.Runtime.InteropServices.WindowsRuntime.IIterableSharedReferenceTypesDynamicAdapter<global::Windows.UI.Xaml.Controls.RowDefinition>).TypeHandle;
			return (global::System.Collections.Generic.IEnumerator<global::Windows.UI.Xaml.Controls.RowDefinition>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Controls.RowDefinition>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Controls.RowDefinition>).TypeHandle
							);
		}

		public RowDefinitionCollection(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IRowDefinition))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class RowDefinition : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Controls.IRowDefinition
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public RowDefinition() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Controls.RowDefinition");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Height")]
		public global::Windows.UI.Xaml.GridLength get_Height()
		{
			global::Windows.UI.Xaml.GridLength __retVal = global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Stubs.get_Height(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Height")]
		public void put_Height(global::Windows.UI.Xaml.GridLength value)
		{
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Stubs.put_Height(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public RowDefinition(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.ColumnDefinition>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Controls.ColumnDefinition>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Controls.ColumnDefinition>))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ColumnDefinitionCollection : global::System.__ComObject, global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.ColumnDefinition>, global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Controls.ColumnDefinition>, global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Controls.ColumnDefinition>
	{
		int global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Controls.ColumnDefinition>.Count
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Count(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.ColumnDefinition>)this));
			}
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Controls.ColumnDefinition>.IsReadOnly
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.IsReadOnly(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.ColumnDefinition>)this));
			}
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Controls.ColumnDefinition>.Add(global::Windows.UI.Xaml.Controls.ColumnDefinition item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Add(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Controls.ColumnDefinition>.Clear()
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Clear(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.ColumnDefinition>)this));
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Controls.ColumnDefinition>.Contains(global::Windows.UI.Xaml.Controls.ColumnDefinition item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Contains(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Controls.ColumnDefinition>.CopyTo(
					global::Windows.UI.Xaml.Controls.ColumnDefinition[] array, 
					int arrayindex)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.CopyTo(
								this, 
								array, 
								arrayindex
							);
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Controls.ColumnDefinition>.Remove(global::Windows.UI.Xaml.Controls.ColumnDefinition item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Remove(
								this, 
								item
							);
		}

		global::Windows.UI.Xaml.Controls.ColumnDefinition global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.ColumnDefinition>.this[int index]
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Indexer_Get(
									((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.ColumnDefinition>)this), 
									index
								);
			}
			set
			{
				global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Indexer_Set(
									this, 
									index, 
									value
								);
			}
		}

		int global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.ColumnDefinition>.IndexOf(global::Windows.UI.Xaml.Controls.ColumnDefinition item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.IndexOf(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.ColumnDefinition>.Insert(
					int index, 
					global::Windows.UI.Xaml.Controls.ColumnDefinition item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Insert(
								this, 
								index, 
								item
							);
		}

		void global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.ColumnDefinition>.RemoveAt(int index)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.RemoveAt(
								((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.ColumnDefinition>)this), 
								index
							);
		}

		global::System.Collections.Generic.IEnumerator<global::Windows.UI.Xaml.Controls.ColumnDefinition> global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Controls.ColumnDefinition>.GetEnumerator()
		{
			global::System.RuntimeTypeHandle dummySharedDynamicAdapter = typeof(global::System.Runtime.InteropServices.WindowsRuntime.IIterableSharedReferenceTypesDynamicAdapter<global::Windows.UI.Xaml.Controls.ColumnDefinition>).TypeHandle;
			return (global::System.Collections.Generic.IEnumerator<global::Windows.UI.Xaml.Controls.ColumnDefinition>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Controls.ColumnDefinition>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Controls.ColumnDefinition>).TypeHandle
							);
		}

		public ColumnDefinitionCollection(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ColumnDefinition : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Controls.IColumnDefinition
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ColumnDefinition() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Controls.ColumnDefinition");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Width")]
		public global::Windows.UI.Xaml.GridLength get_Width()
		{
			global::Windows.UI.Xaml.GridLength __retVal = global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Stubs.get_Width(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Width")]
		public void put_Width(global::Windows.UI.Xaml.GridLength value)
		{
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Stubs.put_Width(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinWidth")]
		public double get_MinWidth()
		{
			double __retVal = global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Stubs.get_MinWidth(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinWidth")]
		public void put_MinWidth(double value)
		{
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Stubs.put_MinWidth(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ColumnDefinition(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IContentPresenter))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IContentPresenter4))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IContentPresenter5))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IContentPresenterOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ContentPresenter : global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.Controls.IContentPresenter, global::Windows.UI.Xaml.Controls.IContentPresenter4, global::Windows.UI.Xaml.Controls.IContentPresenter5, global::Windows.UI.Xaml.Controls.IContentPresenterOverrides
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ContentPresenter() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IContentPresenterFactory_CreateInstance("Windows.UI.Xaml.Controls.ContentPresenter");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IContentPresenterFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.ContentPresenter).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IContentPresenterFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IContentPresenterFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IContentPresenterFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IContentPresenterFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		public virtual object get_Content()
		{
			object __retVal = global::Windows.UI.Xaml.Controls.IContentPresenter__Impl.Stubs.get_Content(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		public virtual void put_Content(object value)
		{
			global::Windows.UI.Xaml.Controls.IContentPresenter__Impl.Stubs.put_Content(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentTemplate")]
		public virtual global::Windows.UI.Xaml.DataTemplate get_ContentTemplate()
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Windows.UI.Xaml.Controls.IContentPresenter__Impl.Stubs.get_ContentTemplate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContentTemplate")]
		public virtual void put_ContentTemplate(global::Windows.UI.Xaml.DataTemplate value)
		{
			global::Windows.UI.Xaml.Controls.IContentPresenter__Impl.Stubs.put_ContentTemplate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentTransitions")]
		public virtual global::Windows.UI.Xaml.Media.Animation.TransitionCollection get_ContentTransitions()
		{
			global::Windows.UI.Xaml.Media.Animation.TransitionCollection __retVal = global::Windows.UI.Xaml.Controls.IContentPresenter__Impl.Stubs.get_ContentTransitions(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContentTransitions")]
		public virtual void put_ContentTransitions(global::Windows.UI.Xaml.Media.Animation.TransitionCollection value)
		{
			global::Windows.UI.Xaml.Controls.IContentPresenter__Impl.Stubs.put_ContentTransitions(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontWeight")]
		public virtual global::Windows.UI.Text.FontWeight get_FontWeight()
		{
			global::Windows.UI.Text.FontWeight __retVal = global::Windows.UI.Xaml.Controls.IContentPresenter__Impl.Stubs.get_FontWeight(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontWeight")]
		public virtual void put_FontWeight(global::Windows.UI.Text.FontWeight value)
		{
			global::Windows.UI.Xaml.Controls.IContentPresenter__Impl.Stubs.put_FontWeight(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Foreground")]
		public virtual global::Windows.UI.Xaml.Media.Brush get_Foreground()
		{
			global::Windows.UI.Xaml.Media.Brush __retVal = global::Windows.UI.Xaml.Controls.IContentPresenter__Impl.Stubs.get_Foreground(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Foreground")]
		public virtual void put_Foreground(global::Windows.UI.Xaml.Media.Brush value)
		{
			global::Windows.UI.Xaml.Controls.IContentPresenter__Impl.Stubs.put_Foreground(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TextWrapping")]
		public virtual global::Windows.UI.Xaml.TextWrapping get_TextWrapping()
		{
			global::Windows.UI.Xaml.TextWrapping __retVal = global::Windows.UI.Xaml.Controls.IContentPresenter4__Impl.Stubs.get_TextWrapping(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TextWrapping")]
		public virtual void put_TextWrapping(global::Windows.UI.Xaml.TextWrapping value)
		{
			global::Windows.UI.Xaml.Controls.IContentPresenter4__Impl.Stubs.put_TextWrapping(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BorderBrush")]
		public virtual global::Windows.UI.Xaml.Media.Brush get_BorderBrush()
		{
			global::Windows.UI.Xaml.Media.Brush __retVal = global::Windows.UI.Xaml.Controls.IContentPresenter4__Impl.Stubs.get_BorderBrush(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BorderBrush")]
		public virtual void put_BorderBrush(global::Windows.UI.Xaml.Media.Brush value)
		{
			global::Windows.UI.Xaml.Controls.IContentPresenter4__Impl.Stubs.put_BorderBrush(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BorderThickness")]
		public virtual global::Windows.UI.Xaml.Thickness get_BorderThickness()
		{
			global::Windows.UI.Xaml.Thickness __retVal = global::Windows.UI.Xaml.Controls.IContentPresenter4__Impl.Stubs.get_BorderThickness(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BorderThickness")]
		public virtual void put_BorderThickness(global::Windows.UI.Xaml.Thickness value)
		{
			global::Windows.UI.Xaml.Controls.IContentPresenter4__Impl.Stubs.put_BorderThickness(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CornerRadius")]
		public virtual global::Windows.UI.Xaml.CornerRadius get_CornerRadius()
		{
			global::Windows.UI.Xaml.CornerRadius __retVal = global::Windows.UI.Xaml.Controls.IContentPresenter4__Impl.Stubs.get_CornerRadius(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CornerRadius")]
		public virtual void put_CornerRadius(global::Windows.UI.Xaml.CornerRadius value)
		{
			global::Windows.UI.Xaml.Controls.IContentPresenter4__Impl.Stubs.put_CornerRadius(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Padding")]
		public virtual global::Windows.UI.Xaml.Thickness get_Padding()
		{
			global::Windows.UI.Xaml.Thickness __retVal = global::Windows.UI.Xaml.Controls.IContentPresenter4__Impl.Stubs.get_Padding(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Padding")]
		public virtual void put_Padding(global::Windows.UI.Xaml.Thickness value)
		{
			global::Windows.UI.Xaml.Controls.IContentPresenter4__Impl.Stubs.put_Padding(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Background")]
		public virtual global::Windows.UI.Xaml.Media.Brush get_Background()
		{
			global::Windows.UI.Xaml.Media.Brush __retVal = global::Windows.UI.Xaml.Controls.IContentPresenter4__Impl.Stubs.get_Background(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Background")]
		public virtual void put_Background(global::Windows.UI.Xaml.Media.Brush value)
		{
			global::Windows.UI.Xaml.Controls.IContentPresenter4__Impl.Stubs.put_Background(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalContentAlignment")]
		public virtual global::Windows.UI.Xaml.HorizontalAlignment get_HorizontalContentAlignment()
		{
			global::Windows.UI.Xaml.HorizontalAlignment __retVal = global::Windows.UI.Xaml.Controls.IContentPresenter4__Impl.Stubs.get_HorizontalContentAlignment(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalContentAlignment")]
		public virtual void put_HorizontalContentAlignment(global::Windows.UI.Xaml.HorizontalAlignment value)
		{
			global::Windows.UI.Xaml.Controls.IContentPresenter4__Impl.Stubs.put_HorizontalContentAlignment(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalContentAlignment")]
		public virtual global::Windows.UI.Xaml.VerticalAlignment get_VerticalContentAlignment()
		{
			global::Windows.UI.Xaml.VerticalAlignment __retVal = global::Windows.UI.Xaml.Controls.IContentPresenter4__Impl.Stubs.get_VerticalContentAlignment(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalContentAlignment")]
		public virtual void put_VerticalContentAlignment(global::Windows.UI.Xaml.VerticalAlignment value)
		{
			global::Windows.UI.Xaml.Controls.IContentPresenter4__Impl.Stubs.put_VerticalContentAlignment(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BackgroundTransition")]
		public virtual global::Windows.UI.Xaml.BrushTransition get_BackgroundTransition()
		{
			global::Windows.UI.Xaml.BrushTransition __retVal = global::Windows.UI.Xaml.Controls.IContentPresenter5__Impl.Stubs.get_BackgroundTransition(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BackgroundTransition")]
		public virtual void put_BackgroundTransition(global::Windows.UI.Xaml.BrushTransition value)
		{
			global::Windows.UI.Xaml.Controls.IContentPresenter5__Impl.Stubs.put_BackgroundTransition(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BackgroundSizing")]
		public virtual global::Windows.UI.Xaml.Controls.BackgroundSizing get_BackgroundSizing()
		{
			global::Windows.UI.Xaml.Controls.BackgroundSizing __retVal = global::Windows.UI.Xaml.Controls.IContentPresenter5__Impl.Stubs.get_BackgroundSizing(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BackgroundSizing")]
		public virtual void put_BackgroundSizing(global::Windows.UI.Xaml.Controls.BackgroundSizing value)
		{
			global::Windows.UI.Xaml.Controls.IContentPresenter5__Impl.Stubs.put_BackgroundSizing(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IContentPresenterOverrides.OnContentTemplateChanged(
					global::Windows.UI.Xaml.DataTemplate oldContentTemplate, 
					global::Windows.UI.Xaml.DataTemplate newContentTemplate)
		{
			this.OnContentTemplateChanged(
								oldContentTemplate, 
								newContentTemplate
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnContentTemplateChanged(
					global::Windows.UI.Xaml.DataTemplate oldContentTemplate, 
					global::Windows.UI.Xaml.DataTemplate newContentTemplate)
		{
			global::Windows.UI.Xaml.Controls.IContentPresenterOverrides__Impl.Stubs.OnContentTemplateChanged(
								this, 
								oldContentTemplate, 
								newContentTemplate
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IContentPresenterOverrides.OnContentTemplateSelectorChanged(
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldContentTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newContentTemplateSelector)
		{
			this.OnContentTemplateSelectorChanged(
								oldContentTemplateSelector, 
								newContentTemplateSelector
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnContentTemplateSelectorChanged(
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldContentTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newContentTemplateSelector)
		{
			global::Windows.UI.Xaml.Controls.IContentPresenterOverrides__Impl.Stubs.OnContentTemplateSelectorChanged(
								this, 
								oldContentTemplateSelector, 
								newContentTemplateSelector
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ContentPresenter(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IIconElement))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class IconElement : global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.Controls.IIconElement
	{
		public IconElement(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IUserControl))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class UserControl : global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.IUserControl
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public UserControl() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IUserControlFactory_CreateInstance("Windows.UI.Xaml.Controls.UserControl");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IUserControlFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.UserControl).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IUserControlFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IUserControlFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IUserControlFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IUserControlFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		public virtual global::Windows.UI.Xaml.UIElement get_Content()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Windows.UI.Xaml.Controls.IUserControl__Impl.Stubs.get_Content(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		public virtual void put_Content(global::Windows.UI.Xaml.UIElement value)
		{
			global::Windows.UI.Xaml.Controls.IUserControl__Impl.Stubs.put_Content(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public UserControl(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IPage))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IPageOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Page : global::Windows.UI.Xaml.Controls.UserControl, global::Windows.UI.Xaml.Controls.IPage, global::Windows.UI.Xaml.Controls.IPageOverrides
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Page() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IPageFactory_CreateInstance("Windows.UI.Xaml.Controls.Page");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IPageFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.Page).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IPageFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IPageFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IPageFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IPageFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		void global::Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatedFrom(global::Windows.UI.Xaml.Navigation.NavigationEventArgs e)
		{
			this.OnNavigatedFrom(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnNavigatedFrom(global::Windows.UI.Xaml.Navigation.NavigationEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IPageOverrides__Impl.Stubs.OnNavigatedFrom(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatedTo(global::Windows.UI.Xaml.Navigation.NavigationEventArgs e)
		{
			this.OnNavigatedTo(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnNavigatedTo(global::Windows.UI.Xaml.Navigation.NavigationEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IPageOverrides__Impl.Stubs.OnNavigatedTo(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatingFrom(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs e)
		{
			this.OnNavigatingFrom(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnNavigatingFrom(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IPageOverrides__Impl.Stubs.OnNavigatingFrom(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Page(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IFontIcon))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class FontIcon : global::Windows.UI.Xaml.Controls.IconElement, global::Windows.UI.Xaml.Controls.IFontIcon
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public FontIcon() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IFontIconFactory_CreateInstance("Windows.UI.Xaml.Controls.FontIcon");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IFontIconFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.FontIcon).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IFontIconFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IFontIconFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IFontIconFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IFontIconFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Glyph")]
		public virtual string get_Glyph()
		{
			string __retVal = global::Windows.UI.Xaml.Controls.IFontIcon__Impl.Stubs.get_Glyph(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Glyph")]
		public virtual void put_Glyph(string value)
		{
			global::Windows.UI.Xaml.Controls.IFontIcon__Impl.Stubs.put_Glyph(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontSize")]
		public virtual double get_FontSize()
		{
			double __retVal = global::Windows.UI.Xaml.Controls.IFontIcon__Impl.Stubs.get_FontSize(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontSize")]
		public virtual void put_FontSize(double value)
		{
			global::Windows.UI.Xaml.Controls.IFontIcon__Impl.Stubs.put_FontSize(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontWeight")]
		public virtual global::Windows.UI.Text.FontWeight get_FontWeight()
		{
			global::Windows.UI.Text.FontWeight __retVal = global::Windows.UI.Xaml.Controls.IFontIcon__Impl.Stubs.get_FontWeight(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontWeight")]
		public virtual void put_FontWeight(global::Windows.UI.Text.FontWeight value)
		{
			global::Windows.UI.Xaml.Controls.IFontIcon__Impl.Stubs.put_FontWeight(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public FontIcon(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IStackPanel))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class StackPanel : global::Windows.UI.Xaml.Controls.Panel, global::Windows.UI.Xaml.Controls.IStackPanel, global::Windows.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public StackPanel() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IStackPanelFactory_CreateInstance("Windows.UI.Xaml.Controls.StackPanel");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IStackPanelFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.StackPanel).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IStackPanelFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IStackPanelFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IStackPanelFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IStackPanelFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Orientation")]
		public virtual global::Windows.UI.Xaml.Controls.Orientation get_Orientation()
		{
			global::Windows.UI.Xaml.Controls.Orientation __retVal = global::Windows.UI.Xaml.Controls.IStackPanel__Impl.Stubs.get_Orientation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Orientation")]
		public virtual void put_Orientation(global::Windows.UI.Xaml.Controls.Orientation value)
		{
			global::Windows.UI.Xaml.Controls.IStackPanel__Impl.Stubs.put_Orientation(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "HorizontalSnapPointsChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_HorizontalSnapPointsChanged(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo__Impl.Stubs.add_HorizontalSnapPointsChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "HorizontalSnapPointsChanged")]
		public virtual void remove_HorizontalSnapPointsChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo__Impl.Stubs.remove_HorizontalSnapPointsChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "VerticalSnapPointsChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_VerticalSnapPointsChanged(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo__Impl.Stubs.add_VerticalSnapPointsChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "VerticalSnapPointsChanged")]
		public virtual void remove_VerticalSnapPointsChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IScrollSnapPointsInfo__Impl.Stubs.remove_VerticalSnapPointsChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public StackPanel(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IBorder))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IBorder2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Border : global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.Controls.IBorder, global::Windows.UI.Xaml.Controls.IBorder2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Border() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Controls.Border");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BorderBrush")]
		public global::Windows.UI.Xaml.Media.Brush get_BorderBrush()
		{
			global::Windows.UI.Xaml.Media.Brush __retVal = global::Windows.UI.Xaml.Controls.IBorder__Impl.Stubs.get_BorderBrush(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BorderBrush")]
		public void put_BorderBrush(global::Windows.UI.Xaml.Media.Brush value)
		{
			global::Windows.UI.Xaml.Controls.IBorder__Impl.Stubs.put_BorderBrush(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BorderThickness")]
		public global::Windows.UI.Xaml.Thickness get_BorderThickness()
		{
			global::Windows.UI.Xaml.Thickness __retVal = global::Windows.UI.Xaml.Controls.IBorder__Impl.Stubs.get_BorderThickness(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BorderThickness")]
		public void put_BorderThickness(global::Windows.UI.Xaml.Thickness value)
		{
			global::Windows.UI.Xaml.Controls.IBorder__Impl.Stubs.put_BorderThickness(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Background")]
		public global::Windows.UI.Xaml.Media.Brush get_Background()
		{
			global::Windows.UI.Xaml.Media.Brush __retVal = global::Windows.UI.Xaml.Controls.IBorder__Impl.Stubs.get_Background(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Background")]
		public void put_Background(global::Windows.UI.Xaml.Media.Brush value)
		{
			global::Windows.UI.Xaml.Controls.IBorder__Impl.Stubs.put_Background(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Child")]
		public global::Windows.UI.Xaml.UIElement get_Child()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Windows.UI.Xaml.Controls.IBorder__Impl.Stubs.get_Child(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Child")]
		public void put_Child(global::Windows.UI.Xaml.UIElement value)
		{
			global::Windows.UI.Xaml.Controls.IBorder__Impl.Stubs.put_Child(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BackgroundSizing")]
		public global::Windows.UI.Xaml.Controls.BackgroundSizing get_BackgroundSizing()
		{
			global::Windows.UI.Xaml.Controls.BackgroundSizing __retVal = global::Windows.UI.Xaml.Controls.IBorder2__Impl.Stubs.get_BackgroundSizing(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BackgroundSizing")]
		public void put_BackgroundSizing(global::Windows.UI.Xaml.Controls.BackgroundSizing value)
		{
			global::Windows.UI.Xaml.Controls.IBorder2__Impl.Stubs.put_BackgroundSizing(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Border(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.ISlider))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Slider : global::Windows.UI.Xaml.Controls.Primitives.RangeBase, global::Windows.UI.Xaml.Controls.ISlider
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Slider() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__ISliderFactory_CreateInstance("Windows.UI.Xaml.Controls.Slider");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__ISliderFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.Slider).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.ISliderFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.ISliderFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.ISliderFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.ISliderFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StepFrequency")]
		public virtual double get_StepFrequency()
		{
			double __retVal = global::Windows.UI.Xaml.Controls.ISlider__Impl.Stubs.get_StepFrequency(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "StepFrequency")]
		public virtual void put_StepFrequency(double value)
		{
			global::Windows.UI.Xaml.Controls.ISlider__Impl.Stubs.put_StepFrequency(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Slider(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IRadioButton))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RadioButton : global::Windows.UI.Xaml.Controls.Primitives.ToggleButton, global::Windows.UI.Xaml.Controls.IRadioButton
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public RadioButton() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IRadioButtonFactory_CreateInstance("Windows.UI.Xaml.Controls.RadioButton");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IRadioButtonFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.RadioButton).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IRadioButtonFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IRadioButtonFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IRadioButtonFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IRadioButtonFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GroupName")]
		public virtual string get_GroupName()
		{
			string __retVal = global::Windows.UI.Xaml.Controls.IRadioButton__Impl.Stubs.get_GroupName(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "GroupName")]
		public virtual void put_GroupName(string value)
		{
			global::Windows.UI.Xaml.Controls.IRadioButton__Impl.Stubs.put_GroupName(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public RadioButton(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IMenuFlyout))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class MenuFlyout : global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase, global::Windows.UI.Xaml.Controls.IMenuFlyout
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public MenuFlyout() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IMenuFlyoutFactory_CreateInstance("Windows.UI.Xaml.Controls.MenuFlyout");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IMenuFlyoutFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.MenuFlyout).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IMenuFlyoutFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IMenuFlyoutFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IMenuFlyoutFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IMenuFlyoutFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Items")]
		public virtual global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.MenuFlyoutItemBase> get_Items()
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.MenuFlyoutItemBase> __retVal = global::Windows.UI.Xaml.Controls.IMenuFlyout__Impl.Stubs.get_Items(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public MenuFlyout(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IMenuFlyoutItemBase))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class MenuFlyoutItemBase : global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.IMenuFlyoutItemBase
	{
		public MenuFlyoutItemBase(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IMenuFlyoutItem))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IMenuFlyoutItem2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class MenuFlyoutItem : global::Windows.UI.Xaml.Controls.MenuFlyoutItemBase, global::Windows.UI.Xaml.Controls.IMenuFlyoutItem, global::Windows.UI.Xaml.Controls.IMenuFlyoutItem2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public MenuFlyoutItem() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IMenuFlyoutItemFactory_CreateInstance("Windows.UI.Xaml.Controls.MenuFlyoutItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IMenuFlyoutItemFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.MenuFlyoutItem).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IMenuFlyoutItemFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IMenuFlyoutItemFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IMenuFlyoutItemFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IMenuFlyoutItemFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Text")]
		public virtual string get_Text()
		{
			string __retVal = global::Windows.UI.Xaml.Controls.IMenuFlyoutItem__Impl.Stubs.get_Text(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Text")]
		public virtual void put_Text(string value)
		{
			global::Windows.UI.Xaml.Controls.IMenuFlyoutItem__Impl.Stubs.put_Text(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Click")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Click(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IMenuFlyoutItem__Impl.Stubs.add_Click(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Click")]
		public virtual void remove_Click(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IMenuFlyoutItem__Impl.Stubs.remove_Click(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Icon")]
		public virtual global::Windows.UI.Xaml.Controls.IconElement get_Icon()
		{
			global::Windows.UI.Xaml.Controls.IconElement __retVal = global::Windows.UI.Xaml.Controls.IMenuFlyoutItem2__Impl.Stubs.get_Icon(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Icon")]
		public virtual void put_Icon(global::Windows.UI.Xaml.Controls.IconElement value)
		{
			global::Windows.UI.Xaml.Controls.IMenuFlyoutItem2__Impl.Stubs.put_Icon(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public MenuFlyoutItem(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IToggleMenuFlyoutItem))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ToggleMenuFlyoutItem : global::Windows.UI.Xaml.Controls.MenuFlyoutItem, global::Windows.UI.Xaml.Controls.IToggleMenuFlyoutItem
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ToggleMenuFlyoutItem() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IToggleMenuFlyoutItemFactory_CreateInstance("Windows.UI.Xaml.Controls.ToggleMenuFlyoutItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IToggleMenuFlyoutItemFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.ToggleMenuFlyoutItem).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IToggleMenuFlyoutItemFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IToggleMenuFlyoutItemFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IToggleMenuFlyoutItemFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IToggleMenuFlyoutItemFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsChecked")]
		public virtual bool get_IsChecked()
		{
			bool __retVal = global::Windows.UI.Xaml.Controls.IToggleMenuFlyoutItem__Impl.Stubs.get_IsChecked(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsChecked")]
		public virtual void put_IsChecked(bool value)
		{
			global::Windows.UI.Xaml.Controls.IToggleMenuFlyoutItem__Impl.Stubs.put_IsChecked(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsCheckedProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_IsCheckedProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IToggleMenuFlyoutItemStatics_get_IsCheckedProperty("Windows.UI.Xaml.Controls.ToggleMenuFlyoutItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Windows_UI_Xaml_Controls__IToggleMenuFlyoutItemStatics_get_IsCheckedProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.Controls.IToggleMenuFlyoutItemStatics__Impl.Stubs.get_IsCheckedProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.Xaml.Controls.IToggleMenuFlyoutItemStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public ToggleMenuFlyoutItem(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IMenuFlyoutSubItem))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IMenuFlyoutSubItem2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class MenuFlyoutSubItem : global::Windows.UI.Xaml.Controls.MenuFlyoutItemBase, global::Windows.UI.Xaml.Controls.IMenuFlyoutSubItem, global::Windows.UI.Xaml.Controls.IMenuFlyoutSubItem2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public MenuFlyoutSubItem() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Controls.MenuFlyoutSubItem");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Items")]
		public global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.MenuFlyoutItemBase> get_Items()
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.MenuFlyoutItemBase> __retVal = global::Windows.UI.Xaml.Controls.IMenuFlyoutSubItem__Impl.Stubs.get_Items(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Text")]
		public string get_Text()
		{
			string __retVal = global::Windows.UI.Xaml.Controls.IMenuFlyoutSubItem__Impl.Stubs.get_Text(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Text")]
		public void put_Text(string value)
		{
			global::Windows.UI.Xaml.Controls.IMenuFlyoutSubItem__Impl.Stubs.put_Text(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Icon")]
		public global::Windows.UI.Xaml.Controls.IconElement get_Icon()
		{
			global::Windows.UI.Xaml.Controls.IconElement __retVal = global::Windows.UI.Xaml.Controls.IMenuFlyoutSubItem2__Impl.Stubs.get_Icon(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Icon")]
		public void put_Icon(global::Windows.UI.Xaml.Controls.IconElement value)
		{
			global::Windows.UI.Xaml.Controls.IMenuFlyoutSubItem2__Impl.Stubs.put_Icon(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public MenuFlyoutSubItem(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IItemsControl))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IItemsControlOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ItemsControl : global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.IItemsControl, global::Windows.UI.Xaml.Controls.IItemsControlOverrides
	{
		bool global::Windows.UI.Xaml.Controls.IItemsControlOverrides.IsItemItsOwnContainerOverride(object item)
		{
			bool __retVal_1 = this.IsItemItsOwnContainerOverride(item);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsItemItsOwnContainerOverride(object item)
		{
			bool __retVal = global::Windows.UI.Xaml.Controls.IItemsControlOverrides__Impl.Stubs.IsItemItsOwnContainerOverride(
								this, 
								item
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.DependencyObject global::Windows.UI.Xaml.Controls.IItemsControlOverrides.GetContainerForItemOverride()
		{
			global::Windows.UI.Xaml.DependencyObject __retVal_1 = this.GetContainerForItemOverride();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.DependencyObject GetContainerForItemOverride()
		{
			global::Windows.UI.Xaml.DependencyObject __retVal = global::Windows.UI.Xaml.Controls.IItemsControlOverrides__Impl.Stubs.GetContainerForItemOverride(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.Controls.IItemsControlOverrides.ClearContainerForItemOverride(
					global::Windows.UI.Xaml.DependencyObject element, 
					object item)
		{
			this.ClearContainerForItemOverride(
								element, 
								item
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void ClearContainerForItemOverride(
					global::Windows.UI.Xaml.DependencyObject element, 
					object item)
		{
			global::Windows.UI.Xaml.Controls.IItemsControlOverrides__Impl.Stubs.ClearContainerForItemOverride(
								this, 
								element, 
								item
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IItemsControlOverrides.PrepareContainerForItemOverride(
					global::Windows.UI.Xaml.DependencyObject element, 
					object item)
		{
			this.PrepareContainerForItemOverride(
								element, 
								item
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void PrepareContainerForItemOverride(
					global::Windows.UI.Xaml.DependencyObject element, 
					object item)
		{
			global::Windows.UI.Xaml.Controls.IItemsControlOverrides__Impl.Stubs.PrepareContainerForItemOverride(
								this, 
								element, 
								item
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IItemsControlOverrides.OnItemsChanged(object e)
		{
			this.OnItemsChanged(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnItemsChanged(object e)
		{
			global::Windows.UI.Xaml.Controls.IItemsControlOverrides__Impl.Stubs.OnItemsChanged(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IItemsControlOverrides.OnItemContainerStyleChanged(
					global::Windows.UI.Xaml.Style oldItemContainerStyle, 
					global::Windows.UI.Xaml.Style newItemContainerStyle)
		{
			this.OnItemContainerStyleChanged(
								oldItemContainerStyle, 
								newItemContainerStyle
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnItemContainerStyleChanged(
					global::Windows.UI.Xaml.Style oldItemContainerStyle, 
					global::Windows.UI.Xaml.Style newItemContainerStyle)
		{
			global::Windows.UI.Xaml.Controls.IItemsControlOverrides__Impl.Stubs.OnItemContainerStyleChanged(
								this, 
								oldItemContainerStyle, 
								newItemContainerStyle
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IItemsControlOverrides.OnItemContainerStyleSelectorChanged(
					global::Windows.UI.Xaml.Controls.StyleSelector oldItemContainerStyleSelector, 
					global::Windows.UI.Xaml.Controls.StyleSelector newItemContainerStyleSelector)
		{
			this.OnItemContainerStyleSelectorChanged(
								oldItemContainerStyleSelector, 
								newItemContainerStyleSelector
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnItemContainerStyleSelectorChanged(
					global::Windows.UI.Xaml.Controls.StyleSelector oldItemContainerStyleSelector, 
					global::Windows.UI.Xaml.Controls.StyleSelector newItemContainerStyleSelector)
		{
			global::Windows.UI.Xaml.Controls.IItemsControlOverrides__Impl.Stubs.OnItemContainerStyleSelectorChanged(
								this, 
								oldItemContainerStyleSelector, 
								newItemContainerStyleSelector
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IItemsControlOverrides.OnItemTemplateChanged(
					global::Windows.UI.Xaml.DataTemplate oldItemTemplate, 
					global::Windows.UI.Xaml.DataTemplate newItemTemplate)
		{
			this.OnItemTemplateChanged(
								oldItemTemplate, 
								newItemTemplate
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnItemTemplateChanged(
					global::Windows.UI.Xaml.DataTemplate oldItemTemplate, 
					global::Windows.UI.Xaml.DataTemplate newItemTemplate)
		{
			global::Windows.UI.Xaml.Controls.IItemsControlOverrides__Impl.Stubs.OnItemTemplateChanged(
								this, 
								oldItemTemplate, 
								newItemTemplate
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IItemsControlOverrides.OnItemTemplateSelectorChanged(
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldItemTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newItemTemplateSelector)
		{
			this.OnItemTemplateSelectorChanged(
								oldItemTemplateSelector, 
								newItemTemplateSelector
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnItemTemplateSelectorChanged(
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldItemTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newItemTemplateSelector)
		{
			global::Windows.UI.Xaml.Controls.IItemsControlOverrides__Impl.Stubs.OnItemTemplateSelectorChanged(
								this, 
								oldItemTemplateSelector, 
								newItemTemplateSelector
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IItemsControlOverrides.OnGroupStyleSelectorChanged(
					global::Windows.UI.Xaml.Controls.GroupStyleSelector oldGroupStyleSelector, 
					global::Windows.UI.Xaml.Controls.GroupStyleSelector newGroupStyleSelector)
		{
			this.OnGroupStyleSelectorChanged(
								oldGroupStyleSelector, 
								newGroupStyleSelector
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnGroupStyleSelectorChanged(
					global::Windows.UI.Xaml.Controls.GroupStyleSelector oldGroupStyleSelector, 
					global::Windows.UI.Xaml.Controls.GroupStyleSelector newGroupStyleSelector)
		{
			global::Windows.UI.Xaml.Controls.IItemsControlOverrides__Impl.Stubs.OnGroupStyleSelectorChanged(
								this, 
								oldGroupStyleSelector, 
								newGroupStyleSelector
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ItemsControl(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IStyleSelector))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IStyleSelectorOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class StyleSelector : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IStyleSelector, global::Windows.UI.Xaml.Controls.IStyleSelectorOverrides
	{
		global::Windows.UI.Xaml.Style global::Windows.UI.Xaml.Controls.IStyleSelectorOverrides.SelectStyleCore(
					object item, 
					global::Windows.UI.Xaml.DependencyObject container)
		{
			global::Windows.UI.Xaml.Style __retVal_1 = this.SelectStyleCore(
								item, 
								container
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Style SelectStyleCore(
					object item, 
					global::Windows.UI.Xaml.DependencyObject container)
		{
			global::Windows.UI.Xaml.Style __retVal = global::Windows.UI.Xaml.Controls.IStyleSelectorOverrides__Impl.Stubs.SelectStyleCore(
								this, 
								item, 
								container
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public StyleSelector(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IGroupStyleSelector))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IGroupStyleSelectorOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class GroupStyleSelector : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IGroupStyleSelector, global::Windows.UI.Xaml.Controls.IGroupStyleSelectorOverrides
	{
		global::Windows.UI.Xaml.Controls.GroupStyle global::Windows.UI.Xaml.Controls.IGroupStyleSelectorOverrides.SelectGroupStyleCore(
					object group, 
					uint level)
		{
			global::Windows.UI.Xaml.Controls.GroupStyle __retVal_1 = this.SelectGroupStyleCore(
								group, 
								level
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Controls.GroupStyle SelectGroupStyleCore(
					object group, 
					uint level)
		{
			global::Windows.UI.Xaml.Controls.GroupStyle __retVal = global::Windows.UI.Xaml.Controls.IGroupStyleSelectorOverrides__Impl.Stubs.SelectGroupStyleCore(
								this, 
								group, 
								level
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public GroupStyleSelector(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IGroupStyle))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IGroupStyle2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.ComponentModel.INotifyPropertyChanged))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class GroupStyle : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IGroupStyle, global::Windows.UI.Xaml.Controls.IGroupStyle2, global::System.ComponentModel.INotifyPropertyChanged
	{
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __add_PropertyChanged(global::System.ComponentModel.PropertyChangedEventHandler eventHandler)
		{
			return global::System.ComponentModel.INotifyPropertyChanged__Impl.RCWAdapter.add_PropertyChanged(
								this, 
								eventHandler
							);
		}

		void __remove_PropertyChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::System.ComponentModel.INotifyPropertyChanged__Impl.RCWAdapter.remove_PropertyChanged(
								this, 
								token
							);
		}

		public virtual event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			add
			{
				global::System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.AddEventHandler<global::System.ComponentModel.PropertyChangedEventHandler>(
									new global::System.Func<global::System.ComponentModel.PropertyChangedEventHandler, global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>(this.__add_PropertyChanged), 
									new global::System.Action<global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>(this.__remove_PropertyChanged), 
									value
								);
			}
			remove
			{
				global::System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveEventHandler<global::System.ComponentModel.PropertyChangedEventHandler>(
									new global::System.Action<global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>(this.__remove_PropertyChanged), 
									value
								);
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Panel")]
		public virtual global::Windows.UI.Xaml.Controls.ItemsPanelTemplate get_Panel()
		{
			global::Windows.UI.Xaml.Controls.ItemsPanelTemplate __retVal = global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.get_Panel(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Panel")]
		public virtual void put_Panel(global::Windows.UI.Xaml.Controls.ItemsPanelTemplate value)
		{
			global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.put_Panel(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContainerStyle")]
		public virtual global::Windows.UI.Xaml.Style get_ContainerStyle()
		{
			global::Windows.UI.Xaml.Style __retVal = global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.get_ContainerStyle(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContainerStyle")]
		public virtual void put_ContainerStyle(global::Windows.UI.Xaml.Style value)
		{
			global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.put_ContainerStyle(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContainerStyleSelector")]
		public virtual global::Windows.UI.Xaml.Controls.StyleSelector get_ContainerStyleSelector()
		{
			global::Windows.UI.Xaml.Controls.StyleSelector __retVal = global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.get_ContainerStyleSelector(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContainerStyleSelector")]
		public virtual void put_ContainerStyleSelector(global::Windows.UI.Xaml.Controls.StyleSelector value)
		{
			global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.put_ContainerStyleSelector(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplate")]
		public virtual global::Windows.UI.Xaml.DataTemplate get_HeaderTemplate()
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.get_HeaderTemplate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderTemplate")]
		public virtual void put_HeaderTemplate(global::Windows.UI.Xaml.DataTemplate value)
		{
			global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.put_HeaderTemplate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplateSelector")]
		public virtual global::Windows.UI.Xaml.Controls.DataTemplateSelector get_HeaderTemplateSelector()
		{
			global::Windows.UI.Xaml.Controls.DataTemplateSelector __retVal = global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.get_HeaderTemplateSelector(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderTemplateSelector")]
		public virtual void put_HeaderTemplateSelector(global::Windows.UI.Xaml.Controls.DataTemplateSelector value)
		{
			global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.put_HeaderTemplateSelector(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HidesIfEmpty")]
		public virtual bool get_HidesIfEmpty()
		{
			bool __retVal = global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.get_HidesIfEmpty(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HidesIfEmpty")]
		public virtual void put_HidesIfEmpty(bool value)
		{
			global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.put_HidesIfEmpty(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderContainerStyle")]
		public virtual global::Windows.UI.Xaml.Style get_HeaderContainerStyle()
		{
			global::Windows.UI.Xaml.Style __retVal = global::Windows.UI.Xaml.Controls.IGroupStyle2__Impl.Stubs.get_HeaderContainerStyle(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderContainerStyle")]
		public virtual void put_HeaderContainerStyle(global::Windows.UI.Xaml.Style value)
		{
			global::Windows.UI.Xaml.Controls.IGroupStyle2__Impl.Stubs.put_HeaderContainerStyle(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public GroupStyle(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IItemsPanelTemplate))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ItemsPanelTemplate : global::Windows.UI.Xaml.FrameworkTemplate, global::Windows.UI.Xaml.Controls.IItemsPanelTemplate
	{
		public ItemsPanelTemplate(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IAutoSuggestBox))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IAutoSuggestBox2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AutoSuggestBox : global::Windows.UI.Xaml.Controls.ItemsControl, global::Windows.UI.Xaml.Controls.IAutoSuggestBox, global::Windows.UI.Xaml.Controls.IAutoSuggestBox2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AutoSuggestBox() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Controls.AutoSuggestBox");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SuggestionChosen")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SuggestionChosen(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IAutoSuggestBox__Impl.Stubs.add_SuggestionChosen(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SuggestionChosen")]
		public void remove_SuggestionChosen(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IAutoSuggestBox__Impl.Stubs.remove_SuggestionChosen(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TextChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TextChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IAutoSuggestBox__Impl.Stubs.add_TextChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TextChanged")]
		public void remove_TextChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IAutoSuggestBox__Impl.Stubs.remove_TextChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "QuerySubmitted")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_QuerySubmitted(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IAutoSuggestBox2__Impl.Stubs.add_QuerySubmitted(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "QuerySubmitted")]
		public void remove_QuerySubmitted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IAutoSuggestBox2__Impl.Stubs.remove_QuerySubmitted(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public AutoSuggestBox(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IAutoSuggestBoxSuggestionChosenEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AutoSuggestBoxSuggestionChosenEventArgs : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Controls.IAutoSuggestBoxSuggestionChosenEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AutoSuggestBoxSuggestionChosenEventArgs() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public AutoSuggestBoxSuggestionChosenEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IAutoSuggestBoxTextChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AutoSuggestBoxTextChangedEventArgs : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Controls.IAutoSuggestBoxTextChangedEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AutoSuggestBoxTextChangedEventArgs() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public AutoSuggestBoxTextChangedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IAutoSuggestBoxQuerySubmittedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AutoSuggestBoxQuerySubmittedEventArgs : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Controls.IAutoSuggestBoxQuerySubmittedEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AutoSuggestBoxQuerySubmittedEventArgs() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public AutoSuggestBoxQuerySubmittedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.ISelectionChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class SelectionChangedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Controls.ISelectionChangedEventArgs
	{
		public SelectionChangedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IListViewItem))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ListViewItem : global::Windows.UI.Xaml.Controls.Primitives.SelectorItem, global::Windows.UI.Xaml.Controls.IListViewItem
	{
		public ListViewItem(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IListViewBase))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IListViewBase2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IListViewBase4))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ListViewBase : global::Windows.UI.Xaml.Controls.Primitives.Selector, global::Windows.UI.Xaml.Controls.IListViewBase, global::Windows.UI.Xaml.Controls.IListViewBase2, global::Windows.UI.Xaml.Controls.IListViewBase4
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ItemClick")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ItemClick(global::Windows.UI.Xaml.Controls.ItemClickEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Stubs.add_ItemClick(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ItemClick")]
		public virtual void remove_ItemClick(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Stubs.remove_ItemClick(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragItemsStarting")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragItemsStarting(global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Stubs.add_DragItemsStarting(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragItemsStarting")]
		public virtual void remove_DragItemsStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Stubs.remove_DragItemsStarting(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContainerContentChanging")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContainerContentChanging(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IListViewBase2__Impl.Stubs.add_ContainerContentChanging(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContainerContentChanging")]
		public virtual void remove_ContainerContentChanging(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IListViewBase2__Impl.Stubs.remove_ContainerContentChanging(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragItemsCompleted")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragItemsCompleted(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IListViewBase4__Impl.Stubs.add_DragItemsCompleted(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragItemsCompleted")]
		public virtual void remove_DragItemsCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IListViewBase4__Impl.Stubs.remove_DragItemsCompleted(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ChoosingItemContainer")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ChoosingItemContainer(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IListViewBase4__Impl.Stubs.add_ChoosingItemContainer(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ChoosingItemContainer")]
		public virtual void remove_ChoosingItemContainer(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IListViewBase4__Impl.Stubs.remove_ChoosingItemContainer(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ChoosingGroupHeaderContainer")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ChoosingGroupHeaderContainer(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IListViewBase4__Impl.Stubs.add_ChoosingGroupHeaderContainer(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ChoosingGroupHeaderContainer")]
		public virtual void remove_ChoosingGroupHeaderContainer(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IListViewBase4__Impl.Stubs.remove_ChoosingGroupHeaderContainer(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ListViewBase(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IItemClickEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ItemClickEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Controls.IItemClickEventArgs
	{
		public ItemClickEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IDragItemsStartingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DragItemsStartingEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IDragItemsStartingEventArgs
	{
		public DragItemsStartingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ContainerContentChangingEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ContainerContentChangingEventArgs()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public ContainerContentChangingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IDragItemsCompletedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DragItemsCompletedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IDragItemsCompletedEventArgs
	{
		public DragItemsCompletedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IChoosingItemContainerEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ChoosingItemContainerEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IChoosingItemContainerEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ChoosingItemContainerEventArgs()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public ChoosingItemContainerEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IChoosingGroupHeaderContainerEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ChoosingGroupHeaderContainerEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IChoosingGroupHeaderContainerEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ChoosingGroupHeaderContainerEventArgs()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public ChoosingGroupHeaderContainerEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IListView))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ListView : global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.IListView
	{
		public ListView(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IComboBox))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IComboBox6))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IComboBoxOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ComboBox : global::Windows.UI.Xaml.Controls.Primitives.Selector, global::Windows.UI.Xaml.Controls.IComboBox, global::Windows.UI.Xaml.Controls.IComboBox6, global::Windows.UI.Xaml.Controls.IComboBoxOverrides
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ComboBox() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IComboBoxFactory_CreateInstance("Windows.UI.Xaml.Controls.ComboBox");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IComboBoxFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.ComboBox).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IComboBoxFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IComboBoxFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IComboBoxFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IComboBoxFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DropDownClosed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DropDownClosed(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IComboBox__Impl.Stubs.add_DropDownClosed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DropDownClosed")]
		public virtual void remove_DropDownClosed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IComboBox__Impl.Stubs.remove_DropDownClosed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DropDownOpened")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DropDownOpened(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IComboBox__Impl.Stubs.add_DropDownOpened(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DropDownOpened")]
		public virtual void remove_DropDownOpened(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IComboBox__Impl.Stubs.remove_DropDownOpened(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TextSubmitted")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TextSubmitted(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ComboBox, global::Windows.UI.Xaml.Controls.ComboBoxTextSubmittedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IComboBox6__Impl.Stubs.add_TextSubmitted(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TextSubmitted")]
		public virtual void remove_TextSubmitted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IComboBox6__Impl.Stubs.remove_TextSubmitted(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IComboBoxOverrides.OnDropDownClosed(object e)
		{
			this.OnDropDownClosed(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnDropDownClosed(object e)
		{
			global::Windows.UI.Xaml.Controls.IComboBoxOverrides__Impl.Stubs.OnDropDownClosed(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IComboBoxOverrides.OnDropDownOpened(object e)
		{
			this.OnDropDownOpened(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnDropDownOpened(object e)
		{
			global::Windows.UI.Xaml.Controls.IComboBoxOverrides__Impl.Stubs.OnDropDownOpened(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ComboBox(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IComboBoxTextSubmittedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ComboBoxTextSubmittedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IComboBoxTextSubmittedEventArgs
	{
		public ComboBoxTextSubmittedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IAppBar))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IAppBar3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IAppBarOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IAppBarOverrides3))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class AppBar : global::Windows.UI.Xaml.Controls.ContentControl, global::Windows.UI.Xaml.Controls.IAppBar, global::Windows.UI.Xaml.Controls.IAppBar3, global::Windows.UI.Xaml.Controls.IAppBarOverrides, global::Windows.UI.Xaml.Controls.IAppBarOverrides3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Opened")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Opened(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IAppBar__Impl.Stubs.add_Opened(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Opened")]
		public virtual void remove_Opened(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IAppBar__Impl.Stubs.remove_Opened(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closed(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IAppBar__Impl.Stubs.add_Closed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closed")]
		public virtual void remove_Closed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IAppBar__Impl.Stubs.remove_Closed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Opening")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Opening(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IAppBar3__Impl.Stubs.add_Opening(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Opening")]
		public virtual void remove_Opening(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IAppBar3__Impl.Stubs.remove_Opening(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closing")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closing(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IAppBar3__Impl.Stubs.add_Closing(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closing")]
		public virtual void remove_Closing(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IAppBar3__Impl.Stubs.remove_Closing(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IAppBarOverrides.OnClosed(object e)
		{
			this.OnClosed(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnClosed(object e)
		{
			global::Windows.UI.Xaml.Controls.IAppBarOverrides__Impl.Stubs.OnClosed(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IAppBarOverrides.OnOpened(object e)
		{
			this.OnOpened(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnOpened(object e)
		{
			global::Windows.UI.Xaml.Controls.IAppBarOverrides__Impl.Stubs.OnOpened(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IAppBarOverrides3.OnClosing(object e)
		{
			this.OnClosing(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnClosing(object e)
		{
			global::Windows.UI.Xaml.Controls.IAppBarOverrides3__Impl.Stubs.OnClosing(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IAppBarOverrides3.OnOpening(object e)
		{
			this.OnOpening(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnOpening(object e)
		{
			global::Windows.UI.Xaml.Controls.IAppBarOverrides3__Impl.Stubs.OnOpening(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public AppBar(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.ICommandBar))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.ICommandBar3))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class CommandBar : global::Windows.UI.Xaml.Controls.AppBar, global::Windows.UI.Xaml.Controls.ICommandBar, global::Windows.UI.Xaml.Controls.ICommandBar3
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public CommandBar() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__ICommandBarFactory_CreateInstance("Windows.UI.Xaml.Controls.CommandBar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__ICommandBarFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.CommandBar).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.ICommandBarFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.ICommandBarFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.ICommandBarFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.ICommandBarFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DynamicOverflowItemsChanging")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DynamicOverflowItemsChanging(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.CommandBar, global::Windows.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.ICommandBar3__Impl.Stubs.add_DynamicOverflowItemsChanging(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DynamicOverflowItemsChanging")]
		public virtual void remove_DynamicOverflowItemsChanging(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.ICommandBar3__Impl.Stubs.remove_DynamicOverflowItemsChanging(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public CommandBar(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IDynamicOverflowItemsChangingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(196608)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DynamicOverflowItemsChangingEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IDynamicOverflowItemsChangingEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public DynamicOverflowItemsChangingEventArgs()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public DynamicOverflowItemsChangingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IAppBarSeparator))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class AppBarSeparator : global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.IAppBarSeparator, global::Windows.UI.Xaml.Controls.ICommandBarElement
	{
		public AppBarSeparator(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IMenuFlyoutSeparator))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class MenuFlyoutSeparator : global::Windows.UI.Xaml.Controls.MenuFlyoutItemBase, global::Windows.UI.Xaml.Controls.IMenuFlyoutSeparator
	{
		public MenuFlyoutSeparator(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IFrame))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Frame : global::Windows.UI.Xaml.Controls.ContentControl, global::Windows.UI.Xaml.Controls.IFrame
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Frame() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IFrameFactory_CreateInstance("Windows.UI.Xaml.Controls.Frame");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IFrameFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.Frame).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IFrameFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IFrameFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IFrameFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IFrameFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Navigated")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Navigated(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.add_Navigated(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Navigated")]
		public virtual void remove_Navigated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.remove_Navigated(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Navigating")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Navigating(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.add_Navigating(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Navigating")]
		public virtual void remove_Navigating(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.remove_Navigating(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationFailed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationFailed(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.add_NavigationFailed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationFailed")]
		public virtual void remove_NavigationFailed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.remove_NavigationFailed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationStopped")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationStopped(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.add_NavigationStopped(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationStopped")]
		public virtual void remove_NavigationStopped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.remove_NavigationStopped(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual bool Navigate(
					global::System.Type sourcePageType, 
					object parameter)
		{
			bool __retVal = global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.Navigate(
								this, 
								sourcePageType, 
								parameter
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public Frame(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControlFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControl
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontSize")]
		double get_FontSize();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontSize")]
		void put_FontSize(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontFamily")]
		global::Windows.UI.Xaml.Media.FontFamily get_FontFamily();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontFamily")]
		void put_FontFamily(global::Windows.UI.Xaml.Media.FontFamily value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontWeight")]
		global::Windows.UI.Text.FontWeight get_FontWeight();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontWeight")]
		void put_FontWeight(global::Windows.UI.Text.FontWeight value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Foreground")]
		global::Windows.UI.Xaml.Media.Brush get_Foreground();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Foreground")]
		void put_Foreground(global::Windows.UI.Xaml.Media.Brush value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsTabStop")]
		bool get_IsTabStop();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsTabStop")]
		void put_IsTabStop(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Template")]
		global::Windows.UI.Xaml.Controls.ControlTemplate get_Template();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Template")]
		void put_Template(global::Windows.UI.Xaml.Controls.ControlTemplate value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Padding")]
		global::Windows.UI.Xaml.Thickness get_Padding();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Padding")]
		void put_Padding(global::Windows.UI.Xaml.Thickness value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalContentAlignment")]
		global::Windows.UI.Xaml.HorizontalAlignment get_HorizontalContentAlignment();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalContentAlignment")]
		void put_HorizontalContentAlignment(global::Windows.UI.Xaml.HorizontalAlignment value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalContentAlignment")]
		global::Windows.UI.Xaml.VerticalAlignment get_VerticalContentAlignment();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalContentAlignment")]
		void put_VerticalContentAlignment(global::Windows.UI.Xaml.VerticalAlignment value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Background")]
		global::Windows.UI.Xaml.Media.Brush get_Background();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Background")]
		void put_Background(global::Windows.UI.Xaml.Media.Brush value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BorderThickness")]
		global::Windows.UI.Xaml.Thickness get_BorderThickness();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BorderThickness")]
		void put_BorderThickness(global::Windows.UI.Xaml.Thickness value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BorderBrush")]
		global::Windows.UI.Xaml.Media.Brush get_BorderBrush();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BorderBrush")]
		void put_BorderBrush(global::Windows.UI.Xaml.Media.Brush value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "IsEnabledChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_IsEnabledChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "IsEnabledChanged")]
		void remove_IsEnabledChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControlTemplate
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TargetType")]
		global::System.Type get_TargetType();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TargetType")]
		void put_TargetType(global::System.Type value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControl2
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControl3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UseSystemFocusVisuals")]
		bool get_UseSystemFocusVisuals();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UseSystemFocusVisuals")]
		void put_UseSystemFocusVisuals(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControl4
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "FocusEngaged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_FocusEngaged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.FocusEngagedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "FocusEngaged")]
		void remove_FocusEngaged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "FocusDisengaged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_FocusDisengaged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.FocusDisengagedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "FocusDisengaged")]
		void remove_FocusDisengaged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFocusEngagedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFocusDisengagedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControl5
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControl7
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BackgroundSizing")]
		global::Windows.UI.Xaml.Controls.BackgroundSizing get_BackgroundSizing();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BackgroundSizing")]
		void put_BackgroundSizing(global::Windows.UI.Xaml.Controls.BackgroundSizing value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CornerRadius")]
		global::Windows.UI.Xaml.CornerRadius get_CornerRadius();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CornerRadius")]
		void put_CornerRadius(global::Windows.UI.Xaml.CornerRadius value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControlProtected
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DefaultStyleKey")]
		object get_DefaultStyleKey();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DefaultStyleKey")]
		void put_DefaultStyleKey(object value);

		global::Windows.UI.Xaml.DependencyObject GetTemplateChild(string childName);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControlOverrides
	{
		void OnPointerEntered(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnPointerPressed(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnPointerMoved(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnPointerReleased(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnPointerExited(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnPointerCaptureLost(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnPointerCanceled(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnPointerWheelChanged(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnTapped(global::Windows.UI.Xaml.Input.TappedRoutedEventArgs e);

		void OnDoubleTapped(global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs e);

		void OnHolding(global::Windows.UI.Xaml.Input.HoldingRoutedEventArgs e);

		void OnRightTapped(global::Windows.UI.Xaml.Input.RightTappedRoutedEventArgs e);

		void OnManipulationStarting(global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e);

		void OnManipulationInertiaStarting(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e);

		void OnManipulationStarted(global::Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e);

		void OnManipulationDelta(global::Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e);

		void OnManipulationCompleted(global::Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e);

		void OnKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e);

		void OnKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e);

		void OnGotFocus(global::Windows.UI.Xaml.RoutedEventArgs e);

		void OnLostFocus(global::Windows.UI.Xaml.RoutedEventArgs e);

		void OnDragEnter(global::Windows.UI.Xaml.DragEventArgs e);

		void OnDragLeave(global::Windows.UI.Xaml.DragEventArgs e);

		void OnDragOver(global::Windows.UI.Xaml.DragEventArgs e);

		void OnDrop(global::Windows.UI.Xaml.DragEventArgs e);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControlOverrides6
	{
		void OnPreviewKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e);

		void OnPreviewKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e);

		void OnCharacterReceived(global::Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs e);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IImage
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		global::Windows.UI.Xaml.Media.ImageSource get_Source();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Source")]
		void put_Source(global::Windows.UI.Xaml.Media.ImageSource value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ImageFailed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ImageFailed(global::Windows.UI.Xaml.ExceptionRoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ImageFailed")]
		void remove_ImageFailed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ImageOpened")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ImageOpened(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ImageOpened")]
		void remove_ImageOpened(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContentControlFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContentControl
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		object get_Content();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		void put_Content(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentTemplate")]
		global::Windows.UI.Xaml.DataTemplate get_ContentTemplate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContentTemplate")]
		void put_ContentTemplate(global::Windows.UI.Xaml.DataTemplate value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentTransitions")]
		global::Windows.UI.Xaml.Media.Animation.TransitionCollection get_ContentTransitions();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContentTransitions")]
		void put_ContentTransitions(global::Windows.UI.Xaml.Media.Animation.TransitionCollection value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContentControlOverrides
	{
		void OnContentChanged(
					object oldContent, 
					object newContent);

		void OnContentTemplateChanged(
					global::Windows.UI.Xaml.DataTemplate oldContentTemplate, 
					global::Windows.UI.Xaml.DataTemplate newContentTemplate);

		void OnContentTemplateSelectorChanged(
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldContentTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newContentTemplateSelector);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataTemplateSelector
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataTemplateSelectorOverrides
	{
		global::Windows.UI.Xaml.DataTemplate SelectTemplateCore(
					object item, 
					global::Windows.UI.Xaml.DependencyObject container);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataTemplateSelectorOverrides2
	{
		global::Windows.UI.Xaml.DataTemplate SelectTemplateCore(object item);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IButtonFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IButton
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IToolTipServiceStatics
	{
		global::Windows.UI.Xaml.Controls.Primitives.PlacementMode GetPlacement(global::Windows.UI.Xaml.DependencyObject element);

		void SetPlacement(
					global::Windows.UI.Xaml.DependencyObject element, 
					global::Windows.UI.Xaml.Controls.Primitives.PlacementMode value);

		object GetToolTip(global::Windows.UI.Xaml.DependencyObject element);

		void SetToolTip(
					global::Windows.UI.Xaml.DependencyObject element, 
					object value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IToolTipService
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITextBlock
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontSize")]
		double get_FontSize();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontSize")]
		void put_FontSize(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontFamily")]
		global::Windows.UI.Xaml.Media.FontFamily get_FontFamily();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontFamily")]
		void put_FontFamily(global::Windows.UI.Xaml.Media.FontFamily value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Foreground")]
		global::Windows.UI.Xaml.Media.Brush get_Foreground();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Foreground")]
		void put_Foreground(global::Windows.UI.Xaml.Media.Brush value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TextWrapping")]
		global::Windows.UI.Xaml.TextWrapping get_TextWrapping();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TextWrapping")]
		void put_TextWrapping(global::Windows.UI.Xaml.TextWrapping value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TextAlignment")]
		global::Windows.UI.Xaml.TextAlignment get_TextAlignment();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TextAlignment")]
		void put_TextAlignment(global::Windows.UI.Xaml.TextAlignment value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Text")]
		string get_Text();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Text")]
		void put_Text(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Padding")]
		global::Windows.UI.Xaml.Thickness get_Padding();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Padding")]
		void put_Padding(global::Windows.UI.Xaml.Thickness value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SelectionChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SelectionChanged(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SelectionChanged")]
		void remove_SelectionChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextMenuOpening")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextMenuOpening(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextMenuOpening")]
		void remove_ContextMenuOpening(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ContextMenuOpeningEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Controls.ContextMenuEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContextMenuEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITextBlock6
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "IsTextTrimmedChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_IsTextTrimmedChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBlock, global::Windows.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "IsTextTrimmedChanged")]
		void remove_IsTextTrimmedChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IIsTextTrimmedChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRichEditBoxFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRichEditBox
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TextWrapping")]
		global::Windows.UI.Xaml.TextWrapping get_TextWrapping();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TextWrapping")]
		void put_TextWrapping(global::Windows.UI.Xaml.TextWrapping value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Document")]
		global::Windows.UI.Text.ITextDocument get_Document();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TextChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TextChanged(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TextChanged")]
		void remove_TextChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SelectionChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SelectionChanged(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SelectionChanged")]
		void remove_SelectionChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextMenuOpening")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextMenuOpening(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextMenuOpening")]
		void remove_ContextMenuOpening(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRichEditBox2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionHighlightColor")]
		global::Windows.UI.Xaml.Media.SolidColorBrush get_SelectionHighlightColor();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectionHighlightColor")]
		void put_SelectionHighlightColor(global::Windows.UI.Xaml.Media.SolidColorBrush value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Paste")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Paste(global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Paste")]
		void remove_Paste(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void TextControlPasteEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Controls.TextControlPasteEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITextControlPasteEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRichEditBox3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TextCompositionStarted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TextCompositionStarted(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.RichEditBox, global::Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TextCompositionStarted")]
		void remove_TextCompositionStarted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TextCompositionChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TextCompositionChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.RichEditBox, global::Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TextCompositionChanged")]
		void remove_TextCompositionChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TextCompositionEnded")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TextCompositionEnded(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.RichEditBox, global::Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TextCompositionEnded")]
		void remove_TextCompositionEnded(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CandidateWindowBoundsChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CandidateWindowBoundsChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.RichEditBox, global::Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CandidateWindowBoundsChanged")]
		void remove_CandidateWindowBoundsChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TextChanging")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TextChanging(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.RichEditBox, global::Windows.UI.Xaml.Controls.RichEditBoxTextChangingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TextChanging")]
		void remove_TextChanging(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITextCompositionStartedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITextCompositionChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITextCompositionEndedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICandidateWindowBoundsChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRichEditBoxTextChangingEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRichEditBox6
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CopyingToClipboard")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CopyingToClipboard(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.RichEditBox, global::Windows.UI.Xaml.Controls.TextControlCopyingToClipboardEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CopyingToClipboard")]
		void remove_CopyingToClipboard(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CuttingToClipboard")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CuttingToClipboard(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.RichEditBox, global::Windows.UI.Xaml.Controls.TextControlCuttingToClipboardEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CuttingToClipboard")]
		void remove_CuttingToClipboard(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITextControlCopyingToClipboardEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITextControlCuttingToClipboardEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRichEditBox7
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentLinkForegroundColor")]
		global::Windows.UI.Xaml.Media.SolidColorBrush get_ContentLinkForegroundColor();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContentLinkForegroundColor")]
		void put_ContentLinkForegroundColor(global::Windows.UI.Xaml.Media.SolidColorBrush value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentLinkBackgroundColor")]
		global::Windows.UI.Xaml.Media.SolidColorBrush get_ContentLinkBackgroundColor();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContentLinkBackgroundColor")]
		void put_ContentLinkBackgroundColor(global::Windows.UI.Xaml.Media.SolidColorBrush value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContentLinkChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContentLinkChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.RichEditBox, global::Windows.UI.Xaml.Controls.ContentLinkChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContentLinkChanged")]
		void remove_ContentLinkChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContentLinkInvoked")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContentLinkInvoked(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.RichEditBox, global::Windows.UI.Xaml.Documents.ContentLinkInvokedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContentLinkInvoked")]
		void remove_ContentLinkInvoked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContentLinkChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRichEditBox8
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionFlyout")]
		global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase get_SelectionFlyout();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectionFlyout")]
		void put_SelectionFlyout(global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SelectionChanging")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SelectionChanging(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.RichEditBox, global::Windows.UI.Xaml.Controls.RichEditBoxSelectionChangingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SelectionChanging")]
		void remove_SelectionChanging(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRichEditBoxSelectionChangingEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IScrollViewerStatics
	{
		global::Windows.UI.Xaml.Controls.ScrollBarVisibility GetHorizontalScrollBarVisibility(global::Windows.UI.Xaml.DependencyObject element);

		void SetHorizontalScrollBarVisibility(
					global::Windows.UI.Xaml.DependencyObject element, 
					global::Windows.UI.Xaml.Controls.ScrollBarVisibility horizontalScrollBarVisibility);

		global::Windows.UI.Xaml.Controls.ScrollBarVisibility GetVerticalScrollBarVisibility(global::Windows.UI.Xaml.DependencyObject element);

		void SetVerticalScrollBarVisibility(
					global::Windows.UI.Xaml.DependencyObject element, 
					global::Windows.UI.Xaml.Controls.ScrollBarVisibility verticalScrollBarVisibility);

		global::Windows.UI.Xaml.Controls.ScrollMode GetHorizontalScrollMode(global::Windows.UI.Xaml.DependencyObject element);

		void SetHorizontalScrollMode(
					global::Windows.UI.Xaml.DependencyObject element, 
					global::Windows.UI.Xaml.Controls.ScrollMode horizontalScrollMode);

		global::Windows.UI.Xaml.Controls.ScrollMode GetVerticalScrollMode(global::Windows.UI.Xaml.DependencyObject element);

		void SetVerticalScrollMode(
					global::Windows.UI.Xaml.DependencyObject element, 
					global::Windows.UI.Xaml.Controls.ScrollMode verticalScrollMode);

		bool GetIsDeferredScrollingEnabled(global::Windows.UI.Xaml.DependencyObject element);

		void SetIsDeferredScrollingEnabled(
					global::Windows.UI.Xaml.DependencyObject element, 
					bool isDeferredScrollingEnabled);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IScrollViewer
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalScrollBarVisibility")]
		global::Windows.UI.Xaml.Controls.ScrollBarVisibility get_HorizontalScrollBarVisibility();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalScrollBarVisibility")]
		void put_HorizontalScrollBarVisibility(global::Windows.UI.Xaml.Controls.ScrollBarVisibility value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalScrollBarVisibility")]
		global::Windows.UI.Xaml.Controls.ScrollBarVisibility get_VerticalScrollBarVisibility();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalScrollBarVisibility")]
		void put_VerticalScrollBarVisibility(global::Windows.UI.Xaml.Controls.ScrollBarVisibility value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsHorizontalRailEnabled")]
		bool get_IsHorizontalRailEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsHorizontalRailEnabled")]
		void put_IsHorizontalRailEnabled(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsVerticalRailEnabled")]
		bool get_IsVerticalRailEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsVerticalRailEnabled")]
		void put_IsVerticalRailEnabled(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalScrollMode")]
		global::Windows.UI.Xaml.Controls.ScrollMode get_HorizontalScrollMode();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalScrollMode")]
		void put_HorizontalScrollMode(global::Windows.UI.Xaml.Controls.ScrollMode value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalScrollMode")]
		global::Windows.UI.Xaml.Controls.ScrollMode get_VerticalScrollMode();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalScrollMode")]
		void put_VerticalScrollMode(global::Windows.UI.Xaml.Controls.ScrollMode value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ZoomMode")]
		global::Windows.UI.Xaml.Controls.ZoomMode get_ZoomMode();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ZoomMode")]
		void put_ZoomMode(global::Windows.UI.Xaml.Controls.ZoomMode value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ViewChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ViewChanged(global::System.EventHandler<global::Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ViewChanged")]
		void remove_ViewChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsDeferredScrollingEnabled")]
		bool get_IsDeferredScrollingEnabled();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsDeferredScrollingEnabled")]
		void put_IsDeferredScrollingEnabled(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IScrollViewerViewChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IScrollViewer2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ViewChanging")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ViewChanging(global::System.EventHandler<global::Windows.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ViewChanging")]
		void remove_ViewChanging(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IScrollViewerViewChangingEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IScrollViewer3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DirectManipulationStarted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DirectManipulationStarted(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DirectManipulationStarted")]
		void remove_DirectManipulationStarted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DirectManipulationCompleted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DirectManipulationCompleted(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DirectManipulationCompleted")]
		void remove_DirectManipulationCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IScrollViewer4
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AnchorRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AnchorRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ScrollViewer, global::Windows.UI.Xaml.Controls.AnchorRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AnchorRequested")]
		void remove_AnchorRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnchorRequestedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGridStatics
	{
		int GetRow(global::Windows.UI.Xaml.FrameworkElement element);

		void SetRow(
					global::Windows.UI.Xaml.FrameworkElement element, 
					int value);

		int GetColumn(global::Windows.UI.Xaml.FrameworkElement element);

		void SetColumn(
					global::Windows.UI.Xaml.FrameworkElement element, 
					int value);

		int GetRowSpan(global::Windows.UI.Xaml.FrameworkElement element);

		void SetRowSpan(
					global::Windows.UI.Xaml.FrameworkElement element, 
					int value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPanel
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Children")]
		global::Windows.UI.Xaml.Controls.UIElementCollection get_Children();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Background")]
		global::Windows.UI.Xaml.Media.Brush get_Background();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Background")]
		void put_Background(global::Windows.UI.Xaml.Media.Brush value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGridFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGrid
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RowDefinitions")]
		global::Windows.UI.Xaml.Controls.RowDefinitionCollection get_RowDefinitions();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColumnDefinitions")]
		global::Windows.UI.Xaml.Controls.ColumnDefinitionCollection get_ColumnDefinitions();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRowDefinition
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Height")]
		global::Windows.UI.Xaml.GridLength get_Height();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Height")]
		void put_Height(global::Windows.UI.Xaml.GridLength value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColumnDefinition
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Width")]
		global::Windows.UI.Xaml.GridLength get_Width();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Width")]
		void put_Width(global::Windows.UI.Xaml.GridLength value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinWidth")]
		double get_MinWidth();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinWidth")]
		void put_MinWidth(double value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGrid2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BorderBrush")]
		global::Windows.UI.Xaml.Media.Brush get_BorderBrush();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BorderBrush")]
		void put_BorderBrush(global::Windows.UI.Xaml.Media.Brush value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BorderThickness")]
		global::Windows.UI.Xaml.Thickness get_BorderThickness();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BorderThickness")]
		void put_BorderThickness(global::Windows.UI.Xaml.Thickness value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CornerRadius")]
		global::Windows.UI.Xaml.CornerRadius get_CornerRadius();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CornerRadius")]
		void put_CornerRadius(global::Windows.UI.Xaml.CornerRadius value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Padding")]
		global::Windows.UI.Xaml.Thickness get_Padding();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Padding")]
		void put_Padding(global::Windows.UI.Xaml.Thickness value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGrid3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ColumnSpacing")]
		double get_ColumnSpacing();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ColumnSpacing")]
		void put_ColumnSpacing(double value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContentPresenterFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContentPresenter
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		object get_Content();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		void put_Content(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentTemplate")]
		global::Windows.UI.Xaml.DataTemplate get_ContentTemplate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContentTemplate")]
		void put_ContentTemplate(global::Windows.UI.Xaml.DataTemplate value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentTransitions")]
		global::Windows.UI.Xaml.Media.Animation.TransitionCollection get_ContentTransitions();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContentTransitions")]
		void put_ContentTransitions(global::Windows.UI.Xaml.Media.Animation.TransitionCollection value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontWeight")]
		global::Windows.UI.Text.FontWeight get_FontWeight();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontWeight")]
		void put_FontWeight(global::Windows.UI.Text.FontWeight value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Foreground")]
		global::Windows.UI.Xaml.Media.Brush get_Foreground();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Foreground")]
		void put_Foreground(global::Windows.UI.Xaml.Media.Brush value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContentPresenter4
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TextWrapping")]
		global::Windows.UI.Xaml.TextWrapping get_TextWrapping();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TextWrapping")]
		void put_TextWrapping(global::Windows.UI.Xaml.TextWrapping value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BorderBrush")]
		global::Windows.UI.Xaml.Media.Brush get_BorderBrush();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BorderBrush")]
		void put_BorderBrush(global::Windows.UI.Xaml.Media.Brush value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BorderThickness")]
		global::Windows.UI.Xaml.Thickness get_BorderThickness();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BorderThickness")]
		void put_BorderThickness(global::Windows.UI.Xaml.Thickness value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CornerRadius")]
		global::Windows.UI.Xaml.CornerRadius get_CornerRadius();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CornerRadius")]
		void put_CornerRadius(global::Windows.UI.Xaml.CornerRadius value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Padding")]
		global::Windows.UI.Xaml.Thickness get_Padding();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Padding")]
		void put_Padding(global::Windows.UI.Xaml.Thickness value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Background")]
		global::Windows.UI.Xaml.Media.Brush get_Background();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Background")]
		void put_Background(global::Windows.UI.Xaml.Media.Brush value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HorizontalContentAlignment")]
		global::Windows.UI.Xaml.HorizontalAlignment get_HorizontalContentAlignment();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HorizontalContentAlignment")]
		void put_HorizontalContentAlignment(global::Windows.UI.Xaml.HorizontalAlignment value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalContentAlignment")]
		global::Windows.UI.Xaml.VerticalAlignment get_VerticalContentAlignment();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalContentAlignment")]
		void put_VerticalContentAlignment(global::Windows.UI.Xaml.VerticalAlignment value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContentPresenter5
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BackgroundTransition")]
		global::Windows.UI.Xaml.BrushTransition get_BackgroundTransition();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BackgroundTransition")]
		void put_BackgroundTransition(global::Windows.UI.Xaml.BrushTransition value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BackgroundSizing")]
		global::Windows.UI.Xaml.Controls.BackgroundSizing get_BackgroundSizing();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BackgroundSizing")]
		void put_BackgroundSizing(global::Windows.UI.Xaml.Controls.BackgroundSizing value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContentPresenterOverrides
	{
		void OnContentTemplateChanged(
					global::Windows.UI.Xaml.DataTemplate oldContentTemplate, 
					global::Windows.UI.Xaml.DataTemplate newContentTemplate);

		void OnContentTemplateSelectorChanged(
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldContentTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newContentTemplateSelector);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IIconElement
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUserControlFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUserControl
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		global::Windows.UI.Xaml.UIElement get_Content();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		void put_Content(global::Windows.UI.Xaml.UIElement value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPageFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPage
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPageOverrides
	{
		void OnNavigatedFrom(global::Windows.UI.Xaml.Navigation.NavigationEventArgs e);

		void OnNavigatedTo(global::Windows.UI.Xaml.Navigation.NavigationEventArgs e);

		void OnNavigatingFrom(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs e);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFontIconFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFontIcon
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Glyph")]
		string get_Glyph();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Glyph")]
		void put_Glyph(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontSize")]
		double get_FontSize();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontSize")]
		void put_FontSize(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FontWeight")]
		global::Windows.UI.Text.FontWeight get_FontWeight();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FontWeight")]
		void put_FontWeight(global::Windows.UI.Text.FontWeight value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStackPanelFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStackPanel
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Orientation")]
		global::Windows.UI.Xaml.Controls.Orientation get_Orientation();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Orientation")]
		void put_Orientation(global::Windows.UI.Xaml.Controls.Orientation value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBorder
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BorderBrush")]
		global::Windows.UI.Xaml.Media.Brush get_BorderBrush();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BorderBrush")]
		void put_BorderBrush(global::Windows.UI.Xaml.Media.Brush value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BorderThickness")]
		global::Windows.UI.Xaml.Thickness get_BorderThickness();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BorderThickness")]
		void put_BorderThickness(global::Windows.UI.Xaml.Thickness value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Background")]
		global::Windows.UI.Xaml.Media.Brush get_Background();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Background")]
		void put_Background(global::Windows.UI.Xaml.Media.Brush value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Child")]
		global::Windows.UI.Xaml.UIElement get_Child();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Child")]
		void put_Child(global::Windows.UI.Xaml.UIElement value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBorder2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BackgroundSizing")]
		global::Windows.UI.Xaml.Controls.BackgroundSizing get_BackgroundSizing();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "BackgroundSizing")]
		void put_BackgroundSizing(global::Windows.UI.Xaml.Controls.BackgroundSizing value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISliderFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISlider
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StepFrequency")]
		double get_StepFrequency();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "StepFrequency")]
		void put_StepFrequency(double value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRadioButtonFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRadioButton
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GroupName")]
		string get_GroupName();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "GroupName")]
		void put_GroupName(string value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMenuFlyoutFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMenuFlyout
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Items")]
		global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.MenuFlyoutItemBase> get_Items();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMenuFlyoutItemBase
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMenuFlyoutItemFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMenuFlyoutItem
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Text")]
		string get_Text();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Text")]
		void put_Text(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Click")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Click(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Click")]
		void remove_Click(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMenuFlyoutItem2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Icon")]
		global::Windows.UI.Xaml.Controls.IconElement get_Icon();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Icon")]
		void put_Icon(global::Windows.UI.Xaml.Controls.IconElement value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IToggleMenuFlyoutItemFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IToggleMenuFlyoutItemStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsCheckedProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_IsCheckedProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IToggleMenuFlyoutItem
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsChecked")]
		bool get_IsChecked();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsChecked")]
		void put_IsChecked(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMenuFlyoutSubItem
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Items")]
		global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.MenuFlyoutItemBase> get_Items();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Text")]
		string get_Text();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Text")]
		void put_Text(string value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMenuFlyoutSubItem2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Icon")]
		global::Windows.UI.Xaml.Controls.IconElement get_Icon();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Icon")]
		void put_Icon(global::Windows.UI.Xaml.Controls.IconElement value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IItemsControl
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IItemsControlOverrides
	{
		bool IsItemItsOwnContainerOverride(object item);

		global::Windows.UI.Xaml.DependencyObject GetContainerForItemOverride();

		void ClearContainerForItemOverride(
					global::Windows.UI.Xaml.DependencyObject element, 
					object item);

		void PrepareContainerForItemOverride(
					global::Windows.UI.Xaml.DependencyObject element, 
					object item);

		void OnItemsChanged(object e);

		void OnItemContainerStyleChanged(
					global::Windows.UI.Xaml.Style oldItemContainerStyle, 
					global::Windows.UI.Xaml.Style newItemContainerStyle);

		void OnItemContainerStyleSelectorChanged(
					global::Windows.UI.Xaml.Controls.StyleSelector oldItemContainerStyleSelector, 
					global::Windows.UI.Xaml.Controls.StyleSelector newItemContainerStyleSelector);

		void OnItemTemplateChanged(
					global::Windows.UI.Xaml.DataTemplate oldItemTemplate, 
					global::Windows.UI.Xaml.DataTemplate newItemTemplate);

		void OnItemTemplateSelectorChanged(
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldItemTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newItemTemplateSelector);

		void OnGroupStyleSelectorChanged(
					global::Windows.UI.Xaml.Controls.GroupStyleSelector oldGroupStyleSelector, 
					global::Windows.UI.Xaml.Controls.GroupStyleSelector newGroupStyleSelector);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStyleSelector
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStyleSelectorOverrides
	{
		global::Windows.UI.Xaml.Style SelectStyleCore(
					object item, 
					global::Windows.UI.Xaml.DependencyObject container);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGroupStyleSelector
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGroupStyleSelectorOverrides
	{
		global::Windows.UI.Xaml.Controls.GroupStyle SelectGroupStyleCore(
					object group, 
					uint level);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGroupStyle
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Panel")]
		global::Windows.UI.Xaml.Controls.ItemsPanelTemplate get_Panel();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Panel")]
		void put_Panel(global::Windows.UI.Xaml.Controls.ItemsPanelTemplate value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContainerStyle")]
		global::Windows.UI.Xaml.Style get_ContainerStyle();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContainerStyle")]
		void put_ContainerStyle(global::Windows.UI.Xaml.Style value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContainerStyleSelector")]
		global::Windows.UI.Xaml.Controls.StyleSelector get_ContainerStyleSelector();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContainerStyleSelector")]
		void put_ContainerStyleSelector(global::Windows.UI.Xaml.Controls.StyleSelector value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplate")]
		global::Windows.UI.Xaml.DataTemplate get_HeaderTemplate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderTemplate")]
		void put_HeaderTemplate(global::Windows.UI.Xaml.DataTemplate value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplateSelector")]
		global::Windows.UI.Xaml.Controls.DataTemplateSelector get_HeaderTemplateSelector();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderTemplateSelector")]
		void put_HeaderTemplateSelector(global::Windows.UI.Xaml.Controls.DataTemplateSelector value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HidesIfEmpty")]
		bool get_HidesIfEmpty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HidesIfEmpty")]
		void put_HidesIfEmpty(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IItemsPanelTemplate
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGroupStyle2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderContainerStyle")]
		global::Windows.UI.Xaml.Style get_HeaderContainerStyle();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderContainerStyle")]
		void put_HeaderContainerStyle(global::Windows.UI.Xaml.Style value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutoSuggestBox
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SuggestionChosen")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SuggestionChosen(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SuggestionChosen")]
		void remove_SuggestionChosen(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TextChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TextChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TextChanged")]
		void remove_TextChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutoSuggestBoxSuggestionChosenEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutoSuggestBoxTextChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutoSuggestBox2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "QuerySubmitted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_QuerySubmitted(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "QuerySubmitted")]
		void remove_QuerySubmitted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutoSuggestBoxQuerySubmittedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void SelectionChangedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISelectionChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IListViewItem
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IListViewBase
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ItemClick")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ItemClick(global::Windows.UI.Xaml.Controls.ItemClickEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ItemClick")]
		void remove_ItemClick(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragItemsStarting")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragItemsStarting(global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragItemsStarting")]
		void remove_DragItemsStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ItemClickEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Controls.ItemClickEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IItemClickEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void DragItemsStartingEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Controls.DragItemsStartingEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDragItemsStartingEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IListViewBase2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContainerContentChanging")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContainerContentChanging(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContainerContentChanging")]
		void remove_ContainerContentChanging(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContainerContentChangingEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IListViewBase4
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragItemsCompleted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragItemsCompleted(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragItemsCompleted")]
		void remove_DragItemsCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ChoosingItemContainer")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ChoosingItemContainer(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ChoosingItemContainer")]
		void remove_ChoosingItemContainer(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ChoosingGroupHeaderContainer")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ChoosingGroupHeaderContainer(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ChoosingGroupHeaderContainer")]
		void remove_ChoosingGroupHeaderContainer(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDragItemsCompletedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IChoosingItemContainerEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IChoosingGroupHeaderContainerEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IListView
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICommandBarElement
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IComboBoxFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IComboBox
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DropDownClosed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DropDownClosed(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DropDownClosed")]
		void remove_DropDownClosed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DropDownOpened")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DropDownOpened(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DropDownOpened")]
		void remove_DropDownOpened(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IComboBox6
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TextSubmitted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TextSubmitted(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ComboBox, global::Windows.UI.Xaml.Controls.ComboBoxTextSubmittedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TextSubmitted")]
		void remove_TextSubmitted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IComboBoxTextSubmittedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IComboBoxOverrides
	{
		void OnDropDownClosed(object e);

		void OnDropDownOpened(object e);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAppBar
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Opened")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Opened(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Opened")]
		void remove_Opened(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closed(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closed")]
		void remove_Closed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAppBar3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Opening")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Opening(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Opening")]
		void remove_Opening(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closing")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closing(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closing")]
		void remove_Closing(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAppBarOverrides
	{
		void OnClosed(object e);

		void OnOpened(object e);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAppBarOverrides3
	{
		void OnClosing(object e);

		void OnOpening(object e);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICommandBarFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICommandBar
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICommandBar3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DynamicOverflowItemsChanging")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DynamicOverflowItemsChanging(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.CommandBar, global::Windows.UI.Xaml.Controls.DynamicOverflowItemsChangingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DynamicOverflowItemsChanging")]
		void remove_DynamicOverflowItemsChanging(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDynamicOverflowItemsChangingEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAppBarSeparator
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMenuFlyoutSeparator
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrame
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Navigated")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Navigated(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Navigated")]
		void remove_Navigated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Navigating")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Navigating(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Navigating")]
		void remove_Navigating(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationFailed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationFailed(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationFailed")]
		void remove_NavigationFailed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationStopped")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationStopped(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationStopped")]
		void remove_NavigationStopped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		bool Navigate(
					global::System.Type sourcePageType, 
					object parameter);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum BackgroundSizing
	{
		InnerBorderEdge = 0,
		OuterBorderEdge = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ScrollMode
	{
		Disabled = 0,
		Enabled = 1,
		Auto = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ScrollBarVisibility
	{
		Disabled = 0,
		Auto = 1,
		Hidden = 2,
		Visible = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ZoomMode
	{
		Disabled = 0,
		Enabled = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum Orientation
	{
		Vertical = 0,
		Horizontal = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum Symbol
	{
		Previous = 57600,
		Next = 57601,
		Play = 57602,
		Pause = 57603,
		Edit = 57604,
		Save = 57605,
		Clear = 57606,
		Delete = 57607,
		Remove = 57608,
		Add = 57609,
		Cancel = 57610,
		Accept = 57611,
		More = 57612,
		Redo = 57613,
		Undo = 57614,
		Home = 57615,
		Up = 57616,
		Forward = 57617,
		Back = 57618,
		Favorite = 57619,
		Camera = 57620,
		Setting = 57621,
		Video = 57622,
		Sync = 57623,
		Download = 57624,
		Mail = 57625,
		Find = 57626,
		Help = 57627,
		Upload = 57628,
		Emoji = 57629,
		TwoPage = 57630,
		LeaveChat = 57631,
		MailForward = 57632,
		Clock = 57633,
		Send = 57634,
		Crop = 57635,
		RotateCamera = 57636,
		People = 57637,
		OpenPane = 57638,
		ClosePane = 57639,
		World = 57640,
		Flag = 57641,
		PreviewLink = 57642,
		Globe = 57643,
		Trim = 57644,
		AttachCamera = 57645,
		ZoomIn = 57646,
		Bookmarks = 57647,
		Document = 57648,
		ProtectedDocument = 57649,
		Page = 57650,
		Bullets = 57651,
		Comment = 57652,
		MailFilled = 57653,
		ContactInfo = 57654,
		HangUp = 57655,
		ViewAll = 57656,
		MapPin = 57657,
		Phone = 57658,
		VideoChat = 57659,
		Switch = 57660,
		Contact = 57661,
		Rename = 57662,
		Pin = 57665,
		MusicInfo = 57666,
		Go = 57667,
		Keyboard = 57668,
		DockLeft = 57669,
		DockRight = 57670,
		DockBottom = 57671,
		Remote = 57672,
		Refresh = 57673,
		Rotate = 57674,
		Shuffle = 57675,
		List = 57676,
		Shop = 57677,
		SelectAll = 57678,
		Orientation = 57679,
		Import = 57680,
		ImportAll = 57681,
		BrowsePhotos = 57685,
		WebCam = 57686,
		Pictures = 57688,
		SaveLocal = 57689,
		Caption = 57690,
		Stop = 57691,
		ShowResults = 57692,
		Volume = 57693,
		Repair = 57694,
		Message = 57695,
		Page2 = 57696,
		CalendarDay = 57697,
		CalendarWeek = 57698,
		Calendar = 57699,
		Character = 57700,
		MailReplyAll = 57701,
		Read = 57702,
		Link = 57703,
		Account = 57704,
		ShowBcc = 57705,
		HideBcc = 57706,
		Cut = 57707,
		Attach = 57708,
		Paste = 57709,
		Filter = 57710,
		Copy = 57711,
		Emoji2 = 57712,
		Important = 57713,
		MailReply = 57714,
		SlideShow = 57715,
		Sort = 57716,
		Manage = 57720,
		AllApps = 57721,
		DisconnectDrive = 57722,
		MapDrive = 57723,
		NewWindow = 57724,
		OpenWith = 57725,
		ContactPresence = 57729,
		Priority = 57730,
		GoToToday = 57732,
		Font = 57733,
		FontColor = 57734,
		Contact2 = 57735,
		Folder = 57736,
		Audio = 57737,
		Placeholder = 57738,
		View = 57739,
		SetLockScreen = 57740,
		SetTile = 57741,
		ClosedCaption = 57744,
		StopSlideShow = 57745,
		Permissions = 57746,
		Highlight = 57747,
		DisableUpdates = 57748,
		UnFavorite = 57749,
		UnPin = 57750,
		OpenLocal = 57751,
		Mute = 57752,
		Italic = 57753,
		Underline = 57754,
		Bold = 57755,
		MoveToFolder = 57756,
		LikeDislike = 57757,
		Dislike = 57758,
		Like = 57759,
		AlignRight = 57760,
		AlignCenter = 57761,
		AlignLeft = 57762,
		Zoom = 57763,
		ZoomOut = 57764,
		OpenFile = 57765,
		OtherUser = 57766,
		Admin = 57767,
		Street = 57795,
		Map = 57796,
		ClearSelection = 57797,
		FontDecrease = 57798,
		FontIncrease = 57799,
		FontSize = 57800,
		CellPhone = 57801,
		ReShare = 57802,
		Tag = 57803,
		RepeatOne = 57804,
		RepeatAll = 57805,
		OutlineStar = 57806,
		SolidStar = 57807,
		Calculator = 57808,
		Directions = 57809,
		Target = 57810,
		Library = 57811,
		PhoneBook = 57812,
		Memo = 57813,
		Microphone = 57814,
		PostUpdate = 57815,
		BackToWindow = 57816,
		FullScreen = 57817,
		NewFolder = 57818,
		CalendarReply = 57819,
		UnSyncFolder = 57821,
		ReportHacked = 57822,
		SyncFolder = 57823,
		BlockContact = 57824,
		SwitchApps = 57825,
		AddFriend = 57826,
		TouchPointer = 57827,
		GoToStart = 57828,
		ZeroBars = 57829,
		OneBar = 57830,
		TwoBars = 57831,
		ThreeBars = 57832,
		FourBars = 57833,
		Scan = 58004,
		Preview = 58005,
		GlobalNavigationButton = 59136,
		Share = 59181,
		Print = 59209,
		XboxOneConsole = 59792,
	}
}

namespace Windows.UI.Xaml.Controls.Primitives
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBase))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBase2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseOverrides4))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class FlyoutBase : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBase, global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBase2, global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseOverrides, global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseOverrides4
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		protected FlyoutBase() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls_Primitives__IFlyoutBaseFactory_CreateInstance("Windows.UI.Xaml.Controls.Primitives.FlyoutBase");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls_Primitives__IFlyoutBaseFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
			global::System.IntPtr __pRetVal_WithAggregation;
			__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseFactory__Impl.Stubs.CreateInstance(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseFactory).TypeHandle
												), 
								outerInspectable, 
								out innerInspectable
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
			return innerInspectable;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Placement")]
		public virtual global::Windows.UI.Xaml.Controls.Primitives.FlyoutPlacementMode get_Placement()
		{
			global::Windows.UI.Xaml.Controls.Primitives.FlyoutPlacementMode __retVal = global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBase__Impl.Stubs.get_Placement(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Placement")]
		public virtual void put_Placement(global::Windows.UI.Xaml.Controls.Primitives.FlyoutPlacementMode value)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBase__Impl.Stubs.put_Placement(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Opened")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Opened(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBase__Impl.Stubs.add_Opened(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Opened")]
		public virtual void remove_Opened(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBase__Impl.Stubs.remove_Opened(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closed(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBase__Impl.Stubs.add_Closed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closed")]
		public virtual void remove_Closed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBase__Impl.Stubs.remove_Closed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Opening")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Opening(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBase__Impl.Stubs.add_Opening(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Opening")]
		public virtual void remove_Opening(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBase__Impl.Stubs.remove_Opening(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closing")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closing(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase, global::Windows.UI.Xaml.Controls.Primitives.FlyoutBaseClosingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBase2__Impl.Stubs.add_Closing(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closing")]
		public virtual void remove_Closing(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBase2__Impl.Stubs.remove_Closing(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		global::Windows.UI.Xaml.Controls.Control global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseOverrides.CreatePresenter()
		{
			global::Windows.UI.Xaml.Controls.Control __retVal_1 = this.CreatePresenter();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Controls.Control CreatePresenter()
		{
			global::Windows.UI.Xaml.Controls.Control __retVal = global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseOverrides__Impl.Stubs.CreatePresenter(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseOverrides4.OnProcessKeyboardAccelerators(global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs args)
		{
			this.OnProcessKeyboardAccelerators(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnProcessKeyboardAccelerators(global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs args)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseOverrides4__Impl.Stubs.OnProcessKeyboardAccelerators(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public FlyoutBase(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseClosingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FlyoutBaseClosingEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseClosingEventArgs
	{
		public FlyoutBaseClosingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.Primitives.IButtonBase))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ButtonBase : global::Windows.UI.Xaml.Controls.ContentControl, global::Windows.UI.Xaml.Controls.Primitives.IButtonBase
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Command")]
		public virtual global::System.Windows.Input.ICommand get_Command()
		{
			global::System.Windows.Input.ICommand __retVal = global::Windows.UI.Xaml.Controls.Primitives.IButtonBase__Impl.Stubs.get_Command(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Command")]
		public virtual void put_Command(global::System.Windows.Input.ICommand value)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IButtonBase__Impl.Stubs.put_Command(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CommandParameter")]
		public virtual object get_CommandParameter()
		{
			object __retVal = global::Windows.UI.Xaml.Controls.Primitives.IButtonBase__Impl.Stubs.get_CommandParameter(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CommandParameter")]
		public virtual void put_CommandParameter(object value)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IButtonBase__Impl.Stubs.put_CommandParameter(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Click")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Click(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.Primitives.IButtonBase__Impl.Stubs.add_Click(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Click")]
		public virtual void remove_Click(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IButtonBase__Impl.Stubs.remove_Click(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ButtonBase(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.Primitives.IToggleButton))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.Primitives.IToggleButtonOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ToggleButton : global::Windows.UI.Xaml.Controls.Primitives.ButtonBase, global::Windows.UI.Xaml.Controls.Primitives.IToggleButton, global::Windows.UI.Xaml.Controls.Primitives.IToggleButtonOverrides
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ToggleButton() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls_Primitives__IToggleButtonFactory_CreateInstance("Windows.UI.Xaml.Controls.Primitives.ToggleButton");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls_Primitives__IToggleButtonFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.Primitives.IToggleButtonFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.Primitives.IToggleButtonFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.Primitives.IToggleButtonFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.Primitives.IToggleButtonFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Checked")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Checked(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.Primitives.IToggleButton__Impl.Stubs.add_Checked(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Checked")]
		public virtual void remove_Checked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IToggleButton__Impl.Stubs.remove_Checked(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Unchecked")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Unchecked(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.Primitives.IToggleButton__Impl.Stubs.add_Unchecked(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Unchecked")]
		public virtual void remove_Unchecked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IToggleButton__Impl.Stubs.remove_Unchecked(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Indeterminate")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Indeterminate(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.Primitives.IToggleButton__Impl.Stubs.add_Indeterminate(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Indeterminate")]
		public virtual void remove_Indeterminate(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IToggleButton__Impl.Stubs.remove_Indeterminate(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.Primitives.IToggleButtonOverrides.OnToggle()
		{
			this.OnToggle();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnToggle()
		{
			global::Windows.UI.Xaml.Controls.Primitives.IToggleButtonOverrides__Impl.Stubs.OnToggle(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ToggleButton(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.Primitives.IRangeBase))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.Primitives.IRangeBaseOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RangeBase : global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.Primitives.IRangeBase, global::Windows.UI.Xaml.Controls.Primitives.IRangeBaseOverrides
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Minimum")]
		public virtual double get_Minimum()
		{
			double __retVal = global::Windows.UI.Xaml.Controls.Primitives.IRangeBase__Impl.Stubs.get_Minimum(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Minimum")]
		public virtual void put_Minimum(double value)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IRangeBase__Impl.Stubs.put_Minimum(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Maximum")]
		public virtual double get_Maximum()
		{
			double __retVal = global::Windows.UI.Xaml.Controls.Primitives.IRangeBase__Impl.Stubs.get_Maximum(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Maximum")]
		public virtual void put_Maximum(double value)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IRangeBase__Impl.Stubs.put_Maximum(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SmallChange")]
		public virtual double get_SmallChange()
		{
			double __retVal = global::Windows.UI.Xaml.Controls.Primitives.IRangeBase__Impl.Stubs.get_SmallChange(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SmallChange")]
		public virtual void put_SmallChange(double value)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IRangeBase__Impl.Stubs.put_SmallChange(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LargeChange")]
		public virtual double get_LargeChange()
		{
			double __retVal = global::Windows.UI.Xaml.Controls.Primitives.IRangeBase__Impl.Stubs.get_LargeChange(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "LargeChange")]
		public virtual void put_LargeChange(double value)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IRangeBase__Impl.Stubs.put_LargeChange(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Value")]
		public virtual double get_Value()
		{
			double __retVal = global::Windows.UI.Xaml.Controls.Primitives.IRangeBase__Impl.Stubs.get_Value(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Value")]
		public virtual void put_Value(double value)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IRangeBase__Impl.Stubs.put_Value(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ValueChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ValueChanged(global::Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.Primitives.IRangeBase__Impl.Stubs.add_ValueChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ValueChanged")]
		public virtual void remove_ValueChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IRangeBase__Impl.Stubs.remove_ValueChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.Primitives.IRangeBaseOverrides.OnMinimumChanged(
					double oldMinimum, 
					double newMinimum)
		{
			this.OnMinimumChanged(
								oldMinimum, 
								newMinimum
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnMinimumChanged(
					double oldMinimum, 
					double newMinimum)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IRangeBaseOverrides__Impl.Stubs.OnMinimumChanged(
								this, 
								oldMinimum, 
								newMinimum
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.Primitives.IRangeBaseOverrides.OnMaximumChanged(
					double oldMaximum, 
					double newMaximum)
		{
			this.OnMaximumChanged(
								oldMaximum, 
								newMaximum
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnMaximumChanged(
					double oldMaximum, 
					double newMaximum)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IRangeBaseOverrides__Impl.Stubs.OnMaximumChanged(
								this, 
								oldMaximum, 
								newMaximum
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.Primitives.IRangeBaseOverrides.OnValueChanged(
					double oldValue, 
					double newValue)
		{
			this.OnValueChanged(
								oldValue, 
								newValue
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnValueChanged(
					double oldValue, 
					double newValue)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IRangeBaseOverrides__Impl.Stubs.OnValueChanged(
								this, 
								oldValue, 
								newValue
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValueProperty")]
		public static global::Windows.UI.Xaml.DependencyProperty get_ValueProperty()
		{
			global::Windows.UI.Xaml.DependencyProperty retval;
			retval = __Factory_Windows_UI_Xaml_Controls_Primitives__IRangeBaseStatics_get_ValueProperty("Windows.UI.Xaml.Controls.Primitives.RangeBase");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.DependencyProperty __Factory_Windows_UI_Xaml_Controls_Primitives__IRangeBaseStatics_get_ValueProperty(string typeName)
		{
			global::Windows.UI.Xaml.DependencyProperty __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.Controls.Primitives.IRangeBaseStatics__Impl.Stubs.get_ValueProperty(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.Xaml.Controls.Primitives.IRangeBaseStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public RangeBase(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.Primitives.IRangeBaseValueChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class RangeBaseValueChangedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Controls.Primitives.IRangeBaseValueChangedEventArgs
	{
		public RangeBaseValueChangedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.Primitives.ISelectorItem))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class SelectorItem : global::Windows.UI.Xaml.Controls.ContentControl, global::Windows.UI.Xaml.Controls.Primitives.ISelectorItem
	{
		public SelectorItem(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.Primitives.ISelector))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Selector : global::Windows.UI.Xaml.Controls.ItemsControl, global::Windows.UI.Xaml.Controls.Primitives.ISelector
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SelectionChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SelectionChanged(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.Primitives.ISelector__Impl.Stubs.add_SelectionChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SelectionChanged")]
		public virtual void remove_SelectionChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.Primitives.ISelector__Impl.Stubs.remove_SelectionChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Selector(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenter))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ListViewItemPresenter : global::Windows.UI.Xaml.Controls.ContentPresenter, global::Windows.UI.Xaml.Controls.Primitives.IListViewItemPresenter
	{
		public ListViewItemPresenter(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFlyoutBaseFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFlyoutBase
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Placement")]
		global::Windows.UI.Xaml.Controls.Primitives.FlyoutPlacementMode get_Placement();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Placement")]
		void put_Placement(global::Windows.UI.Xaml.Controls.Primitives.FlyoutPlacementMode value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Opened")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Opened(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Opened")]
		void remove_Opened(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closed(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closed")]
		void remove_Closed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Opening")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Opening(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Opening")]
		void remove_Opening(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFlyoutBase2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closing")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closing(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Primitives.FlyoutBase, global::Windows.UI.Xaml.Controls.Primitives.FlyoutBaseClosingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closing")]
		void remove_Closing(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFlyoutBaseClosingEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFlyoutBaseOverrides
	{
		global::Windows.UI.Xaml.Controls.Control CreatePresenter();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFlyoutBaseOverrides4
	{
		void OnProcessKeyboardAccelerators(global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs args);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IButtonBase
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Command")]
		global::System.Windows.Input.ICommand get_Command();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Command")]
		void put_Command(global::System.Windows.Input.ICommand value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CommandParameter")]
		object get_CommandParameter();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CommandParameter")]
		void put_CommandParameter(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Click")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Click(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Click")]
		void remove_Click(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IToggleButtonFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IToggleButton
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Checked")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Checked(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Checked")]
		void remove_Checked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Unchecked")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Unchecked(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Unchecked")]
		void remove_Unchecked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Indeterminate")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Indeterminate(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Indeterminate")]
		void remove_Indeterminate(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IToggleButtonOverrides
	{
		void OnToggle();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IScrollSnapPointsInfo
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "HorizontalSnapPointsChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_HorizontalSnapPointsChanged(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "HorizontalSnapPointsChanged")]
		void remove_HorizontalSnapPointsChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "VerticalSnapPointsChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_VerticalSnapPointsChanged(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "VerticalSnapPointsChanged")]
		void remove_VerticalSnapPointsChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRangeBaseStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValueProperty")]
		global::Windows.UI.Xaml.DependencyProperty get_ValueProperty();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRangeBase
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Minimum")]
		double get_Minimum();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Minimum")]
		void put_Minimum(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Maximum")]
		double get_Maximum();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Maximum")]
		void put_Maximum(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SmallChange")]
		double get_SmallChange();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SmallChange")]
		void put_SmallChange(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LargeChange")]
		double get_LargeChange();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "LargeChange")]
		void put_LargeChange(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Value")]
		double get_Value();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Value")]
		void put_Value(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ValueChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ValueChanged(global::Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ValueChanged")]
		void remove_ValueChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void RangeBaseValueChangedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRangeBaseValueChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRangeBaseOverrides
	{
		void OnMinimumChanged(
					double oldMinimum, 
					double newMinimum);

		void OnMaximumChanged(
					double oldMaximum, 
					double newMaximum);

		void OnValueChanged(
					double oldValue, 
					double newValue);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISelectorItem
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISelector
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SelectionChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SelectionChanged(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SelectionChanged")]
		void remove_SelectionChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IListViewItemPresenter
	{
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ComponentResourceLocation
	{
		Application = 0,
		Nested = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum FlyoutPlacementMode
	{
		Top = 0,
		Bottom = 1,
		Left = 2,
		Right = 3,
		Full = 4,
		TopEdgeAlignedLeft = 5,
		TopEdgeAlignedRight = 6,
		BottomEdgeAlignedLeft = 7,
		BottomEdgeAlignedRight = 8,
		LeftEdgeAlignedTop = 9,
		LeftEdgeAlignedBottom = 10,
		RightEdgeAlignedTop = 11,
		RightEdgeAlignedBottom = 12,
		Auto = 13,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum PlacementMode
	{
		Bottom = 2,
		Right = 4,
		Mouse = 7,
		Left = 9,
		Top = 10,
	}
}

namespace Windows.UI.Xaml.Data
{
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPropertyChangedEventArgsFactory
	{
		global::System.IntPtr CreateInstance(
					string name, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPropertyChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PropertyName")]
		string get_PropertyName();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IValueConverter
	{
		object Convert(
					object value, 
					global::System.Type targetType, 
					object parameter, 
					string language);

		object ConvertBack(
					object value, 
					global::System.Type targetType, 
					object parameter, 
					string language);
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class BindableAttribute : global::System.Attribute
	{
		public BindableAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.UI.Xaml.Data.BindableAttribute\'.  Windows Runtime attribute types are not constru" +
					"ctable.");
		}
	}
}

namespace Windows.UI.Xaml.Documents
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Documents.IContentLinkInvokedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ContentLinkInvokedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Documents.IContentLinkInvokedEventArgs
	{
		public ContentLinkInvokedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContentLinkInvokedEventArgs
	{
	}
}

namespace Windows.UI.Xaml.Input
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class KeyRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs
	{
		public KeyRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class PointerRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs
	{
		public PointerRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TappedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs
	{
		public TappedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DoubleTappedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs
	{
		public DoubleTappedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HoldingRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs
	{
		public HoldingRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class RightTappedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs
	{
		public RightTappedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ManipulationStartingRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs
	{
		public ManipulationStartingRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ManipulationInertiaStartingRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs
	{
		public ManipulationInertiaStartingRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ManipulationStartedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs
	{
		public ManipulationStartedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ManipulationDeltaRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs
	{
		public ManipulationDeltaRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ManipulationCompletedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs
	{
		public ManipulationCompletedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.ICharacterReceivedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CharacterReceivedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.ICharacterReceivedRoutedEventArgs
	{
		public CharacterReceivedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IProcessKeyboardAcceleratorEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ProcessKeyboardAcceleratorEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Input.IProcessKeyboardAcceleratorEventArgs
	{
		public ProcessKeyboardAcceleratorEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IContextRequestedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(196608)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ContextRequestedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IContextRequestedEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ContextRequestedEventArgs() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Input.ContextRequestedEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public ContextRequestedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IAccessKeyDisplayRequestedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(196608)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AccessKeyDisplayRequestedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Input.IAccessKeyDisplayRequestedEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AccessKeyDisplayRequestedEventArgs()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public AccessKeyDisplayRequestedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IAccessKeyDisplayDismissedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(196608)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AccessKeyDisplayDismissedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Input.IAccessKeyDisplayDismissedEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AccessKeyDisplayDismissedEventArgs()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public AccessKeyDisplayDismissedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IAccessKeyInvokedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(196608)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AccessKeyInvokedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Input.IAccessKeyInvokedEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AccessKeyInvokedEventArgs()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Input.AccessKeyInvokedEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public AccessKeyInvokedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IGettingFocusEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class GettingFocusEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IGettingFocusEventArgs
	{
		public GettingFocusEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.ILosingFocusEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class LosingFocusEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.ILosingFocusEventArgs
	{
		public LosingFocusEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.INoFocusCandidateFoundEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NoFocusCandidateFoundEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.INoFocusCandidateFoundEventArgs
	{
		public NoFocusCandidateFoundEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IKeyboardAccelerator))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(327680)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class KeyboardAccelerator : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Input.IKeyboardAccelerator
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public KeyboardAccelerator() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Input__IKeyboardAcceleratorFactory_CreateInstance("Windows.UI.Xaml.Input.KeyboardAccelerator");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Input__IKeyboardAcceleratorFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Input.KeyboardAccelerator).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Input.IKeyboardAcceleratorFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Input.IKeyboardAcceleratorFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Input.IKeyboardAcceleratorFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Input.IKeyboardAcceleratorFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Key")]
		public virtual global::Windows.System.VirtualKey get_Key()
		{
			global::Windows.System.VirtualKey __retVal = global::Windows.UI.Xaml.Input.IKeyboardAccelerator__Impl.Stubs.get_Key(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Key")]
		public virtual void put_Key(global::Windows.System.VirtualKey value)
		{
			global::Windows.UI.Xaml.Input.IKeyboardAccelerator__Impl.Stubs.put_Key(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Modifiers")]
		public virtual global::Windows.System.VirtualKeyModifiers get_Modifiers()
		{
			global::Windows.System.VirtualKeyModifiers __retVal = global::Windows.UI.Xaml.Input.IKeyboardAccelerator__Impl.Stubs.get_Modifiers(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Modifiers")]
		public virtual void put_Modifiers(global::Windows.System.VirtualKeyModifiers value)
		{
			global::Windows.UI.Xaml.Input.IKeyboardAccelerator__Impl.Stubs.put_Modifiers(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Invoked")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Invoked(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Input.KeyboardAccelerator, global::Windows.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Input.IKeyboardAccelerator__Impl.Stubs.add_Invoked(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Invoked")]
		public virtual void remove_Invoked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Input.IKeyboardAccelerator__Impl.Stubs.remove_Invoked(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public KeyboardAccelerator(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IKeyboardAcceleratorInvokedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class KeyboardAcceleratorInvokedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Input.IKeyboardAcceleratorInvokedEventArgs
	{
		public KeyboardAcceleratorInvokedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void KeyEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IKeyRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void PointerEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPointerRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void TappedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.TappedRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITappedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void DoubleTappedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDoubleTappedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void HoldingEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.HoldingRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHoldingRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void RightTappedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.RightTappedRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRightTappedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ManipulationStartingEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IManipulationStartingRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ManipulationInertiaStartingEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IManipulationInertiaStartingRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ManipulationStartedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IManipulationStartedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ManipulationDeltaEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IManipulationDeltaRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ManipulationCompletedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IManipulationCompletedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICharacterReceivedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IProcessKeyboardAcceleratorEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContextRequestedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAccessKeyDisplayRequestedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAccessKeyDisplayDismissedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAccessKeyInvokedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGettingFocusEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILosingFocusEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INoFocusCandidateFoundEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IKeyboardAcceleratorFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IKeyboardAccelerator
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Key")]
		global::Windows.System.VirtualKey get_Key();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Key")]
		void put_Key(global::Windows.System.VirtualKey value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Modifiers")]
		global::Windows.System.VirtualKeyModifiers get_Modifiers();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Modifiers")]
		void put_Modifiers(global::Windows.System.VirtualKeyModifiers value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Invoked")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Invoked(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Input.KeyboardAccelerator, global::Windows.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Invoked")]
		void remove_Invoked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IKeyboardAcceleratorInvokedEventArgs
	{
	}
}

namespace Windows.UI.Xaml.Interop
{
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INotifyCollectionChangedEventArgsFactory
	{
		global::System.IntPtr CreateInstanceWithAllParameters(
					global::System.Collections.Specialized.NotifyCollectionChangedAction action, 
					global::System.Collections.IList newItems, 
					global::System.Collections.IList oldItems, 
					int newIndex, 
					int oldIndex, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INotifyCollectionChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Action")]
		global::System.Collections.Specialized.NotifyCollectionChangedAction get_Action();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NewItems")]
		global::System.Collections.IList get_NewItems();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OldItems")]
		global::System.Collections.IList get_OldItems();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NewStartingIndex")]
		int get_NewStartingIndex();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OldStartingIndex")]
		int get_OldStartingIndex();
	}
}

namespace Windows.UI.Xaml.Markup
{
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IXamlMetadataProvider
	{
		global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type);

		global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName);

		global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IXamlType
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BaseType")]
		global::Windows.UI.Xaml.Markup.IXamlType get_BaseType();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentProperty")]
		global::Windows.UI.Xaml.Markup.IXamlMember get_ContentProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FullName")]
		string get_FullName();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsArray")]
		bool get_IsArray();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsCollection")]
		bool get_IsCollection();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsConstructible")]
		bool get_IsConstructible();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsDictionary")]
		bool get_IsDictionary();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsMarkupExtension")]
		bool get_IsMarkupExtension();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsBindable")]
		bool get_IsBindable();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemType")]
		global::Windows.UI.Xaml.Markup.IXamlType get_ItemType();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "KeyType")]
		global::Windows.UI.Xaml.Markup.IXamlType get_KeyType();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UnderlyingType")]
		global::System.Type get_UnderlyingType();

		object ActivateInstance();

		object CreateFromString(string value);

		global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name);

		void AddToVector(
					object instance, 
					object value);

		void AddToMap(
					object instance, 
					object key, 
					object value);

		void RunInitializer();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IXamlMember
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAttachable")]
		bool get_IsAttachable();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsDependencyProperty")]
		bool get_IsDependencyProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsReadOnly")]
		bool get_IsReadOnly();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Name")]
		string get_Name();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TargetType")]
		global::Windows.UI.Xaml.Markup.IXamlType get_TargetType();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Type")]
		global::Windows.UI.Xaml.Markup.IXamlType get_Type();

		object GetValue(object instance);

		void SetValue(
					object instance, 
					object value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IXamlType2 : global::Windows.UI.Xaml.Markup.IXamlType
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BoxedType")]
		global::Windows.UI.Xaml.Markup.IXamlType get_BoxedType();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IComponentConnector
	{
		void Connect(
					int connectionId, 
					object target);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IComponentConnector2
	{
		global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(
					int connectionId, 
					object target);
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ContentPropertyAttribute : global::System.Attribute
	{
		public ContentPropertyAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.UI.Xaml.Markup.ContentPropertyAttribute\'.  Windows Runtime attribute types are no" +
					"t constructable.");
		}
		public string Name;
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct XmlnsDefinition
	{
		public string XmlNamespace;
		public string Namespace;
	}
}

namespace Windows.UI.Xaml.Media
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.IGeometry))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Geometry : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Media.IGeometry
	{
		public Geometry(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.IRectangleGeometry))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class RectangleGeometry : global::Windows.UI.Xaml.Media.Geometry, global::Windows.UI.Xaml.Media.IRectangleGeometry
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public RectangleGeometry() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Media.RectangleGeometry");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Rect")]
		public void put_Rect(global::Windows.Foundation.Rect value)
		{
			global::Windows.UI.Xaml.Media.IRectangleGeometry__Impl.Stubs.put_Rect(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public RectangleGeometry(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.IFontFamily))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class FontFamily : global::System.__ComObject, global::Windows.UI.Xaml.Media.IFontFamily
	{
		public FontFamily(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.IBrush))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.IBrushOverrides2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Brush : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Media.IBrush, global::Windows.UI.Xaml.Media.IBrushOverrides2, global::Windows.UI.Composition.IAnimationObject
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		protected Brush() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Media__IBrushFactory_CreateInstance("Windows.UI.Xaml.Media.Brush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Media__IBrushFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
			global::System.IntPtr __pRetVal_WithAggregation;
			__pRetVal_WithAggregation = global::Windows.UI.Xaml.Media.IBrushFactory__Impl.Stubs.CreateInstance(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Media.IBrushFactory).TypeHandle
												), 
								outerInspectable, 
								out innerInspectable
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
			return innerInspectable;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Opacity")]
		public virtual double get_Opacity()
		{
			double __retVal = global::Windows.UI.Xaml.Media.IBrush__Impl.Stubs.get_Opacity(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Opacity")]
		public virtual void put_Opacity(double value)
		{
			global::Windows.UI.Xaml.Media.IBrush__Impl.Stubs.put_Opacity(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Media.IBrushOverrides2.PopulatePropertyInfoOverride(
					string propertyName, 
					global::Windows.UI.Composition.AnimationPropertyInfo animationPropertyInfo)
		{
			this.PopulatePropertyInfoOverride(
								propertyName, 
								animationPropertyInfo
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void PopulatePropertyInfoOverride(
					string propertyName, 
					global::Windows.UI.Composition.AnimationPropertyInfo animationPropertyInfo)
		{
			global::Windows.UI.Xaml.Media.IBrushOverrides2__Impl.Stubs.PopulatePropertyInfoOverride(
								this, 
								propertyName, 
								animationPropertyInfo
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Brush(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.IShadow))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Shadow : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Media.IShadow
	{
		public Shadow(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.ISolidColorBrush))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SolidColorBrush : global::Windows.UI.Xaml.Media.Brush, global::Windows.UI.Xaml.Media.ISolidColorBrush
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public SolidColorBrush() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Media.SolidColorBrush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Color")]
		public global::Windows.UI.Color get_Color()
		{
			global::Windows.UI.Color __retVal = global::Windows.UI.Xaml.Media.ISolidColorBrush__Impl.Stubs.get_Color(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Color")]
		public void put_Color(global::Windows.UI.Color value)
		{
			global::Windows.UI.Xaml.Media.ISolidColorBrush__Impl.Stubs.put_Color(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public SolidColorBrush(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.IImageSource))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ImageSource : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Media.IImageSource
	{
		public ImageSource(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.ITileBrush))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class TileBrush : global::Windows.UI.Xaml.Media.Brush, global::Windows.UI.Xaml.Media.ITileBrush
	{
		public TileBrush(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.IImageBrush))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ImageBrush : global::Windows.UI.Xaml.Media.TileBrush, global::Windows.UI.Xaml.Media.IImageBrush
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ImageFailed")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ImageFailed(global::Windows.UI.Xaml.ExceptionRoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Media.IImageBrush__Impl.Stubs.add_ImageFailed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ImageFailed")]
		public void remove_ImageFailed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Media.IImageBrush__Impl.Stubs.remove_ImageFailed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ImageOpened")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ImageOpened(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Media.IImageBrush__Impl.Stubs.add_ImageOpened(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ImageOpened")]
		public void remove_ImageOpened(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Media.IImageBrush__Impl.Stubs.remove_ImageOpened(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ImageBrush(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.IXamlCompositionBrushBase))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.IXamlCompositionBrushBaseProtected))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.IXamlCompositionBrushBaseOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class XamlCompositionBrushBase : global::Windows.UI.Xaml.Media.Brush, global::Windows.UI.Xaml.Media.IXamlCompositionBrushBase, global::Windows.UI.Xaml.Media.IXamlCompositionBrushBaseProtected, global::Windows.UI.Xaml.Media.IXamlCompositionBrushBaseOverrides
	{
		global::Windows.UI.Composition.CompositionBrush global::Windows.UI.Xaml.Media.IXamlCompositionBrushBaseProtected.get_CompositionBrush()
		{
			global::Windows.UI.Composition.CompositionBrush __retVal_1 = this.get_CompositionBrush();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CompositionBrush")]
		protected virtual global::Windows.UI.Composition.CompositionBrush get_CompositionBrush()
		{
			global::Windows.UI.Composition.CompositionBrush __retVal = global::Windows.UI.Xaml.Media.IXamlCompositionBrushBaseProtected__Impl.Stubs.get_CompositionBrush(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.Media.IXamlCompositionBrushBaseProtected.put_CompositionBrush(global::Windows.UI.Composition.CompositionBrush value)
		{
			this.put_CompositionBrush(value);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CompositionBrush")]
		protected virtual void put_CompositionBrush(global::Windows.UI.Composition.CompositionBrush value)
		{
			global::Windows.UI.Xaml.Media.IXamlCompositionBrushBaseProtected__Impl.Stubs.put_CompositionBrush(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Media.IXamlCompositionBrushBaseOverrides.OnConnected()
		{
			this.OnConnected();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnConnected()
		{
			global::Windows.UI.Xaml.Media.IXamlCompositionBrushBaseOverrides__Impl.Stubs.OnConnected(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Media.IXamlCompositionBrushBaseOverrides.OnDisconnected()
		{
			this.OnDisconnected();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnDisconnected()
		{
			global::Windows.UI.Xaml.Media.IXamlCompositionBrushBaseOverrides__Impl.Stubs.OnDisconnected(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public XamlCompositionBrushBase(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.IGradientStop))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class GradientStop : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Media.IGradientStop
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public GradientStop() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Media.GradientStop");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public GradientStop(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.IThemeShadow))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ThemeShadow : global::Windows.UI.Xaml.Media.Shadow, global::Windows.UI.Xaml.Media.IThemeShadow
	{
		public ThemeShadow(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGeometry
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRectangleGeometry
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Rect")]
		void put_Rect(global::Windows.Foundation.Rect value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFontFamily
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBrushFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBrush
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Opacity")]
		double get_Opacity();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Opacity")]
		void put_Opacity(double value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBrushOverrides2
	{
		void PopulatePropertyInfoOverride(
					string propertyName, 
					global::Windows.UI.Composition.AnimationPropertyInfo animationPropertyInfo);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IShadow
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISolidColorBrush
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Color")]
		global::Windows.UI.Color get_Color();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Color")]
		void put_Color(global::Windows.UI.Color value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IImageSource
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITileBrush
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IImageBrush
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ImageFailed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ImageFailed(global::Windows.UI.Xaml.ExceptionRoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ImageFailed")]
		void remove_ImageFailed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ImageOpened")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ImageOpened(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ImageOpened")]
		void remove_ImageOpened(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IXamlCompositionBrushBase
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IXamlCompositionBrushBaseProtected
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CompositionBrush")]
		global::Windows.UI.Composition.CompositionBrush get_CompositionBrush();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CompositionBrush")]
		void put_CompositionBrush(global::Windows.UI.Composition.CompositionBrush value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IXamlCompositionBrushBaseOverrides
	{
		void OnConnected();

		void OnDisconnected();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGradientStop
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IThemeShadow
	{
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum Stretch
	{
		None = 0,
		Fill = 1,
		Uniform = 2,
		UniformToFill = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum BrushMappingMode
	{
		Absolute = 0,
		RelativeToBoundingBox = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum GradientSpreadMethod
	{
		Pad = 0,
		Reflect = 1,
		Repeat = 2,
	}
}

namespace Windows.UI.Xaml.Media.Animation
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Transition>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.Transition>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Media.Animation.Transition>))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TransitionCollection : global::System.__ComObject, global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Transition>, global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.Transition>, global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Media.Animation.Transition>
	{
		int global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.Transition>.Count
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Count(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Transition>)this));
			}
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.Transition>.IsReadOnly
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.IsReadOnly(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Transition>)this));
			}
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.Transition>.Add(global::Windows.UI.Xaml.Media.Animation.Transition item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Add(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.Transition>.Clear()
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Clear(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Transition>)this));
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.Transition>.Contains(global::Windows.UI.Xaml.Media.Animation.Transition item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Contains(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.Transition>.CopyTo(
					global::Windows.UI.Xaml.Media.Animation.Transition[] array, 
					int arrayindex)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.CopyTo(
								this, 
								array, 
								arrayindex
							);
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.Transition>.Remove(global::Windows.UI.Xaml.Media.Animation.Transition item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Remove(
								this, 
								item
							);
		}

		global::Windows.UI.Xaml.Media.Animation.Transition global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Transition>.this[int index]
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Indexer_Get(
									((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Transition>)this), 
									index
								);
			}
			set
			{
				global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Indexer_Set(
									this, 
									index, 
									value
								);
			}
		}

		int global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Transition>.IndexOf(global::Windows.UI.Xaml.Media.Animation.Transition item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.IndexOf(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Transition>.Insert(
					int index, 
					global::Windows.UI.Xaml.Media.Animation.Transition item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Insert(
								this, 
								index, 
								item
							);
		}

		void global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Transition>.RemoveAt(int index)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.RemoveAt(
								((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Transition>)this), 
								index
							);
		}

		global::System.Collections.Generic.IEnumerator<global::Windows.UI.Xaml.Media.Animation.Transition> global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Media.Animation.Transition>.GetEnumerator()
		{
			global::System.RuntimeTypeHandle dummySharedDynamicAdapter = typeof(global::System.Runtime.InteropServices.WindowsRuntime.IIterableSharedReferenceTypesDynamicAdapter<global::Windows.UI.Xaml.Media.Animation.Transition>).TypeHandle;
			return (global::System.Collections.Generic.IEnumerator<global::Windows.UI.Xaml.Media.Animation.Transition>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Media.Animation.Transition>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Media.Animation.Transition>).TypeHandle
							);
		}

		public TransitionCollection(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.Animation.ITransition))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Transition : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Media.Animation.ITransition
	{
		public Transition(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.Animation.ITimeline))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Timeline : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Media.Animation.ITimeline
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Completed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Completed(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Stubs.add_Completed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Completed")]
		public virtual void remove_Completed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Stubs.remove_Completed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Timeline(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.Animation.IStoryboard))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Storyboard : global::Windows.UI.Xaml.Media.Animation.Timeline, global::Windows.UI.Xaml.Media.Animation.IStoryboard
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Storyboard() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Media.Animation.Storyboard");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Children")]
		public global::Windows.UI.Xaml.Media.Animation.TimelineCollection get_Children()
		{
			global::Windows.UI.Xaml.Media.Animation.TimelineCollection __retVal = global::Windows.UI.Xaml.Media.Animation.IStoryboard__Impl.Stubs.get_Children(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public static string GetTargetProperty(global::Windows.UI.Xaml.Media.Animation.Timeline element)
		{
			string retval;
			retval = __Factory_Windows_UI_Xaml_Media_Animation__IStoryboardStatics_GetTargetProperty(
								"Windows.UI.Xaml.Media.Animation.Storyboard", 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static string __Factory_Windows_UI_Xaml_Media_Animation__IStoryboardStatics_GetTargetProperty(
					string typeName, 
					global::Windows.UI.Xaml.Media.Animation.Timeline element)
		{
			string __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.Media.Animation.IStoryboardStatics__Impl.Stubs.GetTargetProperty(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Media.Animation.IStoryboardStatics).TypeHandle
												), 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static void SetTargetProperty(
					global::Windows.UI.Xaml.Media.Animation.Timeline element, 
					string path)
		{
			__Factory_Windows_UI_Xaml_Media_Animation__IStoryboardStatics_SetTargetProperty(
								"Windows.UI.Xaml.Media.Animation.Storyboard", 
								element, 
								path
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_UI_Xaml_Media_Animation__IStoryboardStatics_SetTargetProperty(
					string typeName, 
					global::Windows.UI.Xaml.Media.Animation.Timeline element, 
					string path)
		{
			global::Windows.UI.Xaml.Media.Animation.IStoryboardStatics__Impl.Stubs.SetTargetProperty(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Media.Animation.IStoryboardStatics).TypeHandle
												), 
								element, 
								path
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static string GetTargetName(global::Windows.UI.Xaml.Media.Animation.Timeline element)
		{
			string retval;
			retval = __Factory_Windows_UI_Xaml_Media_Animation__IStoryboardStatics_GetTargetName(
								"Windows.UI.Xaml.Media.Animation.Storyboard", 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static string __Factory_Windows_UI_Xaml_Media_Animation__IStoryboardStatics_GetTargetName(
					string typeName, 
					global::Windows.UI.Xaml.Media.Animation.Timeline element)
		{
			string __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.Media.Animation.IStoryboardStatics__Impl.Stubs.GetTargetName(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Media.Animation.IStoryboardStatics).TypeHandle
												), 
								element
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static void SetTargetName(
					global::Windows.UI.Xaml.Media.Animation.Timeline element, 
					string name)
		{
			__Factory_Windows_UI_Xaml_Media_Animation__IStoryboardStatics_SetTargetName(
								"Windows.UI.Xaml.Media.Animation.Storyboard", 
								element, 
								name
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_UI_Xaml_Media_Animation__IStoryboardStatics_SetTargetName(
					string typeName, 
					global::Windows.UI.Xaml.Media.Animation.Timeline element, 
					string name)
		{
			global::Windows.UI.Xaml.Media.Animation.IStoryboardStatics__Impl.Stubs.SetTargetName(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Media.Animation.IStoryboardStatics).TypeHandle
												), 
								element, 
								name
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Storyboard(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Timeline>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.Timeline>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Media.Animation.Timeline>))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TimelineCollection : global::System.__ComObject, global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Timeline>, global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.Timeline>, global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Media.Animation.Timeline>
	{
		int global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.Timeline>.Count
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Count(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Timeline>)this));
			}
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.Timeline>.IsReadOnly
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.IsReadOnly(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Timeline>)this));
			}
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.Timeline>.Add(global::Windows.UI.Xaml.Media.Animation.Timeline item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Add(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.Timeline>.Clear()
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Clear(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Timeline>)this));
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.Timeline>.Contains(global::Windows.UI.Xaml.Media.Animation.Timeline item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Contains(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.Timeline>.CopyTo(
					global::Windows.UI.Xaml.Media.Animation.Timeline[] array, 
					int arrayindex)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.CopyTo(
								this, 
								array, 
								arrayindex
							);
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.Timeline>.Remove(global::Windows.UI.Xaml.Media.Animation.Timeline item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Remove(
								this, 
								item
							);
		}

		global::Windows.UI.Xaml.Media.Animation.Timeline global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Timeline>.this[int index]
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Indexer_Get(
									((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Timeline>)this), 
									index
								);
			}
			set
			{
				global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Indexer_Set(
									this, 
									index, 
									value
								);
			}
		}

		int global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Timeline>.IndexOf(global::Windows.UI.Xaml.Media.Animation.Timeline item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.IndexOf(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Timeline>.Insert(
					int index, 
					global::Windows.UI.Xaml.Media.Animation.Timeline item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Insert(
								this, 
								index, 
								item
							);
		}

		void global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Timeline>.RemoveAt(int index)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.RemoveAt(
								((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Timeline>)this), 
								index
							);
		}

		global::System.Collections.Generic.IEnumerator<global::Windows.UI.Xaml.Media.Animation.Timeline> global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Media.Animation.Timeline>.GetEnumerator()
		{
			global::System.RuntimeTypeHandle dummySharedDynamicAdapter = typeof(global::System.Runtime.InteropServices.WindowsRuntime.IIterableSharedReferenceTypesDynamicAdapter<global::Windows.UI.Xaml.Media.Animation.Timeline>).TypeHandle;
			return (global::System.Collections.Generic.IEnumerator<global::Windows.UI.Xaml.Media.Animation.Timeline>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Media.Animation.Timeline>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Media.Animation.Timeline>).TypeHandle
							);
		}

		public TimelineCollection(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ObjectKeyFrameCollection : global::System.__ComObject, global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>, global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>, global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>
	{
		int global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>.Count
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Count(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>)this));
			}
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>.IsReadOnly
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.IsReadOnly(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>)this));
			}
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>.Add(global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Add(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>.Clear()
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Clear(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>)this));
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>.Contains(global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Contains(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>.CopyTo(
					global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame[] array, 
					int arrayindex)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.CopyTo(
								this, 
								array, 
								arrayindex
							);
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>.Remove(global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Remove(
								this, 
								item
							);
		}

		global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>.this[int index]
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Indexer_Get(
									((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>)this), 
									index
								);
			}
			set
			{
				global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Indexer_Set(
									this, 
									index, 
									value
								);
			}
		}

		int global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>.IndexOf(global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.IndexOf(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>.Insert(
					int index, 
					global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Insert(
								this, 
								index, 
								item
							);
		}

		void global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>.RemoveAt(int index)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.RemoveAt(
								((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>)this), 
								index
							);
		}

		global::System.Collections.Generic.IEnumerator<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame> global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>.GetEnumerator()
		{
			global::System.RuntimeTypeHandle dummySharedDynamicAdapter = typeof(global::System.Runtime.InteropServices.WindowsRuntime.IIterableSharedReferenceTypesDynamicAdapter<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>).TypeHandle;
			return (global::System.Collections.Generic.IEnumerator<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>).TypeHandle
							);
		}

		public ObjectKeyFrameCollection(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ObjectKeyFrame : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Value")]
		public virtual object get_Value()
		{
			object __retVal = global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Stubs.get_Value(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Value")]
		public virtual void put_Value(object value)
		{
			global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Stubs.put_Value(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "KeyTime")]
		public virtual global::Windows.UI.Xaml.Media.Animation.KeyTime get_KeyTime()
		{
			global::Windows.UI.Xaml.Media.Animation.KeyTime __retVal = global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Stubs.get_KeyTime(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "KeyTime")]
		public virtual void put_KeyTime(global::Windows.UI.Xaml.Media.Animation.KeyTime value)
		{
			global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Stubs.put_KeyTime(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ObjectKeyFrame(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.Animation.IObjectAnimationUsingKeyFrames))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ObjectAnimationUsingKeyFrames : global::Windows.UI.Xaml.Media.Animation.Timeline, global::Windows.UI.Xaml.Media.Animation.IObjectAnimationUsingKeyFrames
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ObjectAnimationUsingKeyFrames() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "KeyFrames")]
		public global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection get_KeyFrames()
		{
			global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection __retVal = global::Windows.UI.Xaml.Media.Animation.IObjectAnimationUsingKeyFrames__Impl.Stubs.get_KeyFrames(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public ObjectAnimationUsingKeyFrames(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.Animation.IDiscreteObjectKeyFrame))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DiscreteObjectKeyFrame : global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame, global::Windows.UI.Xaml.Media.Animation.IDiscreteObjectKeyFrame
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public DiscreteObjectKeyFrame() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Media.Animation.DiscreteObjectKeyFrame");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public DiscreteObjectKeyFrame(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.Animation.INavigationTransitionInfo))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.Animation.INavigationTransitionInfoOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class NavigationTransitionInfo : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Media.Animation.INavigationTransitionInfo, global::Windows.UI.Xaml.Media.Animation.INavigationTransitionInfoOverrides
	{
		string global::Windows.UI.Xaml.Media.Animation.INavigationTransitionInfoOverrides.GetNavigationStateCore()
		{
			string __retVal_1 = this.GetNavigationStateCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetNavigationStateCore()
		{
			string __retVal = global::Windows.UI.Xaml.Media.Animation.INavigationTransitionInfoOverrides__Impl.Stubs.GetNavigationStateCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.Media.Animation.INavigationTransitionInfoOverrides.SetNavigationStateCore(string navigationState)
		{
			this.SetNavigationStateCore(navigationState);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void SetNavigationStateCore(string navigationState)
		{
			global::Windows.UI.Xaml.Media.Animation.INavigationTransitionInfoOverrides__Impl.Stubs.SetNavigationStateCore(
								this, 
								navigationState
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public NavigationTransitionInfo(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.Animation.IPointerUpThemeAnimation))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class PointerUpThemeAnimation : global::Windows.UI.Xaml.Media.Animation.Timeline, global::Windows.UI.Xaml.Media.Animation.IPointerUpThemeAnimation
	{
		public PointerUpThemeAnimation(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITransition
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITimeline
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Completed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Completed(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Completed")]
		void remove_Completed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStoryboardStatics
	{
		string GetTargetProperty(global::Windows.UI.Xaml.Media.Animation.Timeline element);

		void SetTargetProperty(
					global::Windows.UI.Xaml.Media.Animation.Timeline element, 
					string path);

		string GetTargetName(global::Windows.UI.Xaml.Media.Animation.Timeline element);

		void SetTargetName(
					global::Windows.UI.Xaml.Media.Animation.Timeline element, 
					string name);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStoryboard
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Children")]
		global::Windows.UI.Xaml.Media.Animation.TimelineCollection get_Children();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IObjectKeyFrame
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Value")]
		object get_Value();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Value")]
		void put_Value(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "KeyTime")]
		global::Windows.UI.Xaml.Media.Animation.KeyTime get_KeyTime();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "KeyTime")]
		void put_KeyTime(global::Windows.UI.Xaml.Media.Animation.KeyTime value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IObjectAnimationUsingKeyFrames
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "KeyFrames")]
		global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection get_KeyFrames();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDiscreteObjectKeyFrame
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationTransitionInfo
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationTransitionInfoOverrides
	{
		string GetNavigationStateCore();

		void SetNavigationStateCore(string navigationState);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPointerUpThemeAnimation
	{
	}
}

namespace Windows.UI.Xaml.Navigation
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Navigation.INavigationEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NavigationEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Navigation.INavigationEventArgs
	{
		public NavigationEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NavigatingCancelEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs
	{
		public NavigatingCancelEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Navigation.INavigationFailedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NavigationFailedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Navigation.INavigationFailedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourcePageType")]
		public global::System.Type get_SourcePageType()
		{
			global::System.Type __retVal = global::Windows.UI.Xaml.Navigation.INavigationFailedEventArgs__Impl.Stubs.get_SourcePageType(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public NavigationFailedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigatingCancelEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationFailedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourcePageType")]
		global::System.Type get_SourcePageType();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void NavigatedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Navigation.NavigationEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void NavigatingCancelEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void NavigationFailedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Navigation.NavigationFailedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void NavigationStoppedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Navigation.NavigationEventArgs e);
}

